{"version":3,"file":"src_app_components_new-sale_new-sale_component_ts.js","mappings":"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","sources":["./src/app/components/new-sale/new-sale-create-update/new-sale-create-update.component.ts","./src/app/components/new-sale/new-sale-create-update/new-sale-create-update.component.html","./src/app/components/new-sale/new-sale.component.ts","./src/app/components/new-sale/new-sale.component.html","./src/app/models/clients.ts","./src/app/models/products.ts","./src/app/models/sales.ts","./src/app/models/sites.ts","./src/app/services/client/clients.service.ts","./src/app/services/product/products.service.ts","./src/app/services/sale/sales.service.ts","./src/app/services/site/sites.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, UntypedFormControl, Validators } from '@angular/forms';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef\n} from '@angular/material/dialog';\nimport { Sale } from '../../../models/sales';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AsyncPipe, NgForOf, NgIf } from '@angular/common';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatOptionModule } from '@angular/material/core';\nimport { map } from 'rxjs';\nimport { Product } from '../../../models/products';\nimport { ProductsService } from '../../../services/product/products.service';\nimport { Site } from '../../../models/sites';\nimport { SitesService } from '../../../services/site/sites.service';\nimport { SalesService } from '../../../services/sale/sales.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'vex-new-sale-create-update',\n  templateUrl: './new-sale-create-update.component.html',\n  styleUrls: ['./new-sale-create-update.component.scss'],\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatDialogModule,\n    NgIf,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    AsyncPipe,\n    MatAutocompleteModule,\n    MatOptionModule,\n    NgForOf\n  ]\n})\nexport class NewSaleCreateUpdateComponent implements OnInit {\n   id = 0;\n  siteId: number=0;\n  siteName: string =\"\";\n  productId : number=0;\n  products:  Product[] = [] ;\n  sites:  Site[] = [] ;\n  productName: string = \"\";\n\n\n  form = this.fb.group({\n    id: [0, Validators.required],\n    site_id: [this.defaults?.site_id || ''],\n    site: [this.defaults?.site || ''],\n    product_id: [this.defaults?.product_id || ''],\n    product: [this.defaults?.product || '',Validators.required],\n    pU: [this.defaults?.pU|| '',[Validators.required, Validators.min(1)]],\n    quantity_sold: [this.defaults?.quantity_sold,[Validators.required, Validators.min(1)]],\n    sale_date: [this.defaults?.sale_date, ],\n    step: [this.defaults?.step, ]\n  });\n  mode: 'create' | 'update' = 'create';\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public defaults: Sale | undefined,\n    private dialogRef: MatDialogRef<NewSaleCreateUpdateComponent>,\n    private fb: FormBuilder,\n    private productService: ProductsService,\n    private siteService: SitesService,\n    private salesService: SalesService,\n    private snackbar: MatSnackBar\n  ) {}\n  getProducts() {\n    return this.productService.getProducts().pipe(\n      map((result: any) => {\n        this.products = result.data;\n\n        return this.products.map((product) => new Product(product));\n      })\n    );\n  }\n  getSites() {\n    return this.siteService.getSites().pipe(\n      map((result: any) => {\n        this.sites = result.data;\n\n        return this.sites.map((site) => new Site(site));\n      })\n    );\n  }\n  ngOnInit() {\n    if (this.defaults) {\n      this.mode = 'update';\n    } else {this.getProducts().subscribe(products => {\n      this.products = products;\n      this.getSites().subscribe(sites => {\n        this.sites = sites;\n       \n      });\n    });\n      this.defaults = {} as Sale;\n    }\n    this.form.patchValue(this.defaults);\n    \n\n  }\n  save() {\n    if (this.mode === 'create') {\n      this.createSale();\n      let sale = new Sale(this.form.value);\n\n    } else if (this.mode === 'update') {\n      this.updateSale();\n    }\n  }\n  createSale() {\n    this.form.get('product_id')?.setValue(this.productId);\n    this.form.get('site_id')?.setValue(this.siteId);\n    this.form.get('site')?.setValue(this.siteName);\n    const sale = this.form.value;\n\n\n    this.dialogRef.close(sale);\n  }\n  updateSale() {\n    const sales = this.form.value;\n    const quantity_sold = Number(this.form.get('quantity_sold')?.value || 0);\n\n    if (!this.defaults) {\n      throw new Error(\n        'sales ID does not exist, this roles cannot be updated'\n      );\n    }\n\n    sales.id = this.defaults.id;\n    this.dialogRef.close(sales);\n  }\n\n  isCreateMode() {\n    return this.mode === 'create';\n  }\n\n  isUpdateMode() {\n    return this.mode === 'update';\n  }\n  getProductNameById(id: number): string {\n    this.productId=id;\n    const product = this.products.find(p => p.id === id);\n    this.productName = product ? product.name : '';\n    \n    this.form.get('product')?.setValue(this.productName);\n    return product ? product.name : '';\n  }\n  productCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\n  getSiteNameById(id: number): string {\n    this.siteId=id;\n    const site = this.sites.find(s => s.id === id);\n    this.siteName = site ? site.name : '';\n    return site ? site.name : '';\n  }\n  siteCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\n  showSiteField = false;\n}\n\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\n    <div class=\"flex items-center\" mat-dialog-title>\n      <h2 *ngIf=\"form.controls.id.value\" class=\"headline m-0 flex-auto\">\n        {{ form.controls.product.value }}\n      </h2>\n      <h2 *ngIf=\"!form.controls.id.value\" class=\"headline m-0 flex-auto\">\n        Nouvelles Ventes\n      </h2>\n      <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\n      </button>\n    </div>\n  \n    <mat-divider class=\"text-border\"></mat-divider>\n  \n    <mat-dialog-content class=\"flex flex-col\">\n      <!-- Code pour le champ \"Site\" -->\n      \n  \n      <!-- Code pour le champ \"Selectionner Produit\" -->\n      <mat-form-field *ngIf=\"isCreateMode()\" class=\"w-300 max-w-full\">\n        <mat-label>Selectionner Produit</mat-label>\n        <input [formControl]=\"productCtrl\" [matAutocomplete]=\"auto\" matInput [value]=\"getProductNameById(productCtrl.value)\" />\n        <mat-autocomplete #auto=\"matAutocomplete\">\n          <mat-option *ngFor=\"let product of products\" [value]=\"product.id\">\n            <span class=\"flex items-center\">\n              <span class=\"flex flex-col\">\n                {{ product.name }}\n              </span>\n            </span>\n          </mat-option>\n        </mat-autocomplete>\n        <button (click)=\"productCtrl.reset()\" *ngIf=\"productCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\n          <mat-icon svgIcon=\"mat:close\"></mat-icon>\n        </button>\n        <button *ngIf=\"!productCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\n          <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\n        </button>\n        <mat-error *ngIf=\"productCtrl.invalid\">Veuillez sélectionner un produit</mat-error>\n      </mat-form-field>\n  \n      <!-- Code pour le champ \"Quantité\" -->\n      <mat-form-field class=\"flex-auto\">\n        <mat-label>Quantité</mat-label>\n        <input formControlName=\"quantity_sold\" matInput required min=1 />\n        <mat-icon matIconPrefix svgIcon=\"mat:number\"></mat-icon>\n        <mat-error *ngIf=\"form.get('quantity_sold')?.hasError('required')\">\n          Quantité requise\n        </mat-error>\n        <mat-error *ngIf=\"form.get('quantity_sold')?.hasError('min')\">\n          Quantité doit être au moins 1\n        </mat-error>\n      </mat-form-field>\n  \n      <!-- Code pour le champ \"Prix Unitaire\" -->\n      <mat-form-field class=\"flex-auto\">\n        <mat-label>Prix Unitaire</mat-label>\n        <input formControlName=\"pU\" matInput required min=1 />\n        <mat-icon matIconPrefix svgIcon=\"mat:number\"></mat-icon>\n        <mat-error *ngIf=\"form.get('pU')?.hasError('required')\">\n          Prix requise\n        </mat-error>\n        <mat-error *ngIf=\"form.get('pU')?.hasError('min')\">\n          Prix doit être au moins 1\n        </mat-error>\n      </mat-form-field>\n  \n    </mat-dialog-content>\n  \n    <mat-dialog-actions align=\"end\">\n      <button mat-button mat-dialog-close type=\"button\">Annuler</button>\n      <button *ngIf=\"isCreateMode()  && form.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\">\n        Ajouter Vente\n      </button>\n      <button *ngIf=\"isUpdateMode()  && form.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\">\n        Modifier Vente\n      </button>\n    </mat-dialog-actions>\n  </form>\n  ","import {\n  AfterViewInit,\n  Component,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\n\nimport { NewSaleCreateUpdateComponent } from './new-sale-create-update/new-sale-create-update.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\nimport { stagger40ms } from '@vex/animations/stagger.animation';\nimport {\n  FormBuilder,\n  FormControl,\n  FormsModule,\n  ReactiveFormsModule,\n  UntypedFormControl,\n  Validators\n} from '@angular/forms';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgClass, NgFor, NgIf } from '@angular/common';\nimport { VexPageLayoutContentDirective } from '@vex/components/vex-page-layout/vex-page-layout-content.directive';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { VexBreadcrumbsComponent } from '@vex/components/vex-breadcrumbs/vex-breadcrumbs.component';\nimport { VexPageLayoutHeaderDirective } from '@vex/components/vex-page-layout/vex-page-layout-header.directive';\nimport { VexPageLayoutComponent } from '@vex/components/vex-page-layout/vex-page-layout.component';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { SalesService } from '../../services/sale/sales.service';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { Sale } from '../../models/sales';\nimport { Product } from '../../models/products';\nimport { Client } from 'src/app/models/clients';\nimport { ClientsService } from 'src/app/services/client/clients.service';\nimport { LocalStorageService } from 'src/app/services/local-storage/local-storage.service';\nimport { Roles } from 'src/app/models/roles';\nimport { InvoiceService } from 'src/app/services/invoice/invoice.service';\n\n@Component({\n  selector: 'vex-new-sale',\n  templateUrl: './new-sale.component.html',\n  styleUrls: ['./new-sale.component.scss'],\n  standalone : true,\n  animations: [fadeInUp400ms, stagger40ms],\n  imports: [\n    VexPageLayoutComponent,\n    VexPageLayoutHeaderDirective,\n    VexBreadcrumbsComponent,\n    MatButtonToggleModule,\n    ReactiveFormsModule,\n    VexPageLayoutContentDirective,\n    NgIf,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    NgFor,\n    NgClass,\n    MatPaginatorModule,\n    FormsModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSnackBarModule\n  ]\n})\nexport class NewSaleComponent implements OnInit, AfterViewInit {\n  layoutCtrl = new FormControl('boxed');\n  subject$: ReplaySubject<Sale[]> = new ReplaySubject<Sale[]>(1);\n  data$: Observable<Sale[]> = this.subject$.asObservable();\n  @Input()\n  columns: TableColumn<Sale>[] = [\n    {\n      label: 'Nom Produit',\n      property: 'product',\n      type: 'text',\n      visible: true\n    },\n    {\n      label: 'Quantité Vendu',\n      property: 'quantity_sold',\n      type: 'text',\n      visible: true\n    },\n    {\n      label: 'Prix Unitaire(FCFA)',\n      property: 'pU',\n      type: 'text',\n      visible: true\n    },\n    {\n      label: 'Prix Total(FCFA)',\n      property: 'pTotal',\n      type: 'text',\n      visible: true\n    },\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\n  ];\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 20, 50];\n  dataSource!: MatTableDataSource<Sale>;\n  selection = new SelectionModel<Sale>(true, []);\n  searchCtrl = new UntypedFormControl();\n  form = this.fb.group({\n    amount_payed: [0, [Validators.required, Validators.min(1)]],\n  });\n\n\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\n\n  private readonly destroyRef: DestroyRef = inject(DestroyRef);\n  site_id!:number;\n  invoice_id : number = 0;\n  clientId:number=0;\n  userConnected!: any;\n  siteName !: string;\n  salesList: Sale [] = [];\n  client !: Client;\n  totalVente: number = 0;\n  userRoles!: Roles;\n\n\n\n  constructor(private dialog: MatDialog,\n              private salesService: SalesService,\n              private invoiceService: InvoiceService,\n              private clientsService: ClientsService,\n              private snackbar: MatSnackBar,\n              private fb: FormBuilder,\n              private localStorage: LocalStorageService\n  ) {}\n\n  get visibleColumns() {\n    return this.columns\n      .filter((column) => column.visible)\n      .map((column) => column.property);\n  }\n\n  getSaleByInvoice(){\n    return this.salesService.getSaleByInvoice(this.invoice_id).pipe(map((res:any) => {\n        this.salesList = res.data;\n        return this.salesList.map((sale)=>new Sale(sale));\n\n    })\n    );\n  }\n\n  getClient(clientId:any){\n    return this.clientsService.getClientById(clientId).pipe(map((res:any) => {\n        this.client = new Client(res.data);\n        \n    })\n    );\n  }\n\n  getClientInvoice(clientId:any){\n    return this.clientsService.getClientInvoice(clientId).pipe(map((res:any) => {\n      if (res.status === 200) {\n        this.invoice_id = res.data.id;\n        this.getSaleByInvoice().subscribe((sales) => {\n          this.subject$.next(sales);\n         });\n        \n      }\n        \n    })\n    );\n  }\n\n  ngOnInit() {\n    this.userRoles = new Roles(JSON.parse(this.localStorage.getData('dataRole') ?? 'null'));\n    if (history.state.clientId) {\n      this.clientId=history.state.clientId;\n      this.getClient(this.clientId).subscribe((client) => {\n        this.getClientInvoice(this.client.id).subscribe((invoice) => {\n\n        });\n       });\n      \n    }else{\n      if (history.state.invoiceId) {\n        this.invoice_id = history.state.invoiceId;\n        this.getSaleByInvoice().subscribe((sales) => {\n          this.subject$.next(sales);\n          if(this.salesList[0].client_id){\n            this.clientId = this.salesList[0].client_id;\n            this.getClient(this.clientId).subscribe((client) => {\n              this.client = new Client(client);\n             });\n          }\n         });\n        \n      }\n\n    }\n    this.userConnected = localStorage.getItem('dataUser');\n    this.userConnected = JSON.parse(this.userConnected);\n    this.site_id = this.userConnected.site_id;\n    \n\n    this.dataSource = new MatTableDataSource();\n\n    this.data$.pipe(filter<any>(Boolean)).subscribe((sales) => {\n      this.salesList = sales;\n      this.totalVente = this.salesList.reduce((total, sale) => total + sale.quantity_sold*sale.pU, 0);\n      this.dataSource.data = sales;\n    });\n\n    this.searchCtrl.valueChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((value) => this.onFilterChange(value));\n  }\n\n  ngAfterViewInit() {\n    if (this.paginator) {\n      this.dataSource.paginator = this.paginator;\n    }\n\n    if (this.sort) {\n      this.dataSource.sort = this.sort;\n    }\n  }\n  createSale() {\n    this.dialog\n      .open(NewSaleCreateUpdateComponent)\n      .afterClosed()\n      .subscribe((sale: Sale) => {\n        if (sale) {\n          if(this.clientId!==0){\n            sale.client_id = this.clientId;\n          }\n          sale.site_id = this.site_id;\n          const newSale= new Sale(sale);\n          if (this.invoice_id === 0) {\n            newSale.step = 0;\n            this.salesService.addSales(newSale).subscribe((result:any) => {\n              console.log(result);\n              this.snackbar.open(\n                result.message,\n                'MERCI',\n                {\n                  duration: 1500\n                }\n              );\n              if (result.status === 200) {\n                this.invoice_id = result.data.invoice_id;\n                newSale.id = result.data.id;\n                this.salesList.unshift(newSale);\n                this.subject$.next(this.salesList);\n                \n              }\n            });\n          } else {\n            newSale.invoice_id = this.invoice_id;\n            \n            newSale.step = 0;\n            this.salesService.addSales(newSale).subscribe((result:any) => {\n              console.log(result);\n              this.snackbar.open(\n                result.message,\n                'MERCI',\n                {\n                  duration: 1500\n                }\n              );\n              if (result.status === 200) {\n                this.invoice_id = result.data.invoice_id;\n                newSale.id = result.data.id;\n                this.salesList.unshift(newSale);\n                this.subject$.next(this.salesList);\n              }\n            });\n            \n          }\n          \n        }\n        \n        \n      });\n  }\n  updateSale(sale: Sale) {\n    this.dialog\n      .open(NewSaleCreateUpdateComponent, {\n        data: sale\n      })\n      .afterClosed()\n      .subscribe((updateSale) => {\n\n        if (updateSale) {\n          sale.site_id = this.site_id;\n          sale.step = 0;\n          this.salesService.updateSale(updateSale).subscribe((result:any) => {\n            if (result.status === 200 ) {\n              const index = this.salesList.findIndex(\n                (existingSale) => existingSale.id === updateSale.id\n              );\n              this.salesList[index] = new Sale(updateSale);\n              this.subject$.next(this.salesList);\n              this.snackbar.open(\n\n                \"Vente modifier avec succés\",\n\n                'MERCI',\n                {\n                  duration: 1000\n                }\n              );\n            }else{\n              this.snackbar.open(\n                \"Echec Modification Vente\",\n                'MERCI DE REESSAYER',\n                {\n                  duration: 1000\n                }\n              );\n\n            }\n          });\n\n        }\n      });\n  }\n  deleteSale(sale: Sale) {\n    \n    this.salesService.deleteSale(sale).subscribe((result:any) => {\n      if (result.status === 200 ) {\n        this.salesList.splice(\n          this.salesList.findIndex(\n            (existingSale) => existingSale.id === sale.id\n          ),\n          1\n        );\n        this.selection.deselect(sale);\n        this.subject$.next(this.salesList);\n        this.snackbar.open(\n\n          \"Vente Supprimer avec succés\",\n\n          'MERCI',\n          {\n            duration: 1000\n          }\n        );\n      }else{\n        this.snackbar.open(\n          \"Echec Suppression Vente\",\n          'MERCI DE REESSAYER',\n          {\n            duration: 1000\n          }\n        );\n\n      }\n    });\n    //\n    // this.salesList.splice(\n    //   this.salesList.findIndex(\n    //     (existingSale) => existingSale.id === sale.id\n    //   ),\n    //   1\n    // );\n    // this.selection.deselect(sale);\n    // this.subject$.next(this.salesList);\n  }\n*\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  toggleColumnVisibility(column: TableColumn<Product>, event: Event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\n  }\n\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\n    return column.property;\n  }\n\n  onLabelChange(change: MatSelectChange, row: Sale) {\n    const index = this.salesList.findIndex((s) => s === row);\n    this.subject$.next(this.salesList);\n  }\n\n  payer(){\n\n    console.log(this.form.get('amount_payed')?.value);\n    const amount = this.form.get('amount_payed')?.value;\n    if (amount) {\n      this.invoiceService.validateClientInvoice(this.invoice_id,amount).subscribe((result:any) => {\n        if (result.status == 200 ) {\n          \n          this.snackbar.open(\n  \n            \"Vente Effectuer avec succés\",\n  \n            'MERCI',\n            {\n              duration: 1000\n            }\n          );\n        }else{\n          this.snackbar.open(\n            \"Echec Vente\",\n            'MERCI DE REESSAYER',\n            {\n              duration: 1000\n            }\n          );\n  \n        }\n      });\n    }\n    \n    \n  }\n}\n\n\n","<vex-page-layout>\n    <vex-page-layout-header *ngIf=\"!['CAISSIERE'].includes(userRoles.role_name)\"\n      class=\" flex flex-col items-start justify-center\">\n      \n    </vex-page-layout-header>\n    <vex-page-layout-header *ngIf=\"['CAISSIERE'].includes(userRoles.role_name)\"\n      class=\" pb-10 flex flex-col items-start justify-center\">\n      <form  (ngSubmit)=\"payer()\" [formGroup]=\"form\">\n        <mat-form-field class=\"flex-auto\">\n          <input formControlName=\"amount_payed\" type=\"number\" matInput />\n          <mat-error *ngIf=\"form.get('amount_payed')?.hasError('required')\">\n            Montant requise\n          </mat-error>\n          <mat-error *ngIf=\"form.get('amount_payed')?.hasError('min')\">\n            Montant invalide\n          </mat-error>\n        </mat-form-field>\n        <button style=\"margin-left: 16px;\" color=\"primary\" mat-flat-button type=\"submit\">\n          Payer\n        </button>\n      </form>\n    </vex-page-layout-header>\n  \n    <vex-page-layout-content\n      [class.container]=\"layoutCtrl.value === 'boxed'\"\n      [class.px-6]=\"layoutCtrl.value === 'fullwidth'\"\n      class=\"-mt-6\">\n      <div class=\"card overflow-auto -mt-16\">\n        <div\n          class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\n          <h2\n            class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\n            <span *ngIf=\"selection.isEmpty() && clientId === 0\">Nouvelle Vente: {{totalVente}}</span>\n            <span *ngIf=\"selection.isEmpty() && clientId !== 0\">{{client.full_name}}: {{totalVente}} F</span>\n            <span *ngIf=\"selection.hasValue()\"\n            >{{ selection.selected.length }} sale<span\n              *ngIf=\"selection.selected.length > 1\"\n            >s</span\n            >\n              selected</span\n            >\n          </h2>\n  \n          <div *ngIf=\"selection.hasValue()\" class=\"mr-4 pr-4 border-r flex-none\">\n            \n  \n            <button\n              color=\"primary\"\n              mat-icon-button\n              matTooltip=\"Another action\"\n              type=\"button\">\n              <mat-icon svgIcon=\"mat:folder\"></mat-icon>\n            </button>\n          </div>\n  \n          <mat-form-field subscriptSizing=\"dynamic\">\n            <mat-icon matIconPrefix svgIcon=\"mat:search\"></mat-icon>\n            <input\n              matInput\n              [formControl]=\"searchCtrl\"\n              placeholder=\"Search&hellip;\"\n              type=\"text\" />\n          </mat-form-field>\n  \n          <span class=\"flex-1\"></span>\n  \n          <button\n            [matMenuTriggerFor]=\"columnFilterMenu\"\n            class=\"ml-4 flex-none\"\n            mat-icon-button\n            matTooltip=\"Filter Columns\"\n            type=\"button\">\n            <mat-icon svgIcon=\"mat:filter_list\"></mat-icon>\n          </button>\n  \n          <button *ngIf=\"['SUPERVISEUR','SUPER_ADMIN'].includes(userRoles.role_name)\"\n            (click)=\"createSale()\"\n            class=\"ml-4 flex-none\"\n            color=\"primary\"\n            mat-mini-fab\n            matTooltip=\"Add sale\"\n            type=\"button\">\n            <mat-icon svgIcon=\"mat:add\"></mat-icon>\n          </button>\n        </div>\n  \n        <table\n          @stagger\n          [dataSource]=\"dataSource\"\n          class=\"w-full\"\n          mat-table\n          matSort>\n          <!--- Note that these columns can be defined in any order.\n                The actual rendered columns are set as a property on the row definition\" -->\n  \n          <!-- Checkbox Column -->\n          <ng-container matColumnDef=\"checkbox\">\n            <th *matHeaderCellDef mat-header-cell>\n              <mat-checkbox\n                (change)=\"$event ? masterToggle() : null\"\n                [checked]=\"selection.hasValue() && isAllSelected()\"\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                color=\"primary\">\n              </mat-checkbox>\n            </th>\n            <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\n              <mat-checkbox\n                (change)=\"$event ? selection.toggle(row) : null\"\n                (click)=\"$event.stopPropagation()\"\n                [checked]=\"selection.isSelected(row)\"\n                color=\"primary\">\n              </mat-checkbox>\n            </td>\n          </ng-container>\n  \n          <!-- Image Column -->\n          <ng-container matColumnDef=\"image\">\n            <th *matHeaderCellDef mat-header-cell></th>\n            <td *matCellDef=\"let row\" class=\"w-8 min-w-8 p-0\" mat-cell>\n              <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\" />\n            </td>\n          </ng-container>\n  \n          <!-- Text Columns -->\n          <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\n            <ng-container\n              *ngIf=\"column.type === 'text'\"\n              [matColumnDef]=\"column.property\">\n              <th\n                *matHeaderCellDef\n                class=\"uppercase\"\n                mat-header-cell\n                mat-sort-header>\n                {{ column.label }}\n              </th>\n              <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\n                {{ row[column.property] }}\n              </td>\n            </ng-container>\n          </ng-container>\n          <ng-container matColumnDef=\"contact\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\n            <td *matCellDef=\"let row\" mat-cell>\n              <div class=\"flex\">\n                <a\n                  (click)=\"$event.stopPropagation()\"\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center hover:bg-hover text-primary-600 bg-primary-600/10\"\n                  mat-icon-button>\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\n                </a>\n  \n                <a\n                  (click)=\"$event.stopPropagation()\"\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal-600 bg-teal/10\"\n                  mat-icon-button>\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\n                </a>\n  \n                <a\n                  (click)=\"$event.stopPropagation()\"\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green-600 bg-green-600/10\"\n                  mat-icon-button>\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\n                </a>\n              </div>\n            </td>\n          </ng-container>\n  \n          <!-- Label Column -->\n          <ng-container matColumnDef=\"labels\">\n            <th\n              *matHeaderCellDef\n              class=\"uppercase\"\n              mat-header-cell\n              mat-sort-header>\n            </th>\n            <td *matCellDef=\"let row\" mat-cell>\n              <div\n                (click)=\"$event.stopPropagation()\"\n                class=\"flex items-center gap-1\">\n                <div\n                  class=\"bg-base text-hint cursor-pointer hover:bg-hover flex-none flex items-center justify-center\">\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:add\"></mat-icon>\n                </div>\n              </div>\n            </td>\n          </ng-container>\n  \n          <!-- Action Column -->\n          <ng-container matColumnDef=\"actions\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\n            <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\n              <button  \n                (click)=\"$event.stopPropagation()\"\n                [matMenuTriggerData]=\"{ sale: row }\"\n                [matMenuTriggerFor]=\"actionsMenu\"\n                mat-icon-button\n                type=\"button\">\n                <mat-icon svgIcon=\"mat:more_horiz\"></mat-icon>\n              </button>\n            </td>\n          </ng-container>\n  \n          <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n          <tr\n           \n            *matRowDef=\"let row; columns: visibleColumns\"\n            @fadeInUp\n            class=\"hover:bg-hover transition duration-400 ease-out-swift cursor-pointer\"\n            mat-row></tr>\n        </table>\n  \n  \n        <mat-paginator\n          [pageSizeOptions]=\"pageSizeOptions\"\n          [pageSize]=\"pageSize\"\n          class=\"sticky left-0\"></mat-paginator>\n      </div>\n    </vex-page-layout-content>\n  </vex-page-layout>\n  \n  <mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n    <button\n      (click)=\"toggleColumnVisibility(column, $event)\"\n      *ngFor=\"let column of columns\"\n      class=\"mat-menu-item block\">\n      <mat-checkbox\n        (click)=\"$event.stopPropagation()\"\n        [(ngModel)]=\"column.visible\"\n        color=\"primary\">\n        {{ column.label }}\n      </mat-checkbox>\n    </button>\n  </mat-menu>\n  \n  <mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n    <ng-template  *ngIf=\"['SUPERVISEUR','SUPER_ADMIN'].includes(userRoles.role_name)\" let-sale=\"sale\" matMenuContent>\n      <button (click)=\"updateSale(sale)\" mat-menu-item>\n        <mat-icon svgIcon=\"mat:edit\"></mat-icon>\n        <span>Modifier</span>\n      </button>\n     <button (click)=\"deleteSale(sale)\" mat-menu-item>\n       <mat-icon svgIcon=\"mat:delete\"></mat-icon>\n       <span>Supprimer</span>\n     </button>\n    </ng-template>\n  </mat-menu>\n  ","import { trigger } from '@angular/animations';\r\nimport { Account } from './accounts';\r\n\r\nexport class Client {\r\n  id: number;\r\n  full_name: string;\r\n  phone: string;\r\n  address: string;\r\n  balance: number;\r\n  site_id: number;\r\n  account_id: number;\r\n\r\n  constructor(client: any) {\r\n    this.id = client.id;\r\n    this.full_name = client.full_name;\r\n    this.phone = client.phone;\r\n    this.address = client.address;\r\n    this.balance = (client.account && client.account.balance) ? client.account.balance : 0;\r\n    this.account_id = (client.account && client.account.id) ? client.account.id : 0;\r\n    this.site_id = client.site_id\r\n\r\n     // this.hasAccount = true;\r\n  }\r\n\r\n}\r\n","export class Product {\r\n  id: number;\r\n  name: string;\r\n  quality: string;\r\n  conversion_rate: number;\r\n\r\n  constructor(product: any) {\r\n    this.id = product.id;\r\n    this.name = product.name;\r\n    this.quality = product.quality;\r\n    this.conversion_rate = product.conversion_rate;\r\n  }\r\n\r\n}\r\n","export class Sale {\r\n\r\n  id: number;\r\n  site_id: number;\r\n  step: number;\r\n  client_id: number;\r\n  invoice_id!: number;\r\n  product_id: number;\r\n  quantity_sold: number;\r\n  sale_date: string;\r\n  pU:number;\r\n  pTotal:number;\r\n  site: string;\r\n  product: string;\r\n  callDate: string;\r\n\r\n  constructor(sale: any) {\r\n    const today = new Date(Date.now());\r\n    this.id = sale.id;\r\n    this.site_id = sale.site_id;\r\n    this.product_id = sale.product_id;\r\n    this.quantity_sold = sale.quantity_sold;\r\n    this.sale_date = sale.sale_date ? sale.sale_date : today.toISOString().substring(0,10);\r\n    this.pU = sale.pU;\r\n    this.pTotal = sale.pU*sale.quantity_sold;\r\n    this.product = (sale.product && sale.product.name) ? sale.product.name  : (sale.product)? sale.product: '';\r\n    this.site = (sale.site && sale.site.name) ? sale.site.name : (sale.site)?  sale.site : '';\r\n    this.callDate = this.formatDate(new Date(this.sale_date));\r\n    this.client_id = sale.client_id;\r\n    this.step = sale.step;\r\n\r\n\r\n  }\r\n  private formatDate(date: Date): string {\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const monthNames = [\r\n      'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\r\n      'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const year = date.getFullYear().toString();\r\n    return `${day} ${month} ${year}`;\r\n  }\r\n\r\n\r\n\r\n}\r\n","export class Site {\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n\r\n  constructor(site?: any) {\r\n    if (site) {\r\n      this.id = site.id;\r\n      this.name = site.name;\r\n      this.address = site.address;\r\n    } else {\r\n      this.id = 0;\r\n      this.name = '';\r\n      this.address = '';\r\n    }\r\n  }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Client } from 'src/app/models/clients';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientsService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n\r\n\r\n\r\n  getClientsBySite(site_id: number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/clients/site/${site_id}`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getClientById(client_id: number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/clients/${client_id}`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getClientInvoice(client_id: number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/clients/${client_id}/invoice`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  // getAccountByI(id: number):Observable<any>{\r\n  //   return this.httpClient.get(`${this.BASE_URL}/clients/account/${site_id}`, {... this.localStorage.getAuthorization()});\r\n  //\r\n  // }\r\n\r\n  addClients(client:Client):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/clients`, client,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  updateClient(client:Client):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/clients/`+client.id, client,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Product } from 'src/app/models/products';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  \r\n\r\n  getProducts():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/products`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  getProductNotInStock(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/productsWithoutStock`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  addProduct(product:Product):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/products`, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateProduct(product:Product):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/products/`+product.id, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  checkProductExistsInStock(product:number,site:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+product+`/product/`+site+`/checkProductExistsInSiteStock`,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n\r\n  \r\n}\r\n","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from '../../models/sites';\r\nimport { Sale } from '../../models/sales';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SalesService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n\r\n  getSalesById(siteID: number){\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/${siteID}/sales`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  getSaleByInvoice(invoiceID: number){\r\n    return this.httpClient.get(`${this.BASE_URL}/invoices/${invoiceID}/sale`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  addSales(sale:Sale):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/sales`, sale,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  updateSale(sale:Sale):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/sales/`+sale.id, sale,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  deleteSale(sale:Sale):Observable<any>{\r\n    return this.httpClient.delete(`${this.BASE_URL}/sales/`+sale.id, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SitesService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  getSites():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  addSite(site:Site):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/sites`, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateSite(site:Site):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/sites/`+site.id, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSite(id:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+id, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSiteStocks(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/stocks`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n}\r\n"],"names":["ReactiveFormsModule","UntypedFormControl","Validators","MAT_DIALOG_DATA","MatDialogModule","Sale","MatInputModule","MatFormFieldModule","MatDividerModule","MatIconModule","MatMenuModule","MatButtonModule","NgForOf","NgIf","MatAutocompleteModule","MatOptionModule","map","Product","Site","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","form","controls","product","value","ɵɵproperty","product_r14","id","name","ɵɵlistener","NewSaleCreateUpdateComponent_mat_form_field_8_button_7_Template_button_click_0_listener","ɵɵrestoreView","_r16","ctx_r15","ɵɵnextContext","ɵɵresetView","productCtrl","reset","ɵɵelement","ɵɵtemplate","NewSaleCreateUpdateComponent_mat_form_field_8_mat_option_6_Template","NewSaleCreateUpdateComponent_mat_form_field_8_button_7_Template","NewSaleCreateUpdateComponent_mat_form_field_8_button_8_Template","NewSaleCreateUpdateComponent_mat_form_field_8_mat_error_9_Template","ctx_r2","_r9","getProductNameById","products","invalid","NewSaleCreateUpdateComponent","constructor","defaults","dialogRef","fb","productService","siteService","salesService","snackbar","siteId","siteName","productId","sites","productName","group","required","site_id","site","product_id","pU","min","quantity_sold","sale_date","step","mode","siteCtrl","showSiteField","getProducts","pipe","result","data","getSites","ngOnInit","subscribe","patchValue","save","createSale","sale","updateSale","get","setValue","close","sales","Number","Error","isCreateMode","isUpdateMode","find","p","getSiteNameById","s","_","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","i3","ProductsService","i4","SitesService","i5","SalesService","i6","MatSnackBar","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","NewSaleCreateUpdateComponent_Template","rf","ctx","NewSaleCreateUpdateComponent_Template_form_ngSubmit_0_listener","NewSaleCreateUpdateComponent_h2_2_Template","NewSaleCreateUpdateComponent_h2_3_Template","NewSaleCreateUpdateComponent_mat_form_field_8_Template","NewSaleCreateUpdateComponent_mat_error_14_Template","NewSaleCreateUpdateComponent_mat_error_15_Template","NewSaleCreateUpdateComponent_mat_error_21_Template","NewSaleCreateUpdateComponent_mat_error_22_Template","NewSaleCreateUpdateComponent_button_26_Template","NewSaleCreateUpdateComponent_button_27_Template","tmp_4_0","hasError","tmp_5_0","tmp_6_0","tmp_7_0","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormControlDirective","FormGroupDirective","FormControlName","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i7","MatButton","MatIconButton","i8","MatIcon","i9","MatDivider","i10","MatFormField","MatLabel","MatError","MatPrefix","MatSuffix","i11","MatInput","i12","MatAutocomplete","i13","MatOption","MatAutocompleteTrigger","styles","DestroyRef","inject","ReplaySubject","filter","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","SelectionModel","fadeInUp400ms","stagger40ms","FormControl","FormsModule","MatCheckboxModule","MatTooltipModule","NgClass","NgFor","VexPageLayoutContentDirective","MatButtonToggleModule","VexPageLayoutHeaderDirective","VexPageLayoutComponent","takeUntilDestroyed","MatSnackBarModule","Client","Roles","NewSaleComponent_vex_page_layout_header_2_Template_form_ngSubmit_1_listener","_r27","ctx_r26","payer","NewSaleComponent_vex_page_layout_header_2_mat_error_4_Template","NewSaleComponent_vex_page_layout_header_2_mat_error_5_Template","ctx_r1","tmp_1_0","tmp_2_0","totalVente","ɵɵtextInterpolate2","ctx_r3","client","full_name","NewSaleComponent_span_9_span_2_Template","ctx_r4","selection","selected","length","NewSaleComponent_button_17_Template_button_click_0_listener","_r30","ctx_r29","NewSaleComponent_th_20_Template_mat_checkbox_change_1_listener","$event","_r32","ctx_r31","masterToggle","ctx_r7","hasValue","isAllSelected","NewSaleComponent_td_21_Template_mat_checkbox_change_1_listener","restoredCtx","_r35","row_r33","$implicit","ctx_r34","toggle","NewSaleComponent_td_21_Template_mat_checkbox_click_1_listener","stopPropagation","ctx_r8","isSelected","row_r37","ɵɵsanitizeUrl","column_r38","label","cssClasses","row_r43","property","ɵɵelementContainerStart","NewSaleComponent_ng_container_25_ng_container_1_th_1_Template","NewSaleComponent_ng_container_25_ng_container_1_td_2_Template","ɵɵelementContainerEnd","NewSaleComponent_ng_container_25_ng_container_1_Template","type","NewSaleComponent_td_28_Template_a_click_2_listener","NewSaleComponent_td_28_Template_a_click_4_listener","NewSaleComponent_td_28_Template_a_click_6_listener","NewSaleComponent_td_31_Template_div_click_1_listener","NewSaleComponent_td_34_Template_button_click_1_listener","ɵɵpureFunction1","_c0","row_r52","_r22","undefined","NewSaleComponent_button_40_Template_button_click_0_listener","_r57","column_r55","ctx_r56","toggleColumnVisibility","NewSaleComponent_button_40_Template_mat_checkbox_click_1_listener","NewSaleComponent_button_40_Template_mat_checkbox_ngModelChange_1_listener","visible","NewSaleComponent_43_ng_template_0_Template_button_click_0_listener","_r63","sale_r61","ctx_r62","NewSaleComponent_43_ng_template_0_Template_button_click_4_listener","ctx_r64","deleteSale","NewSaleComponent_43_ng_template_0_Template","NewSaleComponent","dialog","invoiceService","clientsService","localStorage","layoutCtrl","subject$","data$","asObservable","columns","pageSize","pageSizeOptions","searchCtrl","amount_payed","destroyRef","invoice_id","clientId","salesList","visibleColumns","column","getSaleByInvoice","res","getClient","getClientById","getClientInvoice","status","next","userRoles","JSON","parse","getData","history","state","invoice","invoiceId","client_id","userConnected","getItem","dataSource","Boolean","reduce","total","valueChanges","onFilterChange","ngAfterViewInit","paginator","sort","open","afterClosed","newSale","addSales","console","log","message","duration","unshift","index","findIndex","existingSale","splice","deselect","trim","toLowerCase","event","stopImmediatePropagation","numSelected","numRows","clear","forEach","row","select","trackByProperty","onLabelChange","change","amount","validateClientInvoice","MatDialog","InvoiceService","ClientsService","LocalStorageService","viewQuery","NewSaleComponent_Query","NewSaleComponent_vex_page_layout_header_1_Template","NewSaleComponent_vex_page_layout_header_2_Template","NewSaleComponent_span_7_Template","NewSaleComponent_span_8_Template","NewSaleComponent_span_9_Template","NewSaleComponent_div_10_Template","NewSaleComponent_button_17_Template","NewSaleComponent_th_20_Template","NewSaleComponent_td_21_Template","NewSaleComponent_th_23_Template","NewSaleComponent_td_24_Template","NewSaleComponent_ng_container_25_Template","NewSaleComponent_th_27_Template","NewSaleComponent_td_28_Template","NewSaleComponent_th_30_Template","NewSaleComponent_td_31_Template","NewSaleComponent_th_33_Template","NewSaleComponent_td_34_Template","NewSaleComponent_tr_35_Template","NewSaleComponent_tr_36_Template","NewSaleComponent_button_40_Template","NewSaleComponent_43_Template","ɵɵpureFunction0","_c1","includes","role_name","ɵɵclassProp","isEmpty","_r20","_c2","NumberValueAccessor","MatIconAnchor","MatMiniFabButton","MatTooltip","MatMenu","MatMenuItem","MatMenuContent","MatMenuTrigger","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatSortHeader","i14","MatCheckbox","i15","NgModel","i16","i17","animation","phone","address","balance","account","account_id","quality","conversion_rate","today","Date","now","toISOString","substring","pTotal","callDate","formatDate","date","day","getDate","toString","padStart","monthNames","month","getMonth","year","getFullYear","environment","httpClient","router","BASE_URL","getClientsBySite","getAuthorization","addClients","post","updateClient","put","ɵɵinject","HttpClient","Router","factory","ɵfac","providedIn","getProductNotInStock","addProduct","updateProduct","checkProductExistsInStock","getSalesById","siteID","invoiceID","delete","addSite","updateSite","getSite","getSiteStocks"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}