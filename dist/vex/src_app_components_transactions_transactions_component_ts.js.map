{"version":3,"file":"src_app_components_transactions_transactions_component_ts.js","mappings":"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","sources":["./src/app/components/transactions/transactions-create-update/transactions-create-update.component.ts","./src/app/components/transactions/transactions-create-update/transactions-create-update.component.html","./src/app/components/transactions/transactions.component.ts","./src/app/components/transactions/transactions.component.html","./src/app/models/accounts.ts","./src/app/models/clients.ts","./src/app/models/transactions.ts","./src/app/services/account/accounts.service.ts","./src/app/services/client/clients.service.ts","./src/app/services/transaction/transactions.service.ts"],"sourcesContent":["\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, UntypedFormControl, Validators } from '@angular/forms';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef\r\n} from '@angular/material/dialog';\r\nimport { Transaction } from '../../../models/transactions';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { DatePipe, NgForOf, NgIf } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { Client } from '../../../models/clients';\r\nimport { Account } from '../../../models/accounts';\r\nimport { map } from 'rxjs';\r\nimport { ClientsService } from '../../../services/client/clients.service';\r\nimport { AccountsService } from '../../../services/account/accounts.service';\r\nimport { Site } from '../../../models/sites';\r\n\r\n@Component({\r\n  selector: 'vex-transactions-create-update',\r\n  templateUrl: './transactions-create-update.component.html',\r\n  styleUrls: ['./transactions-create-update.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    NgForOf\r\n  ]\r\n})\r\nexport class TransactionsCreateUpdateComponent implements OnInit {\r\n   id :number = 0;\r\n  clients: Client[] = [];\r\n  accounts: Account[] = [];\r\n  site_id!:number;\r\n  accountId!:number;\r\n  userConnected!: any;\r\n  siteName: string =\"\";\r\n  clientName: string =\"\";\r\n  sites:  Site[] = [] ;\r\n\r\n  form: FormGroup;\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public defaults: Transaction | undefined,\r\n    private dialogRef: MatDialogRef<TransactionsCreateUpdateComponent>,\r\n    private fb: FormBuilder,\r\n    private clientService: ClientsService,\r\n    private accountService: AccountsService,\r\n  )\r\n  {\r\n    this.form = this.fb.group({\r\n      id: [0, Validators.required],\r\n      site_id: [this.defaults?.site_id || ''],\r\n      site: [this.defaults?.site || ''],\r\n      client: [this.defaults?.client || '', Validators.required],\r\n      account_id: [this.defaults?.account_id || ''],\r\n      type: [this.defaults?.type || '', Validators.required],\r\n      amount_settled: [this.defaults?.amount_settled || '', [Validators.required, Validators.min(1)]],\r\n      transaction_date: [this.defaults?.transaction_date],\r\n      step: [this.defaults?.step]\r\n\r\n    });\r\n\r\n    this.form.get('account_id')?.valueChanges.subscribe(value => {\r\n      if (value) {\r\n        this.getClientNameByAccountId(value);\r\n      }\r\n    });\r\n  }\r\n\r\n  getClientsBySite() {\r\n    return this.clientService.getClientsBySite(this.site_id).pipe(\r\n      map((result: any) => {\r\n        this.clients = result.data;\r\n\r\n        return this.clients.map((client) => new Client(client));\r\n      })\r\n    );\r\n  }\r\n  getAccounts() {\r\n    // Assuming the API provides the accounts\r\n    return this.accountService.getAccounts().pipe(\r\n      map((result: any) => {\r\n        this.accounts = result.data.map((account: any) => new Account(account));\r\n        return this.accounts;\r\n      })\r\n    );\r\n  }\r\n  ngOnInit() {\r\n    this.userConnected = localStorage.getItem('dataUser');\r\n    this.userConnected = JSON.parse(this.userConnected);\r\n    this.site_id = this.userConnected.site_id;\r\n    this.getClientsBySite().subscribe(clients => {\r\n      this.clients = clients;\r\n      if (this.defaults) {\r\n        this.mode = 'update';\r\n      } else {\r\n        this.defaults = {} as Transaction;\r\n      }\r\n      this.form.patchValue(this.defaults);\r\n    });\r\n\r\n    this.getAccounts().subscribe(accounts => {\r\n      this.accounts = accounts;\r\n    });\r\n  }\r\n\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createTransaction();\r\n    } else if (this.mode === 'update') {\r\n      this.updateTransaction();\r\n    }\r\n  }\r\n\r\n  createTransaction() {\r\n    console.log(this.form.value);\r\n    \r\n    this.form.get('account_id')?.setValue(this.accountId);\r\n    \r\n    const transactions = this.form.value;\r\n\r\n\r\n    this.dialogRef.close(transactions);\r\n  }\r\n\r\n  updateTransaction() {\r\n    const transactions = this.form.value;\r\n\r\n    if (!this.defaults) {\r\n      throw new Error(\r\n        'Transaction ID does not exist, this roles cannot be updated'\r\n      );\r\n    }\r\n\r\n    transactions.id = this.defaults.id;\r\n\r\n    this.dialogRef.close(transactions);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n  getClientNameByAccountId(accountId: number): string {\r\n    this.accountId= accountId;\r\n    const account = this.accounts.find(a => a.id === accountId);\r\n    const client = account ? this.clients.find(c => c.id === account.client_id) : undefined;\r\n    this.clientName = client ? client.full_name : '';\r\n    this.form.get('client')?.setValue(this.clientName);\r\n    return client ? client.full_name : '';\r\n  }\r\n  clientCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\r\n  showSiteField = false;\r\n  getSiteNameById(id: number): string {\r\n    this.site_id=id;\r\n    const site = this.sites.find(s => s.id === id);\r\n    this.siteName = site ? site.name : '';\r\n    return site ? site.name : '';\r\n  }\r\n  siteCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\r\n\r\n}\r\n\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div class=\"flex items-center\" mat-dialog-title>\r\n    <h2 *ngIf=\"form.controls['account_id'].value\" class=\"headline m-0 flex-auto\">\r\n      {{ getClientNameByAccountId(form.controls['account_id'].value) }}\r\n    </h2>\r\n    <h2 *ngIf=\"!form.controls['account_id'].value\" class=\"headline m-0 flex-auto\">\r\n      Nouvelle Transaction\r\n    </h2>\r\n    <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n      <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-divider class=\"text-border\"></mat-divider>\r\n\r\n  <mat-dialog-content class=\"flex flex-col\">\r\n    <mat-form-field class=\"flex-auto\" *ngIf=\"showSiteField\">\r\n      <mat-label>Site</mat-label>\r\n            <input [formControl]=\"siteCtrl\" [matAutocomplete]=\"auto\" matInput [value]=\"getSiteNameById(siteCtrl.value)\" />\r\n\r\n      <input formControlName=\"site_id\" matInput required min=1 />\r\n      <mat-icon matIconPrefix svgIcon=\"mat:edit\"></mat-icon>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"w-300 max-w-full\">\r\n      <mat-label>Selectionner Compte</mat-label>\r\n      <input [formControl]=\"clientCtrl\" [matAutocomplete]=\"auto\" matInput [value]=\"getClientNameByAccountId(clientCtrl.value)\" />\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let client of clients\"  [value]=\"client.account_id\">\r\n          <span class=\"flex items-center\">\r\n            <span class=\"flex flex-col\">Compte #{{ client.account_id }} - {{ client.full_name }}</span>\r\n          </span>\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n      <button (click)=\"clientCtrl.reset()\" *ngIf=\"clientCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n      </button>\r\n      <button *ngIf=\"!clientCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n        <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n      </button>\r\n      <mat-error *ngIf=\"clientCtrl.invalid\">Veuillez sélectionner un compte</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Type Transaction</mat-label>\r\n      <mat-select formControlName=\"type\" >\r\n        <mat-option value=\"debit\">Débit</mat-option>\r\n        <mat-option value=\"credit\">Crédit</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"form.get('type')?.hasError('required')\">Type de transaction requis</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field  class=\"flex-auto\">\r\n      <mat-label>Montant à Regler</mat-label>\r\n      <input formControlName=\"amount_settled\" matInput />\r\n      <mat-icon matIconPrefix svgIcon=\"mat:edit\"></mat-icon>\r\n      <mat-error *ngIf=\"form.get('amount_settled')?.hasError('required')\">\r\n        Montant requise\r\n      </mat-error>\r\n      <mat-error *ngIf=\"form.get('amount_settled')?.hasError('min')\">\r\n        Montant requise doit être au moins 1\r\n      </mat-error>\r\n    </mat-form-field>\r\n    \r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">Annuler</button>\r\n    <button *ngIf=\"isCreateMode()  && form.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\">\r\n      Ajouter Transaction\r\n    </button>\r\n    <button *ngIf=\"isUpdateMode()  && form.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\">\r\n      Modifier Transaction\r\n    </button>\r\n  </mat-dialog-actions>\r\n</form>\r\n","\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  DestroyRef,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { catchError, Observable, of, ReplaySubject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Transaction } from '../../models/transactions';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\r\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\r\nimport { TransactionsCreateUpdateComponent } from './transactions-create-update/transactions-create-update.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\r\nimport { stagger40ms } from '@vex/animations/stagger.animation';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  UntypedFormControl\r\n} from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { VexPageLayoutContentDirective } from '@vex/components/vex-page-layout/vex-page-layout-content.directive';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { VexBreadcrumbsComponent } from '@vex/components/vex-breadcrumbs/vex-breadcrumbs.component';\r\nimport { VexPageLayoutHeaderDirective } from '@vex/components/vex-page-layout/vex-page-layout-header.directive';\r\nimport { VexPageLayoutComponent } from '@vex/components/vex-page-layout/vex-page-layout.component';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { Account } from '../../models/accounts';\r\nimport { TransactionsService } from '../../services/transaction/transactions.service';\r\nimport { Client } from '../../models/clients';\r\nimport { SitesCreateUpdateComponent } from '../sites/sites-create-update/sites-create-update.component';\r\nimport { Site } from '../../models/sites';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { Sale } from '../../models/sales';\r\n\r\n@Component({\r\n  selector: 'vex-transactions',\r\n  templateUrl: './transactions.component.html',\r\n  styleUrls: ['./transactions.component.scss'],\r\n  standalone : true,\r\n  animations: [fadeInUp400ms, stagger40ms],\r\n  imports: [\r\n    VexPageLayoutComponent,\r\n    VexPageLayoutHeaderDirective,\r\n    VexBreadcrumbsComponent,\r\n    MatButtonToggleModule,\r\n    ReactiveFormsModule,\r\n    VexPageLayoutContentDirective,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    NgFor,\r\n    NgClass,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule\r\n  ]\r\n})\r\nexport class TransactionsComponent implements OnInit, AfterViewInit {\r\n  layoutCtrl = new UntypedFormControl('boxed');\r\n\r\n  /**\r\n   * Simulating a service with HTTP that returns Observables\r\n   * You probably want to remove this and do all requests in a service with HTTP\r\n   */\r\n  subject$: ReplaySubject<Transaction[]> = new ReplaySubject<Transaction[]>(1);\r\n  data$: Observable<Transaction[]> = this.subject$.asObservable();\r\n  transactions: Transaction[] = [];\r\n  userConnected!: any;\r\n  site_id!:number;\r\n  siteName !: string;\r\n\r\n  @Input()\r\n  columns: TableColumn<Transaction>[] = [\r\n    {\r\n      label: 'Client',\r\n      property: 'client',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Type de transaction',\r\n      property: 'type',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n    {\r\n      label: 'Montant à Regler',\r\n      property: 'amount_settled',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n    {\r\n      label: 'Date',\r\n      property: 'callDate',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n\r\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 20, 50];\r\n  dataSource!: MatTableDataSource<Transaction>;\r\n  selection = new SelectionModel<Transaction>(true, []);\r\n  searchCtrl = new UntypedFormControl();\r\n\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\r\n\r\n  private readonly destroyRef: DestroyRef = inject(DestroyRef);\r\n  id:number = 0;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private transactionService: TransactionsService,\r\n    private snackbar: MatSnackBar,\r\n  ) {}\r\n\r\n  get visibleColumns() {\r\n    return this.columns\r\n      .filter((column) => column.visible)\r\n      .map((column) => column.property);\r\n  }\r\n\r\n  /**\r\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\r\n   * We are simulating this request here.\r\n   */\r\n  getData() {\r\n    return this.transactionService.getTransactionAccountID(this.id).pipe(\r\n      map((result: any) => {\r\n        {\r\n          this.transactions = result.data;\r\n          console.log(result);\r\n          \r\n        }\r\n\r\n        return this.transactions.map((transaction) => new Transaction(transaction));\r\n      })\r\n    );}\r\n  getTransactions() {\r\n    return this.transactionService.getAllTransactions().pipe(\r\n      map(result => {\r\n        this.transactions = result.data;\r\n        return this.transactions.map(transaction => new Transaction(transaction));\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userConnected = localStorage.getItem('dataUser');\r\n    this.userConnected = JSON.parse(this.userConnected);\r\n    this.site_id = this.userConnected.site_id;\r\n    if (history.state.id ) {\r\n      this.id = history.state.id;\r\n      if (history.state.site){\r\n        this.getTodayTransactionBySite().subscribe(transactions => {\r\n          this.subject$.next(transactions);\r\n        });\r\n      }else {\r\n        this.getData().subscribe(transactions => {\r\n          this.subject$.next(transactions);\r\n        });\r\n      }\r\n    } else {\r\n      this.getTransactions().subscribe(transactions => {\r\n        this.subject$.next(transactions);\r\n      });\r\n    }\r\n\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.data$.pipe(filter<Transaction[]>(Boolean)).subscribe(transactions => {\r\n      this.transactions = transactions;\r\n      this.dataSource.data = transactions;\r\n    });\r\n\r\n    this.searchCtrl.valueChanges\r\n      .pipe(takeUntilDestroyed(this.destroyRef))\r\n      .subscribe(value => this.onFilterChange(value));\r\n  }\r\n  getTodayTransactionBySite(){\r\n         return this.transactionService.getTodayTransactionBySite(this.id).pipe(map((res:any) => {\r\n        this.transactions = res.data;\r\n        return this.transactions.map((transaction)=>new Transaction(transaction));\r\n\r\n      })\r\n    );\r\n  }\r\n  ngAfterViewInit() {\r\n    if (this.paginator) {\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    if (this.sort) {\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  createTransaction() {\r\n    this.dialog\r\n      .open(TransactionsCreateUpdateComponent)\r\n      .afterClosed()\r\n      .subscribe((transaction: Transaction) => {\r\n        if (transaction) {\r\n          transaction.user_id = this.userConnected.id;\r\n          \r\n\r\n          this.transactionService.AddTransactions(new Transaction(transaction)).subscribe((result:any) => {\r\n            if (result.status === 200) {\r\n              this.transactions.unshift(new Transaction(transaction));\r\n              this.subject$.next(this.transactions);\r\n              this.snackbar.open(\r\n                \"Transaction ajouter avec succés\",\r\n                'MERCI',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n            }else{\r\n              this.snackbar.open(\r\n                result.message,\r\n                'MERCI DE REESSAYER',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n  updateTransaction(transaction: Transaction) {\r\n    this.dialog\r\n      .open(TransactionsCreateUpdateComponent, {\r\n        data: transaction\r\n      })\r\n      .afterClosed()\r\n      .subscribe((updateTransaction) => {\r\n\r\n        if (updateTransaction) {\r\n\r\n          const index = this.transactions.findIndex(\r\n            (existingTransaction) => existingTransaction.id === updateTransaction.id\r\n          );\r\n          this.transactions[index] = new Transaction(updateTransaction);\r\n          this.subject$.next(this.transactions);\r\n        }\r\n      });\r\n  }\r\n\r\n \r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column: TableColumn<Transaction>, event: Event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  onLabelChange(change: MatSelectChange, row: Transaction) {\r\n    const index = this.transactions.findIndex((t) => t === row);\r\n    this.subject$.next(this.transactions);\r\n  }\r\n}\r\n\r\n","<vex-page-layout>\r\n  <vex-page-layout-header\r\n    class=\"pb-1 flex flex-col items-start justify-center\">\r\n  </vex-page-layout-header>\r\n\r\n  <vex-page-layout-content\r\n    [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n    [class.px-6]=\"layoutCtrl.value === 'fullwidth'\"\r\n    class=\"-mt-6\">\r\n    <div class=\"card overflow-auto -mt-16\">\r\n      <div\r\n        class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\r\n        <h2\r\n          class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\r\n          <span *ngIf=\"selection.isEmpty()\">transactions</span>\r\n          <span *ngIf=\"selection.hasValue()\"\r\n          >{{ selection.selected.length }} transaction<span\r\n            *ngIf=\"selection.selected.length > 1\"\r\n          >s</span\r\n          >\r\n            selected</span\r\n          >\r\n        </h2>\r\n\r\n        \r\n\r\n        <mat-form-field subscriptSizing=\"dynamic\">\r\n          <mat-icon matIconPrefix svgIcon=\"mat:search\"></mat-icon>\r\n          <input\r\n            matInput\r\n            [formControl]=\"searchCtrl\"\r\n            placeholder=\"Search&hellip;\"\r\n            type=\"text\" />\r\n        </mat-form-field>\r\n\r\n        <span class=\"flex-1\"></span>\r\n\r\n        <button\r\n          [matMenuTriggerFor]=\"columnFilterMenu\"\r\n          class=\"ml-4 flex-none\"\r\n          mat-icon-button\r\n          matTooltip=\"Filter Columns\"\r\n          type=\"button\">\r\n          <mat-icon svgIcon=\"mat:filter_list\"></mat-icon>\r\n        </button>\r\n\r\n        <button\r\n          (click)=\"createTransaction()\"\r\n          class=\"ml-4 flex-none\"\r\n          color=\"primary\"\r\n          mat-mini-fab\r\n          matTooltip=\"Add transaction\"\r\n          type=\"button\">\r\n          <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n        </button>\r\n      </div>\r\n\r\n      <table\r\n        @stagger\r\n        [dataSource]=\"dataSource\"\r\n        class=\"w-full\"\r\n        mat-table\r\n        matSort>\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Checkbox Column -->\r\n        <ng-container matColumnDef=\"checkbox\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            <mat-checkbox\r\n              (change)=\"$event ? masterToggle() : null\"\r\n              [checked]=\"selection.hasValue() && isAllSelected()\"\r\n              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n              color=\"primary\">\r\n            </mat-checkbox>\r\n          </th>\r\n          <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n            <mat-checkbox\r\n              (change)=\"$event ? selection.toggle(row) : null\"\r\n              (click)=\"$event.stopPropagation()\"\r\n              [checked]=\"selection.isSelected(row)\"\r\n              color=\"primary\">\r\n            </mat-checkbox>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Image Column -->\r\n        <ng-container matColumnDef=\"image\">\r\n          <th *matHeaderCellDef mat-header-cell></th>\r\n          <td *matCellDef=\"let row\" class=\"w-8 min-w-8 p-0\" mat-cell>\r\n            <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\" />\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Text Columns -->\r\n        <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n          <ng-container\r\n            *ngIf=\"column.type === 'text'\"\r\n            [matColumnDef]=\"column.property\">\r\n            <th\r\n              *matHeaderCellDef\r\n              class=\"uppercase\"\r\n              mat-header-cell\r\n              mat-sort-header>\r\n              {{ column.label }}\r\n            </th>\r\n            <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n              {{ row[column.property] }}\r\n            </td>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Conversion (kg-m)-->\r\n        <ng-container matColumnDef=\"contact\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div class=\"flex\">\r\n              <a\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"w-8 h-8 p-0 leading-none flex items-center justify-center hover:bg-hover text-primary-600 bg-primary-600/10\"\r\n                mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\r\n              </a>\r\n\r\n              <a\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal-600 bg-teal/10\"\r\n                mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\r\n              </a>\r\n\r\n              <a\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green-600 bg-green-600/10\"\r\n                mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Label Column -->\r\n        <ng-container matColumnDef=\"labels\">\r\n          <th\r\n            *matHeaderCellDef\r\n            class=\"uppercase\"\r\n            mat-header-cell\r\n            mat-sort-header>\r\n            Qualité\r\n          </th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div\r\n              (click)=\"$event.stopPropagation()\"\r\n              class=\"flex items-center gap-1\">\r\n              <div\r\n                class=\"bg-base text-hint cursor-pointer hover:bg-hover flex-none flex items-center justify-center\">\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:add\"></mat-icon>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Action Column -->\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n<!--            <button-->\r\n<!--              (click)=\"$event.stopPropagation()\"-->\r\n<!--              [matMenuTriggerData]=\"{ transaction: row }\"-->\r\n<!--              [matMenuTriggerFor]=\"actionsMenu\"-->\r\n<!--              mat-icon-button-->\r\n<!--              type=\"button\">-->\r\n<!--              <mat-icon svgIcon=\"mat:more_horiz\"></mat-icon>-->\r\n<!--            </button>-->\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n        <tr\r\n          (click)=\"updateTransaction(row)\"\r\n          *matRowDef=\"let row; columns: visibleColumns\"\r\n          @fadeInUp\r\n          class=\"hover:bg-hover transition duration-400 ease-out-swift cursor-pointer\"\r\n          mat-row></tr>\r\n      </table>\r\n\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"pageSizeOptions\"\r\n        [pageSize]=\"pageSize\"\r\n        class=\"sticky left-0\"></mat-paginator>\r\n    </div>\r\n  </vex-page-layout-content>\r\n</vex-page-layout>\r\n\r\n<mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button\r\n    (click)=\"toggleColumnVisibility(column, $event)\"\r\n    *ngFor=\"let column of columns\"\r\n    class=\"mat-menu-item block\">\r\n    <mat-checkbox\r\n      (click)=\"$event.stopPropagation()\"\r\n      [(ngModel)]=\"column.visible\"\r\n      color=\"primary\">\r\n      {{ column.label }}\r\n    </mat-checkbox>\r\n  </button>\r\n</mat-menu>\r\n\r\n<mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n<!--  <ng-template let-transaction=\"transaction\" matMenuContent>-->\r\n<!--    <button (click)=\"updateTransaction(transaction)\" mat-menu-item>-->\r\n<!--      <mat-icon svgIcon=\"mat:edit\"></mat-icon>-->\r\n<!--      <span>Modifier</span>-->\r\n<!--    </button>-->\r\n<!--    <button (click)=\"deleteTransaction(transaction)\" mat-menu-item>-->\r\n<!--      <mat-icon svgIcon=\"mat:delete\"></mat-icon>-->\r\n<!--      <span>Supprimer</span>-->\r\n<!--    </button>-->\r\n<!--  </ng-template>-->\r\n</mat-menu>\r\n","\r\nexport class Account {\r\n  id: number;\r\n  client_id: number;\r\n  client: string;\r\n  balance: number\r\n  constructor(account: any) {\r\n    this.id = account.id;\r\n    this.client_id = account.client_id;\r\n    this.balance = account.balance;\r\n    this.client = (account.client && account.client.full_name) ? account.client.full_name : account.client;\r\n\r\n  }\r\n\r\n}\r\n","import { trigger } from '@angular/animations';\r\nimport { Account } from './accounts';\r\n\r\nexport class Client {\r\n  id: number;\r\n  full_name: string;\r\n  phone: string;\r\n  address: string;\r\n  balance: number;\r\n  site_id: number;\r\n  account_id: number;\r\n\r\n  constructor(client: any) {\r\n    this.id = client.id;\r\n    this.full_name = client.full_name;\r\n    this.phone = client.phone;\r\n    this.address = client.address;\r\n    this.balance = (client.account && client.account.balance) ? client.account.balance : 0;\r\n    this.account_id = (client.account && client.account.id) ? client.account.id : 0;\r\n    this.site_id = client.site_id\r\n\r\n     // this.hasAccount = true;\r\n  }\r\n\r\n}\r\n","export class  Transaction  {\r\n  id: number;\r\n  account_id: number;\r\n  client: string;\r\n  transaction_date:string;\r\n  type: number;\r\n  amount_settled: number;\r\n  user_id: number;\r\n  callDate: string;\r\n  site_id : number;\r\n  site : string;\r\n  step: number;\r\n\r\n  constructor(transaction: any) {\r\n    const today = new Date();\r\n    this.id = transaction.id;\r\n    this.account_id =  transaction.account_id;\r\n    this.site_id = transaction.site_id;\r\n    this.type =  transaction.type;\r\n    this.amount_settled =  transaction.amount_settled;\r\n    this.transaction_date = transaction.transaction_date ? transaction.transaction_date : today.toISOString().substring(0,10);\r\n    this.user_id = transaction.user_id;\r\n    this.callDate = this.formatDate(new Date(this.transaction_date));\r\n    this.site = (transaction.site && transaction.site.name) ? transaction.site.name : (transaction.site)?  transaction.site : '';\r\n    this.client = (transaction.account && transaction.account.client.full_name) ? transaction.account.client.full_name : transaction.client ? transaction.client: '';\r\n    this.step = transaction.step;\r\n  }\r\n\r\n  private formatDate(date: Date): string {\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const monthNames = [\r\n      'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\r\n      'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const year = date.getFullYear().toString();\r\n    return `${day} ${month} ${year}`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Account } from '../../models/accounts';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from '../../models/sites';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountsService {\r\n  BASE_URL = environment.BASE_URL\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService) {\r\n  }\r\n\r\n  // addAccountToClient(id: number, account: Account): Observable<Account> {\r\n  //   return this.httpClient.post(`${this.BASE_URL}/accounts/`, account, { ...this.localStorage.getAuthorization() });\r\n  // }\r\n  getAccounts():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/accounts`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  addAccount(account:Account):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/accounts`, account,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateAccount(account:Account):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/accounts/`+account.id, account,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Client } from 'src/app/models/clients';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientsService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n\r\n\r\n\r\n  getClientsBySite(site_id: number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/clients/site/${site_id}`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getClientById(client_id: number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/clients/${client_id}`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getClientInvoice(client_id: number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/clients/${client_id}/invoice`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  // getAccountByI(id: number):Observable<any>{\r\n  //   return this.httpClient.get(`${this.BASE_URL}/clients/account/${site_id}`, {... this.localStorage.getAuthorization()});\r\n  //\r\n  // }\r\n\r\n  addClients(client:Client):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/clients`, client,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  updateClient(client:Client):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/clients/`+client.id, client,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from '../../models/sites';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Client } from '../../models/clients';\r\nimport { Transaction } from '../../models/transactions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TransactionsService {\r\n  BASE_URL = environment.BASE_URL\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService) {\r\n  }\r\n\r\n  getTransactionAccountID(id: number):Observable<any>{\r\n    // return this.httpClient.get(`${this.BASE_URL}/accounts/`+id+\"/transactions\", {... this.localStorage.getAuthorization()});\r\n    return this.httpClient.get(`${this.BASE_URL}/transactions/account/`+id, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  getAllTransactions(): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/transactions`, {\r\n      ...this.localStorage.getAuthorization()\r\n    });\r\n  }\r\n\r\n  getTodayTransactionBySite(id: number): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/transactions/today/${id}`, {\r\n      ...this.localStorage.getAuthorization()\r\n    });\r\n  }\r\n  AddTransactions(transaction:Transaction):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/transactions`, transaction,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n}\r\n"],"names":["ReactiveFormsModule","UntypedFormControl","Validators","MAT_DIALOG_DATA","MatDialogModule","MatInputModule","MatFormFieldModule","MatDividerModule","MatIconModule","MatMenuModule","MatButtonModule","NgForOf","NgIf","MatOptionModule","MatSelectModule","MatAutocompleteModule","Client","Account","map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","getClientNameByAccountId","form","controls","value","ɵɵelement","ɵɵproperty","ctx_r2","siteCtrl","_r3","getSiteNameById","client_r13","account_id","ɵɵtextInterpolate2","full_name","ɵɵlistener","TransactionsCreateUpdateComponent_button_16_Template_button_click_0_listener","ɵɵrestoreView","_r15","ctx_r14","ɵɵnextContext","ɵɵresetView","clientCtrl","reset","TransactionsCreateUpdateComponent","constructor","defaults","dialogRef","fb","clientService","accountService","id","clients","accounts","siteName","clientName","sites","mode","required","showSiteField","group","site_id","site","client","type","amount_settled","min","transaction_date","step","get","valueChanges","subscribe","getClientsBySite","pipe","result","data","getAccounts","account","ngOnInit","userConnected","localStorage","getItem","JSON","parse","patchValue","save","createTransaction","updateTransaction","console","log","setValue","accountId","transactions","close","Error","isCreateMode","isUpdateMode","find","a","c","client_id","undefined","s","name","_","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","i3","ClientsService","i4","AccountsService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TransactionsCreateUpdateComponent_Template","rf","ctx","TransactionsCreateUpdateComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","TransactionsCreateUpdateComponent_h2_2_Template","TransactionsCreateUpdateComponent_h2_3_Template","TransactionsCreateUpdateComponent_mat_form_field_8_Template","TransactionsCreateUpdateComponent_mat_option_15_Template","TransactionsCreateUpdateComponent_button_16_Template","TransactionsCreateUpdateComponent_button_17_Template","TransactionsCreateUpdateComponent_mat_error_18_Template","TransactionsCreateUpdateComponent_mat_error_27_Template","TransactionsCreateUpdateComponent_mat_error_33_Template","TransactionsCreateUpdateComponent_mat_error_34_Template","TransactionsCreateUpdateComponent_button_38_Template","TransactionsCreateUpdateComponent_button_39_Template","invalid","tmp_11_0","hasError","tmp_12_0","tmp_13_0","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormControlDirective","FormGroupDirective","FormControlName","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i5","MatButton","MatIconButton","i6","MatIcon","i7","MatDivider","i8","MatFormField","MatLabel","MatError","MatPrefix","MatSuffix","i9","MatInput","i10","MatOption","i11","MatSelect","i12","MatAutocomplete","MatAutocompleteTrigger","styles","DestroyRef","inject","ReplaySubject","filter","Transaction","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","SelectionModel","fadeInUp400ms","stagger40ms","FormsModule","MatCheckboxModule","MatTooltipModule","NgClass","NgFor","VexPageLayoutContentDirective","MatButtonToggleModule","VexPageLayoutHeaderDirective","VexPageLayoutComponent","takeUntilDestroyed","MatSnackBarModule","TransactionsComponent_span_7_span_2_Template","ctx_r1","selection","selected","length","TransactionsComponent_th_18_Template_mat_checkbox_change_1_listener","$event","_r20","ctx_r19","masterToggle","hasValue","isAllSelected","TransactionsComponent_td_19_Template_mat_checkbox_change_1_listener","restoredCtx","_r23","row_r21","$implicit","ctx_r22","toggle","TransactionsComponent_td_19_Template_mat_checkbox_click_1_listener","stopPropagation","ctx_r3","isSelected","row_r25","ɵɵsanitizeUrl","column_r26","label","cssClasses","row_r31","property","ɵɵelementContainerStart","TransactionsComponent_ng_container_23_ng_container_1_th_1_Template","TransactionsComponent_ng_container_23_ng_container_1_td_2_Template","ɵɵelementContainerEnd","TransactionsComponent_ng_container_23_ng_container_1_Template","TransactionsComponent_td_26_Template_a_click_2_listener","TransactionsComponent_td_26_Template_a_click_4_listener","TransactionsComponent_td_26_Template_a_click_6_listener","TransactionsComponent_td_29_Template_div_click_1_listener","TransactionsComponent_tr_34_Template_tr_click_0_listener","_r43","row_r41","ctx_r42","TransactionsComponent_button_38_Template_button_click_0_listener","_r46","column_r44","ctx_r45","toggleColumnVisibility","TransactionsComponent_button_38_Template_mat_checkbox_click_1_listener","TransactionsComponent_button_38_Template_mat_checkbox_ngModelChange_1_listener","visible","TransactionsComponent","dialog","transactionService","snackbar","layoutCtrl","subject$","data$","asObservable","columns","pageSize","pageSizeOptions","searchCtrl","destroyRef","visibleColumns","column","getData","getTransactionAccountID","transaction","getTransactions","getAllTransactions","history","state","getTodayTransactionBySite","next","dataSource","Boolean","onFilterChange","res","ngAfterViewInit","paginator","sort","open","afterClosed","user_id","AddTransactions","status","unshift","duration","message","index","findIndex","existingTransaction","trim","toLowerCase","event","stopImmediatePropagation","numSelected","numRows","clear","forEach","row","select","trackByProperty","onLabelChange","change","t","MatDialog","TransactionsService","MatSnackBar","viewQuery","TransactionsComponent_Query","TransactionsComponent_span_6_Template","TransactionsComponent_span_7_Template","TransactionsComponent_Template_button_click_14_listener","TransactionsComponent_th_18_Template","TransactionsComponent_td_19_Template","TransactionsComponent_th_21_Template","TransactionsComponent_td_22_Template","TransactionsComponent_ng_container_23_Template","TransactionsComponent_th_25_Template","TransactionsComponent_td_26_Template","TransactionsComponent_th_28_Template","TransactionsComponent_td_29_Template","TransactionsComponent_th_31_Template","TransactionsComponent_td_32_Template","TransactionsComponent_tr_33_Template","TransactionsComponent_tr_34_Template","TransactionsComponent_button_38_Template","ɵɵclassProp","isEmpty","MatIconAnchor","MatMiniFabButton","MatTooltip","MatMenu","MatMenuTrigger","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatSortHeader","MatCheckbox","NgModel","i13","i14","animation","balance","phone","address","today","Date","toISOString","substring","callDate","formatDate","date","day","getDate","toString","padStart","monthNames","month","getMonth","year","getFullYear","environment","httpClient","router","BASE_URL","getAuthorization","addAccount","post","updateAccount","put","ɵɵinject","HttpClient","Router","LocalStorageService","factory","ɵfac","providedIn","getClientById","getClientInvoice","addClients","updateClient"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}