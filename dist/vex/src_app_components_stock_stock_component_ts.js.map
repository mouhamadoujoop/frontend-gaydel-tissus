{"version":3,"file":"src_app_components_stock_stock_component_ts.js","mappings":"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","sources":["./src/app/components/stock/stock-create-update/stock-create-update.component.ts","./src/app/components/stock/stock-create-update/stock-create-update.component.html","./src/app/components/stock/stock.component.ts","./src/app/components/stock/stock.component.html","./src/app/models/products.ts","./src/app/models/sites.ts","./src/app/services/product/products.service.ts","./src/app/services/site/sites.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, ReactiveFormsModule, UntypedFormControl, Validators} from '@angular/forms';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef\r\n} from '@angular/material/dialog';\r\nimport { Stock } from '../../../models/stocks';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { AsyncPipe, NgFor, NgIf } from '@angular/common';\r\nimport { Product } from '../../../models/products';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { Observable, map, startWith } from 'rxjs';\r\nimport { ProductsService } from 'src/app/services/product/products.service';\r\n\r\n@Component({\r\n  selector: 'vex-stock-create-update',\r\n  templateUrl: './stock-create-update.component.html',\r\n  styleUrls: ['./stock-create-update.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatDialogModule,\r\n    NgFor,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    AsyncPipe\r\n  ]\r\n})\r\nexport class StockCreateUpdateComponent implements OnInit {\r\n  static id = 100;\r\n  newQuantity: number = 0;\r\n  productId: number = 0;\r\n  productName: string = '';\r\n  products: Product[] = [];\r\n  form = this.fb.group({\r\n    id: [StockCreateUpdateComponent.id++],\r\n    site_id: [this.defaults?.site_id || ''],\r\n    site: [this.defaults?.site || ''],\r\n    product_id: [this.defaults?.product_id || ''],\r\n    product: [this.defaults?.product || ''],\r\n    quantity: [this.defaults?.quantity, [Validators.required, Validators.min(1)]],\r\n    threshold: [this.defaults?.threshold , [Validators.required, Validators.min(1)]],\r\n    newQuantity: [this.newQuantity || '']\r\n  });\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public defaults: Stock | undefined,\r\n    private dialogRef: MatDialogRef<StockCreateUpdateComponent>,\r\n    private fb: FormBuilder,\r\n    private productService: ProductsService,\r\n  ) {}\r\n\r\n  \r\n  getProducts() {\r\n    return this.productService.getProducts().pipe(\r\n      map((result: any) => {\r\n        if (result.total) {\r\n          this.products = result.data;\r\n        }\r\n        return this.products.map((product) => new Product(product));\r\n      })\r\n    );\r\n  }\r\n  ngOnInit() {\r\n    this.getProducts().subscribe(products => {\r\n      this.products = products;\r\n      if (this.defaults) {\r\n        this.mode = 'update';\r\n        this.form.addControl('newQuantity', new UntypedFormControl(this.newQuantity, [Validators.required, Validators.min(1)]));\r\n      } else {\r\n        this.defaults = {} as Stock;\r\n      }\r\n      this.form.patchValue(this.defaults);\r\n    });\r\n    \r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createStock();\r\n    } else if (this.mode === 'update') {\r\n      this.updateStock();\r\n    }\r\n  }\r\n\r\n  createStock() {\r\n    this.form.get('product_id')?.setValue(this.productId);\r\n    this.form.get('product')?.setValue(this.productName);\r\n    const stock = this.form.value;\r\n\r\n\r\n    this.dialogRef.close(stock);\r\n  }\r\n\r\n  updateStock() {\r\n  const newQuantity = Number(this.form.get('newQuantity')?.value || 0);\r\n  \r\n  this.form.get('quantity')?.setValue(newQuantity);\r\n  \r\n    const stock = this.form.value;\r\n    \r\n    \r\n    if (!this.defaults) {\r\n      throw new Error(\r\n        'Stock ID does not exist, this Stock cannot be updated'\r\n      );\r\n    }\r\n\r\n    stock.id = this.defaults.id;\r\n    this.dialogRef.close(stock);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n  \r\n  getProductNameById(id: number): string {\r\n    this.productId=id;\r\n    const product = this.products.find(p => p.id === id);\r\n    this.productName = product ? product.name : '';\r\n    return product ? product.name : '';\r\n  }\r\n  \r\n  productCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\r\n  \r\n}\r\n\r\n\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n    <div class=\"flex items-center\" mat-dialog-title>\r\n  \r\n      <h2\r\n        *ngIf=\"isUpdateMode()\"\r\n        class=\"headline m-0 flex-auto\">\r\n        Ajout Stock\r\n      </h2>\r\n      <h2\r\n        *ngIf=\"isCreateMode()\"\r\n        class=\"headline m-0 flex-auto\">\r\n        Nouveau Stock\r\n      </h2>\r\n  \r\n  \r\n      <button\r\n        class=\"text-secondary\"\r\n        mat-dialog-close\r\n        mat-icon-button\r\n        type=\"button\">\r\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n      </button>\r\n    </div>\r\n  \r\n    <mat-divider class=\"text-border\"></mat-divider>\r\n  \r\n    <mat-dialog-content *ngIf=\"isCreateMode()\" class=\"flex flex-col\">\r\n  \r\n      <mat-form-field class=\"w-300 max-w-full\" >\r\n        <mat-label>Selectionner Produit</mat-label>\r\n        <input [formControl]=\"productCtrl\" [matAutocomplete]=\"auto\" matInput [value]=\"getProductNameById(productCtrl.value)\"/>\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n          <mat-option\r\n            *ngFor=\"let product of products \"\r\n            [value]=\"product.id\" >\r\n            <span class=\"flex items-center\">\r\n              <span class=\"flex flex-col\">\r\n                {{ product.name }}\r\n              </span>\r\n            </span>\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <button\r\n          (click)=\"productCtrl.reset()\"\r\n          *ngIf=\"productCtrl.value\"\r\n          mat-icon-button\r\n          matIconSuffix\r\n          type=\"button\">\r\n          <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n        </button>\r\n        <button *ngIf=\"!productCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n          <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n        </button>\r\n        <mat-error *ngIf=\"productCtrl.invalid\">Veuillez sélectionner un produit</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field  class=\"flex-auto\">\r\n        <mat-label>Quantité</mat-label>\r\n        <input type=\"number\" formControlName=\"quantity\" matInput required min=1 />\r\n        <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n        <mat-error *ngIf=\"form.get('quantity')?.hasError('required')\">\r\n          Quantité requise\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('quantity')?.hasError('min')\">\r\n          Quantité doit être au moins 1\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Seuil</mat-label>\r\n        <input type=\"number\" formControlName=\"threshold\" matInput required min=1 />\r\n        <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n        <mat-error *ngIf=\"form.get('threshold')?.hasError('required')\">\r\n          Seuil requise\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('threshold')?.hasError('min')\">\r\n          Seuil doit être au moins 1\r\n        </mat-error>\r\n      </mat-form-field>\r\n  \r\n    </mat-dialog-content>\r\n    <mat-dialog-content *ngIf=\"isUpdateMode()\" class=\"flex flex-col\">\r\n  \r\n      \r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Produit</mat-label>\r\n        <input formControlName=\"product\" matInput readonly/>\r\n  \r\n        <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n      </mat-form-field>\r\n  \r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Quantité Actuel</mat-label>\r\n        <input type=\"number\" formControlName=\"quantity\" matInput readonly/>\r\n  \r\n        <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Quantité Entrée</mat-label>\r\n        <input type=\"number\" formControlName=\"newQuantity\" matInput required min=1 />\r\n        <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n        <mat-error *ngIf=\"form.get('newQuantity')?.hasError('required')\">\r\n          Quantité requise\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('newQuantity')?.hasError('min')\">\r\n          La quantité doit être au moins 1\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Seuil</mat-label>\r\n        <input type=\"number\" formControlName=\"threshold\" matInput readonly/>\r\n  \r\n        <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n      </mat-form-field>\r\n  \r\n    </mat-dialog-content>\r\n  \r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button mat-dialog-close type=\"button\">Annuler</button>\r\n      <button *ngIf=\"isCreateMode() && form.invalid==false && productCtrl.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\" >\r\n      Nouveau Stock\r\n      </button>\r\n      <button *ngIf=\"isUpdateMode() && form.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\" >\r\n        Approvisionner Stock\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n  \r\n  \r\n  ","import {\r\n  AfterViewInit,\r\n  Component,\r\n  DestroyRef,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Observable, of, ReplaySubject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Stock } from '../../models/stocks';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\r\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\r\nimport { StockCreateUpdateComponent } from './stock-create-update/stock-create-update.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\r\nimport { stagger40ms } from '@vex/animations/stagger.animation';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  UntypedFormControl\r\n} from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { VexPageLayoutContentDirective } from '@vex/components/vex-page-layout/vex-page-layout-content.directive';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { VexBreadcrumbsComponent } from '@vex/components/vex-breadcrumbs/vex-breadcrumbs.component';\r\nimport { VexPageLayoutHeaderDirective } from '@vex/components/vex-page-layout/vex-page-layout-header.directive';\r\nimport { VexPageLayoutComponent } from '@vex/components/vex-page-layout/vex-page-layout.component';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Site } from '../../models/sites';\r\nimport { SitesService } from 'src/app/services/site/sites.service';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { StokcsService } from 'src/app/services/stock/stokcs.service';\r\nimport { StockReplenishment } from 'src/app/models/StockReplenishment';\r\nimport { StockReplenishmentsService } from 'src/app/services/StockReplenishment/stock-replenishments.service';\r\n\r\n@Component({\r\n  selector: 'vex-stock',\r\n  templateUrl: './stock.component.html',\r\n  styleUrls: ['./stock.component.scss'],\r\n  standalone : true,\r\n  animations: [fadeInUp400ms, stagger40ms],\r\n  imports: [\r\n    VexPageLayoutComponent,\r\n    VexPageLayoutHeaderDirective,\r\n    VexBreadcrumbsComponent,\r\n    MatButtonToggleModule,\r\n    ReactiveFormsModule,\r\n    VexPageLayoutContentDirective,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    NgFor,\r\n    NgClass,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule\r\n  ]\r\n})\r\nexport class StockComponent implements OnInit, AfterViewInit {\r\n  layoutCtrl = new UntypedFormControl('boxed');\r\n  id!: number;\r\n  site: Site = new Site();\r\n\r\n  /**\r\n   * Simulating a service with HTTP that returns Observables\r\n   * You probably want to remove this and do all requests in a service with HTTP\r\n   */\r\n  subject$: ReplaySubject<Stock[]> = new ReplaySubject<Stock[]>(1);\r\n  data$: Observable<Stock[]> = this.subject$.asObservable();\r\n  stocks: Stock[] = [];\r\n\r\n  @Input()\r\n  columns: TableColumn<Stock>[] = [\r\n    {\r\n      label: 'Produit',\r\n      property: 'product',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Quatité en Stock',\r\n      property: 'quantity',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Quatité Seuil',\r\n      property: 'threshold',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n\r\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 20, 50];\r\n  dataSource!: MatTableDataSource<Stock>;\r\n  selection = new SelectionModel<Stock>(true, []);\r\n  searchCtrl = new UntypedFormControl();\r\n\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\r\n\r\n  private readonly destroyRef: DestroyRef = inject(DestroyRef);\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private siteService: SitesService,\r\n    private stockService: StokcsService,\r\n    private stockReplenishment: StockReplenishmentsService,\r\n    private snackbar: MatSnackBar,\r\n  ) {}\r\n\r\n  get visibleColumns() {\r\n    return this.columns\r\n      .filter((column) => column.visible)\r\n      .map((column) => column.property);\r\n  }\r\n\r\n  /**\r\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\r\n   * We are simulating this request here.\r\n   */\r\n  getData(site:Site) {\r\n    return this.siteService.getSiteStocks(site).pipe(\r\n      map((result: any) => {\r\n        if (result.status===200) {\r\n          this.stocks = result.stocks || [];\r\n        }\r\n        return this.stocks.map((stock) => new Stock(stock));\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.id = Number(this.route.snapshot.params['id']);\r\n    this.id = history.state.siteId;\r\n    this.siteService.getSite(this.id).subscribe((result:any) => {\r\n        this.site = new Site(result.data);\r\n        this.getData(this.site).subscribe((stocks) => {  \r\n          this.subject$.next(stocks);\r\n        });\r\n    });\r\n\r\n\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.data$.pipe(filter<Stock[]>(Boolean)).subscribe((stocks) => {\r\n      this.stocks = stocks;\r\n        this.dataSource.data = stocks;\r\n    });\r\n\r\n    this.searchCtrl.valueChanges\r\n      .pipe(takeUntilDestroyed(this.destroyRef))\r\n      .subscribe((value) => this.onFilterChange(value));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.paginator) {\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    if (this.sort) {\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  createStock() {\r\n    this.dialog\r\n      .open(StockCreateUpdateComponent)\r\n      .afterClosed()\r\n      .subscribe((stock: Stock) => {\r\n        if (stock) {\r\n          stock.site_id=this.site.id;\r\n          const newStock = new Stock(stock);\r\n\r\n          if (this.stocks.find(s => s.product_id === newStock.product_id)) {\r\n            const stockReplenishment = new StockReplenishment(stock);\r\n            console.log(stockReplenishment);\r\n            const index = this.stocks.findIndex(\r\n              (existingStock) => existingStock.product_id === stock.product_id\r\n            );\r\n            this.stocks[index].quantity += new Stock(stock).quantity;\r\n            this.subject$.next(this.stocks);\r\n            \r\n              this.stockReplenishment.addStockReplenishment(stockReplenishment).subscribe((result:any) => {\r\n                if (result.status === 200) {\r\n                  \r\n                      this.snackbar.open(\r\n                        \"Stock effectué avec succés \",\r\n                        'MERCI',\r\n                        {\r\n                          duration: 2000\r\n                        }\r\n                      );\r\n                }else{\r\n                  this.snackbar.open(\r\n                    \"Echec Ajout Stock \",\r\n                    'MERCI DE REESSAYER',\r\n                    {\r\n                      duration: 2000\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            \r\n          }else{\r\n            console.log(stock,false);\r\n            \r\n            this.stocks.unshift(new Stock(stock));\r\n            this.subject$.next(this.stocks);\r\n            newStock.quantity=0;\r\n            this.stockService.addStock(newStock).subscribe((result:any) => {\r\n              if (result[\"status \"] === 200) {\r\n                this.stockReplenishment.addStockReplenishment(new StockReplenishment(stock)).subscribe((result:any) => {\r\n                  if (result.status === 200) {\r\n                    \r\n                        this.snackbar.open(\r\n                          \"Stock ajouté avec succés \",\r\n                          'MERCI',\r\n                          {\r\n                            duration: 2000\r\n                          }\r\n                        );\r\n                  }else{\r\n                    this.snackbar.open(\r\n                      \"Echec Ajout Stock \",\r\n                      'MERCI DE REESSAYER',\r\n                      {\r\n                        duration: 2000\r\n                      }\r\n                    );\r\n                  }\r\n                });\r\n              }else{\r\n                this.snackbar.open(\r\n                  \"Echec Ajout Stock effectué \",\r\n                  'MERCI DE REESSAYER',\r\n                  {\r\n                    duration: 2000\r\n                  }\r\n                );\r\n        \r\n              }\r\n            });\r\n          }\r\n          \r\n          \r\n        }\r\n      });\r\n  }\r\n\r\n  updateStock(stock: Stock) {\r\n    this.dialog\r\n      .open(StockCreateUpdateComponent, {\r\n        data: stock\r\n      })\r\n      .afterClosed()\r\n      .subscribe((updateStock) => {\r\n\r\n        if (updateStock) {\r\n          const stockReplenishment = new StockReplenishment(updateStock);\r\n          this.stockReplenishment.addStockReplenishment(stockReplenishment).subscribe((result:any) => {\r\n            if (result.status === 200) {\r\n              const index = this.stocks.findIndex(\r\n                (existingStock) => existingStock.id === updateStock.id\r\n              );\r\n              this.stocks[index].quantity += new Stock(updateStock).quantity;\r\n              this.subject$.next(this.stocks);\r\n              this.snackbar.open(\r\n                \"Stock ajouter avec succés\",\r\n                'MERCI',\r\n                {\r\n                  duration: 2000\r\n                }\r\n              );\r\n            }else{\r\n              this.snackbar.open(\r\n                \"Echec Ajout Stock\",\r\n                'MERCI DE REESSAYER',\r\n                {\r\n                  duration: 2000\r\n                }\r\n              );\r\n            }\r\n          });\r\n          \r\n          \r\n        }\r\n      });\r\n  }\r\n\r\n  deleteStock(stock: Stock) {\r\n\r\n    this.stocks.splice(\r\n      this.stocks.findIndex(\r\n        (existingStock) => existingStock.id === stock.id\r\n      ),\r\n      1\r\n    );\r\n    this.selection.deselect(stock);\r\n    this.subject$.next(this.stocks);\r\n  }\r\n\r\n  deleteStocks(stocks: Stock[]) {\r\n\r\n    stocks.forEach((s) => this.deleteStock(s));\r\n  }\r\n\r\n \r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column: TableColumn<Stock>, event: Event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  onLabelChange(change: MatSelectChange, row: Stock) {\r\n    const index = this.stocks.findIndex((s) => s === row);\r\n    this.subject$.next(this.stocks);\r\n  }\r\n}\r\n\r\n","<vex-page-layout>\r\n    <vex-page-layout-header\r\n      class=\"pb-1 flex flex-col items-start justify-center\">\r\n    </vex-page-layout-header>\r\n  \r\n    <vex-page-layout-content\r\n      [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n      [class.px-6]=\"layoutCtrl.value === 'fullwidth'\"\r\n      class=\"-mt-6\">\r\n      <div class=\"card overflow-auto -mt-16\">\r\n        <div\r\n          class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\r\n          <h2\r\n            class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\r\n            <span *ngIf=\"selection.isEmpty()\">Stocks: {{site.name}}</span>\r\n          </h2>\r\n  \r\n          \r\n  \r\n          <mat-form-field subscriptSizing=\"dynamic\">\r\n            <mat-icon matIconPrefix svgIcon=\"mat:search\"></mat-icon>\r\n            <input\r\n              matInput\r\n              [formControl]=\"searchCtrl\"\r\n              placeholder=\"Search&hellip;\"\r\n              type=\"text\" />\r\n          </mat-form-field>\r\n  \r\n          <span class=\"flex-1\"></span>\r\n  \r\n          <button\r\n            [matMenuTriggerFor]=\"columnFilterMenu\"\r\n            class=\"ml-4 flex-none\"\r\n            mat-icon-button\r\n            matTooltip=\"Filter Columns\"\r\n            type=\"button\">\r\n            <mat-icon svgIcon=\"mat:filter_list\"></mat-icon>\r\n          </button>\r\n  \r\n          <button\r\n            (click)=\"createStock()\"\r\n            class=\"ml-4 flex-none\"\r\n            color=\"primary\"\r\n            mat-mini-fab\r\n            matTooltip=\"Add Stock\"\r\n            type=\"button\">\r\n            <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n          </button>\r\n        </div>\r\n  \r\n        <table\r\n          @stagger\r\n          [dataSource]=\"dataSource\"\r\n          class=\"w-full\"\r\n          mat-table\r\n          matSort>\r\n          <!--- Note that these columns can be defined in any order.\r\n                The actual rendered columns are set as a property on the row definition\" -->\r\n  \r\n          <!-- Checkbox Column -->\r\n          <ng-container matColumnDef=\"checkbox\">\r\n            <th *matHeaderCellDef mat-header-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? masterToggle() : null\"\r\n                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                color=\"primary\">\r\n              </mat-checkbox>\r\n            </th>\r\n            <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? selection.toggle(row) : null\"\r\n                (click)=\"$event.stopPropagation()\"\r\n                [checked]=\"selection.isSelected(row)\"\r\n                color=\"primary\">\r\n              </mat-checkbox>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Image Column -->\r\n          <ng-container matColumnDef=\"image\">\r\n            <th *matHeaderCellDef mat-header-cell></th>\r\n            <td *matCellDef=\"let row\" class=\"w-8 min-w-8 p-0\" mat-cell>\r\n              <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\" />\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Text Columns -->\r\n          <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n            <ng-container\r\n              *ngIf=\"column.type === 'text' && column.property !== 'quantity'\"\r\n              [matColumnDef]=\"column.property\">\r\n              <th\r\n                *matHeaderCellDef\r\n                class=\"uppercase\"\r\n                mat-header-cell\r\n                mat-sort-header>\r\n                {{ column.label }}\r\n              </th>\r\n              <td *matCellDef=\"let row\"  [ngClass]=\"column.cssClasses\" mat-cell>\r\n                {{ row[column.property] }}\r\n              </td>\r\n            </ng-container>\r\n            <ng-container\r\n              *ngIf=\"column.type === 'text' && column.property === 'quantity'\"\r\n              [matColumnDef]=\"column.property\">\r\n              <th\r\n                *matHeaderCellDef\r\n                class=\"uppercase\"\r\n                mat-header-cell\r\n                mat-sort-header>\r\n                {{ column.label }}\r\n              </th>\r\n              <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n                {{ row[column.property] }} Kg\r\n              </td>\r\n            </ng-container>\r\n          </ng-container>\r\n  \r\n          <!-- Conversion (kg-m)-->\r\n          <ng-container matColumnDef=\"contact\">\r\n            <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n            <td *matCellDef=\"let row\" mat-cell>\r\n              <div class=\"flex\">\r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center hover:bg-hover text-primary-600 bg-primary-600/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\r\n                </a>\r\n  \r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal-600 bg-teal/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\r\n                </a>\r\n  \r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green-600 bg-green-600/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\r\n                </a>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Label Column -->\r\n          <ng-container matColumnDef=\"labels\">\r\n            <th\r\n              *matHeaderCellDef\r\n              class=\"uppercase\"\r\n              mat-header-cell\r\n              mat-sort-header>\r\n              Qualité\r\n            </th>\r\n            <td *matCellDef=\"let row\" mat-cell>\r\n              <div\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"flex items-center gap-1\">\r\n                <div\r\n                  class=\"bg-base text-hint cursor-pointer hover:bg-hover flex-none flex items-center justify-center\">\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:add\"></mat-icon>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Action Column -->\r\n          <ng-container matColumnDef=\"actions\">\r\n            <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n            <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n              <button\r\n                (click)=\"$event.stopPropagation()\"\r\n                [matMenuTriggerData]=\"{ stock: row }\"\r\n                [matMenuTriggerFor]=\"actionsMenu\"\r\n                mat-icon-button\r\n                type=\"button\">\r\n                <mat-icon svgIcon=\"mat:more_horiz\"></mat-icon>\r\n              </button>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n          <tr\r\n            (click)=\"updateStock(row)\"\r\n            *matRowDef=\"let row; columns: visibleColumns\"\r\n            @fadeInUp\r\n            class=\"hover:bg-hover transition duration-400 ease-out-swift cursor-pointer\"\r\n            mat-row></tr>\r\n        </table>\r\n  \r\n        <mat-paginator\r\n          [pageSizeOptions]=\"pageSizeOptions\"\r\n          [pageSize]=\"pageSize\"\r\n          class=\"sticky left-0\"></mat-paginator>\r\n      </div>\r\n    </vex-page-layout-content>\r\n  </vex-page-layout>\r\n  \r\n  <mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n    <button\r\n      (click)=\"toggleColumnVisibility(column, $event)\"\r\n      *ngFor=\"let column of columns\"\r\n      class=\"mat-menu-item block\">\r\n      <mat-checkbox (click)=\"$event.stopPropagation()\" [(ngModel)]=\"column.visible\" color=\"primary\">\r\n        {{ column.label }}\r\n      </mat-checkbox>\r\n    </button>\r\n  </mat-menu>\r\n  \r\n  <mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n    <ng-template let-stock=\"stock\" matMenuContent>\r\n      <button (click)=\"updateStock(stock)\" mat-menu-item>\r\n        <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n        <span>Approvionner</span>\r\n      </button>\r\n      <!-- \r\n        Supression de stock\r\n        <button (click)=\"deleteStock(stock)\" mat-menu-item>\r\n        <mat-icon svgIcon=\"mat:delete\"></mat-icon>\r\n        <span>Supprimer</span>\r\n      </button> \r\n    -->\r\n    </ng-template>\r\n  </mat-menu>\r\n  ","export class Product {\r\n  id: number;\r\n  name: string;\r\n  quality: string;\r\n  conversion_rate: number;\r\n\r\n  constructor(product: any) {\r\n    this.id = product.id;\r\n    this.name = product.name;\r\n    this.quality = product.quality;\r\n    this.conversion_rate = product.conversion_rate;\r\n  }\r\n\r\n}\r\n","export class Site {\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n\r\n  constructor(site?: any) {\r\n    if (site) {\r\n      this.id = site.id;\r\n      this.name = site.name;\r\n      this.address = site.address;\r\n    } else {\r\n      this.id = 0;\r\n      this.name = '';\r\n      this.address = '';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Product } from 'src/app/models/products';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  \r\n\r\n  getProducts():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/products`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  getProductNotInStock(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/productsWithoutStock`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  addProduct(product:Product):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/products`, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateProduct(product:Product):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/products/`+product.id, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  checkProductExistsInStock(product:number,site:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+product+`/product/`+site+`/checkProductExistsInSiteStock`,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n\r\n  \r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SitesService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  getSites():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  addSite(site:Site):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/sites`, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateSite(site:Site):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/sites/`+site.id, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSite(id:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+id, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSiteStocks(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/stocks`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n}\r\n"],"names":["ReactiveFormsModule","UntypedFormControl","Validators","MAT_DIALOG_DATA","MatDialogModule","MatInputModule","MatFormFieldModule","MatDividerModule","MatIconModule","MatMenuModule","MatButtonModule","MatOptionModule","NgFor","NgIf","Product","MatAutocompleteModule","map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","product_r15","id","ɵɵadvance","ɵɵtextInterpolate1","name","ɵɵlistener","StockCreateUpdateComponent_mat_dialog_content_7_button_8_Template_button_click_0_listener","ɵɵrestoreView","_r17","ctx_r16","ɵɵnextContext","ɵɵresetView","productCtrl","reset","ɵɵelement","ɵɵtemplate","StockCreateUpdateComponent_mat_dialog_content_7_mat_option_7_Template","StockCreateUpdateComponent_mat_dialog_content_7_button_8_Template","StockCreateUpdateComponent_mat_dialog_content_7_button_9_Template","StockCreateUpdateComponent_mat_dialog_content_7_mat_error_10_Template","StockCreateUpdateComponent_mat_dialog_content_7_mat_error_16_Template","StockCreateUpdateComponent_mat_dialog_content_7_mat_error_17_Template","StockCreateUpdateComponent_mat_dialog_content_7_mat_error_23_Template","StockCreateUpdateComponent_mat_dialog_content_7_mat_error_24_Template","ctx_r2","_r6","getProductNameById","value","products","invalid","tmp_7_0","form","get","hasError","tmp_8_0","tmp_9_0","tmp_10_0","StockCreateUpdateComponent_mat_dialog_content_8_mat_error_16_Template","StockCreateUpdateComponent_mat_dialog_content_8_mat_error_17_Template","tmp_0_0","ctx_r3","tmp_1_0","StockCreateUpdateComponent","_","constructor","defaults","dialogRef","fb","productService","newQuantity","productId","productName","group","site_id","site","product_id","product","quantity","required","min","threshold","mode","getProducts","pipe","result","total","data","ngOnInit","subscribe","addControl","patchValue","save","createStock","updateStock","setValue","stock","close","Number","Error","isCreateMode","isUpdateMode","find","p","_2","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","i3","ProductsService","_3","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","StockCreateUpdateComponent_Template","rf","ctx","StockCreateUpdateComponent_Template_form_ngSubmit_0_listener","StockCreateUpdateComponent_h2_2_Template","StockCreateUpdateComponent_h2_3_Template","StockCreateUpdateComponent_mat_dialog_content_7_Template","StockCreateUpdateComponent_mat_dialog_content_8_Template","StockCreateUpdateComponent_button_12_Template","StockCreateUpdateComponent_button_13_Template","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinValidator","FormControlDirective","FormGroupDirective","FormControlName","i4","MatAutocomplete","i5","MatOption","MatAutocompleteTrigger","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i6","MatButton","MatIconButton","i7","MatIcon","i8","MatDivider","i9","MatFormField","MatLabel","MatError","MatPrefix","MatSuffix","i10","MatInput","styles","DestroyRef","inject","ReplaySubject","filter","Stock","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","SelectionModel","fadeInUp400ms","stagger40ms","FormsModule","MatCheckboxModule","MatTooltipModule","NgClass","VexPageLayoutContentDirective","MatButtonToggleModule","VexPageLayoutHeaderDirective","VexPageLayoutComponent","takeUntilDestroyed","Site","MatSnackBarModule","StockReplenishment","ctx_r0","StockComponent_th_17_Template_mat_checkbox_change_1_listener","$event","_r19","ctx_r18","masterToggle","ctx_r1","selection","hasValue","isAllSelected","StockComponent_td_18_Template_mat_checkbox_change_1_listener","restoredCtx","_r22","row_r20","$implicit","ctx_r21","toggle","StockComponent_td_18_Template_mat_checkbox_click_1_listener","stopPropagation","isSelected","row_r24","ɵɵsanitizeUrl","column_r25","label","cssClasses","row_r31","property","ɵɵelementContainerStart","StockComponent_ng_container_22_ng_container_1_th_1_Template","StockComponent_ng_container_22_ng_container_1_td_2_Template","ɵɵelementContainerEnd","row_r37","StockComponent_ng_container_22_ng_container_2_th_1_Template","StockComponent_ng_container_22_ng_container_2_td_2_Template","StockComponent_ng_container_22_ng_container_1_Template","StockComponent_ng_container_22_ng_container_2_Template","type","StockComponent_td_25_Template_a_click_2_listener","StockComponent_td_25_Template_a_click_4_listener","StockComponent_td_25_Template_a_click_6_listener","StockComponent_td_28_Template_div_click_1_listener","StockComponent_td_31_Template_button_click_1_listener","ɵɵpureFunction1","_c0","row_r46","_r16","StockComponent_tr_33_Template_tr_click_0_listener","_r50","row_r48","ctx_r49","undefined","StockComponent_button_37_Template_button_click_0_listener","_r53","column_r51","ctx_r52","toggleColumnVisibility","StockComponent_button_37_Template_mat_checkbox_click_1_listener","StockComponent_button_37_Template_mat_checkbox_ngModelChange_1_listener","visible","StockComponent_ng_template_40_Template_button_click_0_listener","_r58","stock_r56","ctx_r57","StockComponent","dialog","route","siteService","stockService","stockReplenishment","snackbar","layoutCtrl","subject$","data$","asObservable","stocks","columns","pageSize","pageSizeOptions","searchCtrl","destroyRef","visibleColumns","column","getData","getSiteStocks","status","history","state","siteId","getSite","next","dataSource","Boolean","valueChanges","onFilterChange","ngAfterViewInit","paginator","sort","open","afterClosed","newStock","s","console","log","index","findIndex","existingStock","addStockReplenishment","duration","unshift","addStock","deleteStock","splice","deselect","deleteStocks","forEach","trim","toLowerCase","event","stopImmediatePropagation","numSelected","selected","length","numRows","clear","row","select","trackByProperty","onLabelChange","change","MatDialog","ActivatedRoute","SitesService","StokcsService","StockReplenishmentsService","MatSnackBar","viewQuery","StockComponent_Query","StockComponent_span_6_Template","StockComponent_Template_button_click_13_listener","StockComponent_th_17_Template","StockComponent_td_18_Template","StockComponent_th_20_Template","StockComponent_td_21_Template","StockComponent_ng_container_22_Template","StockComponent_th_24_Template","StockComponent_td_25_Template","StockComponent_th_27_Template","StockComponent_td_28_Template","StockComponent_th_30_Template","StockComponent_td_31_Template","StockComponent_tr_32_Template","StockComponent_tr_33_Template","StockComponent_button_37_Template","StockComponent_ng_template_40_Template","ɵɵclassProp","isEmpty","_r14","MatIconAnchor","MatMiniFabButton","MatTooltip","i11","MatMenu","MatMenuItem","MatMenuContent","MatMenuTrigger","i12","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i13","MatSortHeader","i14","MatCheckbox","i15","NgModel","i16","i17","animation","quality","conversion_rate","address","environment","httpClient","router","localStorage","BASE_URL","getAuthorization","getProductNotInStock","addProduct","post","updateProduct","put","checkProductExistsInStock","ɵɵinject","HttpClient","Router","LocalStorageService","factory","ɵfac","providedIn","getSites","addSite","updateSite"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}