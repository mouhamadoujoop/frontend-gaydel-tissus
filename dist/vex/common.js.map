{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;AAAsF;AACxD;AAExB,MAAOE,kBAAkB;EAa7BC,YAAYC,kBAAwB;IAClC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC;IAClC,MAAMC,mBAAmB,GAAGR,8FAAmB,CAACS,WAAW,EAAE;IAC7D,MAAMC,QAAQ,GAAGF,mBAAmB,CAACG,OAAO,CAAC,UAAU,CAAC;IACxD,MAAMC,QAAQ,GAAGF,QAAQ,GAAG,IAAIT,uCAAI,CAACY,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAAC,GAAG,IAAIT,uCAAI,CAAC;MAAEc,EAAE,EAAE,IAAI;MAAEC,UAAU,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAM,CAAE,CAAC;IAC7H,IAAI,CAACC,OAAO,GAAGd,kBAAkB,CAACc,OAAO,GAAGd,kBAAkB,CAACc,OAAO,GAAGN,QAAQ,CAACG,EAAE;IACpF,IAAI,CAACI,IAAI,GAAIf,kBAAkB,CAACe,IAAI,IAAKf,kBAAkB,CAACe,IAAI,CAACH,UAAU,GAAGZ,kBAAkB,CAACe,IAAI,CAACH,UAAU,GAAC,GAAG,GAACZ,kBAAkB,CAACe,IAAI,CAACF,SAAS,GAAGb,kBAAkB,CAACe,IAAI,GAAGf,kBAAkB,CAACe,IAAI,GAAE,GAAGP,QAAQ,CAACI,UAAU,IAAIJ,QAAQ,CAACK,SAAS,EAAE;IAC1P,IAAIb,kBAAkB,EAAE;MACtB,IAAI,CAACW,EAAE,GAAGX,kBAAkB,CAACW,EAAE;MAC/B,IAAI,CAACK,OAAO,GAAGhB,kBAAkB,CAACgB,OAAO;MACzC,IAAI,CAACC,IAAI,GAAGjB,kBAAkB,CAACiB,IAAI;MACnC,IAAI,CAACC,UAAU,GAAGlB,kBAAkB,CAACkB,UAAU;MAC/C,IAAI,CAACC,OAAO,GAAInB,kBAAkB,CAACmB,OAAO,IAAInB,kBAAkB,CAACmB,OAAO,CAACC,IAAI,GAAIpB,kBAAkB,CAACmB,OAAO,CAACC,IAAI,GAAGpB,kBAAkB,CAACmB,OAAO;MAC7I,IAAI,CAACE,oBAAoB,GAAIrB,kBAAkB,CAACsB,QAAQ,GAAItB,kBAAkB,CAACsB,QAAQ,GAAGtB,kBAAkB,CAACqB,oBAAoB;MACjI,IAAI,CAACE,kBAAkB,GAAIvB,kBAAkB,CAACuB,kBAAkB,GAAIvB,kBAAkB,CAACuB,kBAAkB,GAAGtB,KAAK,CAACuB,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;MAChJ,IAAI,CAACC,cAAc,GAAG,IAAI,CAACC,UAAU,CAAC,IAAIzB,IAAI,CAAC,IAAI,CAACqB,kBAAkB,CAAC,CAAC;KACzE,MAAM;MACL,IAAI,CAACZ,EAAE,GAAG,CAAC;MACX,IAAI,CAACK,OAAO,GAAG,CAAC;MAChB,IAAI,CAACC,IAAI,GAAG,EAAE;MACd,IAAI,CAACC,UAAU,GAAG,CAAC;MACnB,IAAI,CAACC,OAAO,GAAG,EAAE;MACjB,IAAI,CAACE,oBAAoB,GAAG,CAAC;MAC7B,IAAI,CAACE,kBAAkB,GAAGtB,KAAK,CAACuB,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;MAC9D,IAAI,CAACC,cAAc,GAAG,IAAI,CAACC,UAAU,CAAC1B,KAAK,CAAC;;EAEhD;EACQ0B,UAAUA,CAACC,IAAU;IAC3B,MAAMC,GAAG,GAAGD,IAAI,CAACE,OAAO,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACtD,MAAMC,UAAU,GAAG,CACjB,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACpD,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAClE;IACD,MAAMC,KAAK,GAAGD,UAAU,CAACL,IAAI,CAACO,QAAQ,EAAE,CAAC;IACzC,MAAMC,IAAI,GAAGR,IAAI,CAACS,WAAW,EAAE,CAACN,QAAQ,EAAE;IAC1C,OAAO,GAAGF,GAAG,IAAIK,KAAK,IAAIE,IAAI,EAAE;EAClC;;;;;;;;;;;;;;;;;ACpDyF;AAC7D;AACxB,MAAOE,KAAK;EAYhBvC,YAAYwC,KAAU;IACpB,MAAMnC,mBAAmB,GAAGR,qGAAmB,CAACS,WAAW,EAAE;IAC7D,MAAMC,QAAQ,GAAGF,mBAAmB,CAACG,OAAO,CAAC,UAAU,CAAC;IACxD,MAAMC,QAAQ,GAAGF,QAAQ,GAAG,IAAIT,uCAAI,CAACY,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAAC,GAAG,IAAIT,uCAAI,CAAC;MAAEc,EAAE,EAAE,IAAI;MAAEC,UAAU,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAM,CAAE,CAAC;IAC7H,IAAI,CAACF,EAAE,GAAG4B,KAAK,CAAC5B,EAAE;IAClB,IAAI,CAACK,OAAO,GAAGuB,KAAK,CAACvB,OAAO;IAC5B,IAAI,CAACC,IAAI,GAAIsB,KAAK,CAACtB,IAAI,IAAIsB,KAAK,CAACtB,IAAI,CAACG,IAAI,GAAImB,KAAK,CAACtB,IAAI,CAACG,IAAI,GAAGmB,KAAK,CAACtB,IAAI;IAC1E,IAAI,CAACH,OAAO,GAAGyB,KAAK,CAACzB,OAAO,GAAGyB,KAAK,CAACzB,OAAO,GAAGN,QAAQ,CAACG,EAAE;IAC1D,IAAI,CAACI,IAAI,GAAIwB,KAAK,CAACxB,IAAI,IAAKwB,KAAK,CAACxB,IAAI,CAACH,UAAU,GAAG2B,KAAK,CAACxB,IAAI,CAACH,UAAU,GAAC,GAAG,GAAC2B,KAAK,CAACxB,IAAI,CAACF,SAAS,GAAG0B,KAAK,CAACxB,IAAI,GAAGwB,KAAK,CAACxB,IAAI,GAAE,GAAGP,QAAQ,CAACI,UAAU,IAAIJ,QAAQ,CAACK,SAAS,EAAE;IAC5K,IAAI,CAACK,UAAU,GAAGqB,KAAK,CAACrB,UAAU;IAClC,IAAI,CAACC,OAAO,GAAIoB,KAAK,CAACpB,OAAO,IAAIoB,KAAK,CAACpB,OAAO,CAACC,IAAI,GAAImB,KAAK,CAACpB,OAAO,CAACC,IAAI,GAAGmB,KAAK,CAACpB,OAAO;IACzF,IAAI,CAACG,QAAQ,GAAGiB,KAAK,CAACjB,QAAQ;IAC9B,IAAI,CAACkB,SAAS,GAAGD,KAAK,CAACC,SAAS;EAClC;;;;;;;;;;;;;;;;;;;;ACrB6D;;;;;AAG/D,MAGaE,0BAA0B;EAGrC3C,YACU4C,UAAsB,EACtBC,MAAc,EACdC,YAAiC;IAFjC,KAAAF,UAAU,GAAVA,UAAU;IACV,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IALtB,KAAAC,QAAQ,GAAGL,yEAAW,CAACK,QAAQ;EAM3B;EAGJC,sBAAsBA,CAAC9B,IAAS;IAC9B,OAAO,IAAI,CAAC0B,UAAU,CAACK,GAAG,CAAC,GAAG,IAAI,CAACF,QAAQ,SAAS,GAAC7B,IAAI,CAACN,EAAE,GAAC,sBAAsB,EAAE;MAAC,GAAI,IAAI,CAACkC,YAAY,CAACI,gBAAgB;IAAE,CAAC,CAAC;EAElI;EAEAC,qBAAqBA,CAAClD,kBAAqC;IACzD,OAAO,IAAI,CAAC2C,UAAU,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACL,QAAQ,sBAAsB,EAAE9C,kBAAkB,EAAC;MAAC,GAAI,IAAI,CAAC6C,YAAY,CAACI,gBAAgB;IAAE,CAAC,CAAC;EAEpI;EAEAG,wBAAwBA,CAACpD,kBAAqC;IAC5D,OAAO,IAAI,CAAC2C,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACP,QAAQ,uBAAuB,GAAC9C,kBAAkB,CAACW,EAAE,EAAEX,kBAAkB,EAAC;MAAC,GAAI,IAAI,CAAC6C,YAAY,CAACI,gBAAgB;IAAE,CAAC,CAAC;EAE1J;EAAC,QAAAK,CAAA;qBAvBUZ,0BAA0B,EAAAa,sDAAA,CAAAE,4DAAA,GAAAF,sDAAA,CAAAI,mDAAA,GAAAJ,sDAAA,CAAAM,qFAAA;EAAA;EAAA,QAAAC,EAAA;WAA1BpB,0BAA0B;IAAAqB,OAAA,EAA1BrB,0BAA0B,CAAAsB,IAAA;IAAAC,UAAA,EAFzB;EAAM;;;;;;;;;;;;;;;;;;;;;ACTyC;;;;;AAO7D,MAGaC,cAAc;EAGzBnE,YACU4C,UAAsB,EACtBC,MAAc,EACdC,YAAiC;IAFjC,KAAAF,UAAU,GAAVA,UAAU;IACV,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IALtB,KAAAC,QAAQ,GAAGL,kEAAW,CAACK,QAAQ;EAM3B;EAEJqB,eAAeA,CAACC,IAAW,EAACC,MAAa;IACvC,OAAO,IAAI,CAAC1B,UAAU,CAACK,GAAG,CAAC,GAAG,IAAI,CAACF,QAAQ,iBAAiB,GAACuB,MAAM,GAAC,QAAQ,GAACD,IAAI,EAAE;MAAC,GAAI,IAAI,CAACvB,YAAY,CAACI,gBAAgB;IAAE,CAAC,CAAC;EAEhI;EAEAqB,eAAeA,CAACC,OAAgB;IAC9B,OAAO,IAAI,CAAC5B,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACP,QAAQ,qBAAqB,GAACyB,OAAO,CAAC5D,EAAE,EAAE,EAAE,EAAC;MAAC,GAAI,IAAI,CAACkC,YAAY,CAACI,gBAAgB;IAAE,CAAC,CAAC;EAE7H;EACAuB,qBAAqBA,CAACC,SAAgB,EAACC,MAAa;IAClD,MAAMC,WAAW,GAAG;MAClBC,UAAU,EAAEH,SAAS;MACrBC,MAAM,EAAEA;KACT;IACD,OAAO,IAAI,CAAC/B,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACP,QAAQ,2BAA2B,EAAE6B,WAAW,EAAC;MAAC,GAAI,IAAI,CAAC9B,YAAY,CAACI,gBAAgB;IAAE,CAAC,CAAC;EAEjI;EAAC,QAAAK,CAAA;qBAzBUY,cAAc,EAAAX,sDAAA,CAAAE,4DAAA,GAAAF,sDAAA,CAAAI,mDAAA,GAAAJ,sDAAA,CAAAM,qFAAA;EAAA;EAAA,QAAAC,EAAA;WAAdI,cAAc;IAAAH,OAAA,EAAdG,cAAc,CAAAF,IAAA;IAAAC,UAAA,EAFb;EAAM;;;;;;;;;;;;;;;;;;ACRkB;;AAEtC,MAGaa,iBAAiB;EAG5B/E,YAAA,GAAgB;EACTgF,QAAQA,CAACC,KAAU;IACxBnC,YAAY,CAACoC,OAAO,CAAC,OAAO,EAAExE,IAAI,CAACyE,SAAS,CAACF,KAAK,CAAC,CAAC;EACtD;EACOG,SAASA,CAAA;IACd,OAAOtC,YAAY,CAACuC,OAAO,CAAC,QAAQ,CAAC;EACvC;EACOC,UAAUA,CAACL,KAAU;IAC1BnC,YAAY,CAACoC,OAAO,CAAC,QAAQ,EAAExE,IAAI,CAACyE,SAAS,CAACF,KAAK,CAAC,CAAC;EACvD;EACOzE,OAAOA,CAAA;IACZ,OAAOsC,YAAY,CAACuC,OAAO,CAAC,OAAO,CAAC;EACtC;EACOE,UAAUA,CAAA;IACfzC,YAAY,CAAC0C,UAAU,CAAC,OAAO,CAAC;IAChC1C,YAAY,CAAC0C,UAAU,CAAC,QAAQ,CAAC;EACnC;EACOC,iBAAiBA,CAAA;IACtB,MAAMC,IAAI,GAAG,IAAI,CAAClF,OAAO,EAAE;IAC3B,OAAOsE,wCAAE,CAACY,IAAI,CAAC;EACjB;EAAC,QAAAnC,CAAA;qBAvBUwB,iBAAiB;EAAA;EAAA,QAAAhB,EAAA;WAAjBgB,iBAAiB;IAAAf,OAAA,EAAjBe,iBAAiB,CAAAd,IAAA;IAAAC,UAAA,EAFhB;EAAM;;;;;;;;;;;;;;;;;;;;;ACD2C;;;;;AAK/D,MAGayB,aAAa;EAExB;EAEA3F,YACU4C,UAAsB,EACtBC,MAAc,EACdC,YAAiC;IAFjC,KAAAF,UAAU,GAAVA,UAAU;IACV,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IANtB,KAAAC,QAAQ,GAAGL,yEAAW,CAACK,QAAQ;EAO7B;EAGF6C,SAASA,CAAA;IACP,OAAO,IAAI,CAAChD,UAAU,CAACK,GAAG,CAAC,GAAG,IAAI,CAACF,QAAQ,SAAS,EAAE;MAAC,GAAI,IAAI,CAACD,YAAY,CAACI,gBAAgB;IAAE,CAAC,CAAC;EAEnG;EAEA2C,QAAQA,CAACrD,KAAW;IAClB,OAAO,IAAI,CAACI,UAAU,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACL,QAAQ,SAAS,EAAEP,KAAK,EAAC;MAAC,GAAI,IAAI,CAACM,YAAY,CAACI,gBAAgB;IAAE,CAAC,CAAC;EAE1G;EAEA4C,WAAWA,CAACtD,KAAW;IACrB,OAAO,IAAI,CAACI,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACP,QAAQ,UAAU,GAACP,KAAK,CAAC5B,EAAE,EAAE4B,KAAK,EAAC;MAAC,GAAI,IAAI,CAACM,YAAY,CAACI,gBAAgB;IAAE,CAAC,CAAC;EAEnH;EAAC,QAAAK,CAAA;qBAxBUoC,aAAa,EAAAnC,sDAAA,CAAAE,4DAAA,GAAAF,sDAAA,CAAAI,mDAAA,GAAAJ,sDAAA,CAAAM,qFAAA;EAAA;EAAA,QAAAC,EAAA;WAAb4B,aAAa;IAAA3B,OAAA,EAAb2B,aAAa,CAAA1B,IAAA;IAAAC,UAAA,EAFZ;EAAM","sources":["./src/app/models/StockReplenishment.ts","./src/app/models/stocks.ts","./src/app/services/StockReplenishment/stock-replenishments.service.ts","./src/app/services/invoice/invoice.service.ts","./src/app/services/pdf/pdf-service.service.ts","./src/app/services/stock/stokcs.service.ts"],"sourcesContent":["import { LocalStorageService } from \"../services/local-storage/local-storage.service\";\r\nimport { User } from \"./user\";\r\n\r\nexport class StockReplenishment {\r\n  id: number;\r\n  site_id: number;\r\n  site: string;\r\n  user_id: number;\r\n  user: string;\r\n  product_id: number;\r\n  product: string;\r\n  quantity_replenished: number;\r\n  replenishment_date: string;\r\n  displayed_Date: string;\r\n\r\n\r\n  constructor(stockReplenishment?: any) {\r\n    const today = new Date(Date.now());\r\n    const localStorageService = LocalStorageService.getInstance();\r\n    const userData = localStorageService.getData('dataUser');\r\n    const userInfo = userData ? new User(JSON.parse(userData)) : new User({ id: null, first_name: 'Unknown', last_name: 'User' });\r\n    this.user_id = stockReplenishment.user_id ? stockReplenishment.user_id : userInfo.id;\r\n    this.user = (stockReplenishment.user  && stockReplenishment.user.first_name)? stockReplenishment.user.first_name+' '+stockReplenishment.user.last_name :(stockReplenishment.user)? stockReplenishment.user: `${userInfo.first_name} ${userInfo.last_name}`;\r\n    if (stockReplenishment) {\r\n      this.id = stockReplenishment.id;\r\n      this.site_id = stockReplenishment.site_id;\r\n      this.site = stockReplenishment.site;\r\n      this.product_id = stockReplenishment.product_id;\r\n      this.product = (stockReplenishment.product && stockReplenishment.product.name) ? stockReplenishment.product.name : stockReplenishment.product;\r\n      this.quantity_replenished = (stockReplenishment.quantity) ? stockReplenishment.quantity : stockReplenishment.quantity_replenished;\r\n      this.replenishment_date = (stockReplenishment.replenishment_date) ? stockReplenishment.replenishment_date : today.toISOString().substring(0, 10);\r\n      this.displayed_Date = this.formatDate(new Date(this.replenishment_date));\r\n    } else {\r\n      this.id = 0;\r\n      this.site_id = 0;\r\n      this.site = '';\r\n      this.product_id = 0;\r\n      this.product = '';\r\n      this.quantity_replenished = 0;\r\n      this.replenishment_date = today.toISOString().substring(0, 10);\r\n      this.displayed_Date = this.formatDate(today);\r\n    }\r\n  }\r\n  private formatDate(date: Date): string {\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const monthNames = [\r\n      'Janvier', 'FÃ©vrier', 'Mars', 'Avril', 'Mai', 'Juin',\r\n      'Juillet', 'AoÃ»t', 'Septembre', 'Octobre', 'Novembre', 'DÃ©cembre'\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const year = date.getFullYear().toString();\r\n    return `${day} ${month} ${year}`;\r\n  }\r\n}\r\n","import { LocalStorageService } from 'src/app/services/local-storage/local-storage.service';\r\nimport { User } from './user';\r\nexport class Stock {\r\n  id: number;\r\n  site_id: number;\r\n  site: string;\r\n  user_id: number;\r\n  user: string;\r\n  product_id: number;\r\n  product: string;\r\n  quantity: number;\r\n  threshold: number;\r\n\r\n\r\n  constructor(stock: any) {\r\n    const localStorageService = LocalStorageService.getInstance();\r\n    const userData = localStorageService.getData('dataUser');\r\n    const userInfo = userData ? new User(JSON.parse(userData)) : new User({ id: null, first_name: 'Unknown', last_name: 'User' });\r\n    this.id = stock.id;\r\n    this.site_id = stock.site_id;\r\n    this.site = (stock.site && stock.site.name) ? stock.site.name : stock.site;\r\n    this.user_id = stock.user_id ? stock.user_id : userInfo.id;\r\n    this.user = (stock.user  && stock.user.first_name)? stock.user.first_name+' '+stock.user.last_name :(stock.user)? stock.user: `${userInfo.first_name} ${userInfo.last_name}`;\r\n    this.product_id = stock.product_id;\r\n    this.product = (stock.product && stock.product.name) ? stock.product.name : stock.product;\r\n    this.quantity = stock.quantity;\r\n    this.threshold = stock.threshold;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { StockReplenishment } from 'src/app/models/StockReplenishment';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StockReplenishmentsService {\r\n  BASE_URL = environment.BASE_URL\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ) { }\r\n\r\n  \r\n  getStockReplenishments(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/stockReplenishments`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  addStockReplenishment(stockReplenishment:StockReplenishment):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/stock-replenishment`, stockReplenishment,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateStockReplenishment(stockReplenishment:StockReplenishment):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/stock-replenishment/`+stockReplenishment.id, stockReplenishment,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { Router } from '@angular/router';\nimport { Invoices } from 'src/app/models/invoices';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceService {\n  BASE_URL = environment.BASE_URL\n\n  constructor(\n    private httpClient: HttpClient,\n    private router: Router,\n    private localStorage: LocalStorageService\n  ) { }\n\n  getInvoicByStep(step:number,siteID:number):Observable<any>{\n    return this.httpClient.get(`${this.BASE_URL}/invoices/site/`+siteID+`/step/`+step, {... this.localStorage.getAuthorization()});\n\n  }\n\n  validateInvoice(invoice:Invoices):Observable<any>{\n    return this.httpClient.put(`${this.BASE_URL}/invoices/validate/`+invoice.id, {},{... this.localStorage.getAuthorization()});\n\n  }\n  validateClientInvoice(invoiceID:number,amount:number):Observable<any>{\n    const requestData = {\n      invoice_id: invoiceID,\n      amount: amount\n    };\n    return this.httpClient.put(`${this.BASE_URL}/invoices/client/validate`, requestData,{... this.localStorage.getAuthorization()});\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PdfServiceService {\n\n\n  constructor() { }\n  public saveData(value: any) {\n    localStorage.setItem('sales', JSON.stringify(value));\n  }\n  public getClient() {\n    return localStorage.getItem('client');\n  }\n  public saveClient(value: any) {\n    localStorage.setItem('client', JSON.stringify(value));\n  }\n  public getData() {\n    return localStorage.getItem('sales');\n  }\n  public removeData() {\n    localStorage.removeItem('sales');\n    localStorage.removeItem('client');\n  }\n  public getDataObservable(): Observable<any> {\n    const data = this.getData();\n    return of(data);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Stock } from 'src/app/models/stocks';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StokcsService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  \r\n  getStocks():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/stocks`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  addStock(stock:Stock):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/stocks`, stock,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateStock(stock:Stock):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/stocks/`+stock.id, stock,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  \r\n\r\n}\r\n"],"names":["LocalStorageService","User","StockReplenishment","constructor","stockReplenishment","today","Date","now","localStorageService","getInstance","userData","getData","userInfo","JSON","parse","id","first_name","last_name","user_id","user","site_id","site","product_id","product","name","quantity_replenished","quantity","replenishment_date","toISOString","substring","displayed_Date","formatDate","date","day","getDate","toString","padStart","monthNames","month","getMonth","year","getFullYear","Stock","stock","threshold","environment","StockReplenishmentsService","httpClient","router","localStorage","BASE_URL","getStockReplenishments","get","getAuthorization","addStockReplenishment","post","updateStockReplenishment","put","_","i0","ÉµÉµinject","i1","HttpClient","i2","Router","i3","_2","factory","Éµfac","providedIn","InvoiceService","getInvoicByStep","step","siteID","validateInvoice","invoice","validateClientInvoice","invoiceID","amount","requestData","invoice_id","of","PdfServiceService","saveData","value","setItem","stringify","getClient","getItem","saveClient","removeData","removeItem","getDataObservable","data","StokcsService","getStocks","addStock","updateStock"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}