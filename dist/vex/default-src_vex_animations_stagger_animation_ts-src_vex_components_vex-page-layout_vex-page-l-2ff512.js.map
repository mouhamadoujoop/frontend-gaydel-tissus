{"version":3,"file":"default-src_vex_animations_stagger_animation_ts-src_vex_components_vex-page-layout_vex-page-l-2ff512.js","mappings":"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","sources":["./src/@vex/animations/stagger.animation.ts","./src/@vex/components/vex-page-layout/vex-page-layout-content.directive.ts","./src/@vex/components/vex-page-layout/vex-page-layout-header.directive.ts","./src/@vex/components/vex-page-layout/vex-page-layout.component.ts","./node_modules/@angular/cdk/fesm2022/table.mjs","./node_modules/@angular/material/fesm2022/button-toggle.mjs","./node_modules/@angular/material/fesm2022/paginator.mjs","./node_modules/@angular/material/fesm2022/select.mjs","./node_modules/@angular/material/fesm2022/sort.mjs","./node_modules/@angular/material/fesm2022/table.mjs"],"sourcesContent":["import {\r\n  animateChild,\r\n  query,\r\n  stagger,\r\n  transition,\r\n  trigger\r\n} from '@angular/animations';\r\n\r\nexport function staggerAnimation(timing: number) {\r\n  return trigger('stagger', [\r\n    transition('* => *', [\r\n      // each time the binding value changes\r\n      query(':enter', stagger(timing, animateChild()), { optional: true })\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const stagger80ms = staggerAnimation(80);\r\nexport const stagger60ms = staggerAnimation(60);\r\nexport const stagger40ms = staggerAnimation(40);\r\nexport const stagger20ms = staggerAnimation(20);\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[vexPageLayoutContent],vex-page-layout-content',\r\n  host: {\r\n    class: 'vex-page-layout-content'\r\n  },\r\n  standalone: true\r\n})\r\nexport class VexPageLayoutContentDirective {\r\n  constructor() {}\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[vexPageLayoutHeader],vex-page-layout-header',\r\n  host: {\r\n    class: 'vex-page-layout-header'\r\n  },\r\n  standalone: true\r\n})\r\nexport class VexPageLayoutHeaderDirective {\r\n  constructor() {}\r\n}\r\n","import {\r\n  Component,\r\n  HostBinding,\r\n  Input,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'vex-page-layout',\r\n  template: '<ng-content></ng-content>',\r\n  host: {\r\n    class: 'vex-page-layout'\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./vex-page-layout.component.scss'],\r\n  standalone: true\r\n})\r\nexport class VexPageLayoutComponent {\r\n  @Input() mode: 'card' | 'simple' = 'simple';\r\n\r\n  constructor() {}\r\n\r\n  @HostBinding('class.vex-page-layout-card')\r\n  get isCard() {\r\n    return this.mode === 'card';\r\n  }\r\n\r\n  @HostBinding('class.vex-page-layout-simple')\r\n  get isSimple() {\r\n    return this.mode === 'simple';\r\n  }\r\n}\r\n","import * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, NgZone, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: ['stickyEnd']\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _CoalescedStyleScheduler }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }]; } });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     */\n    static { this.mostRecentCellOutlet = null; }\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; } });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                this._positionListener?.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                this._positionListener?.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener, \n    /**\n     * @deprecated `_ngZone` parameter to become required.\n     * @breaking-change 14.0.0\n     */\n    _ngZone) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._ngZone = _ngZone;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        [\n            this._rowOutlet.viewContainer,\n            this._headerRowOutlet.viewContainer,\n            this._footerRowOutlet.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach(def => {\n            def.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* _ViewRepeaterOperation.INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        // Allow the new row data to render before measuring it.\n        // @breaking-change 14.0.0 Remove undefined check once _ngZone is required.\n        if (this._ngZone && NgZone.isInAngularZone()) {\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n                this.updateStickyColumnStyles();\n            });\n        }\n        else {\n            this.updateStickyColumnStyles();\n        }\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n        this._changeDetectorRef.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, outputs: { contentChanged: \"contentChanged\" }, host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                        'ngSkipHydration': '',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                    type: Inject,\n                    args: [_COALESCED_STYLE_SCHEDULER]\n                }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [STICKY_POSITIONING_LISTENER]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input\n            }], fixedLayout: [{\n                type: Input\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellDef, selector: \"[cdkCellDef]\" }, { kind: \"directive\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { kind: \"directive\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { kind: \"directive\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }, { kind: \"directive\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () { return [{ type: CdkTable, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TEXT_COLUMN_OPTIONS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTableModule, imports: [ScrollingModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i1 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatButtonToggleGroup),\n    multi: true,\n};\n// Counter used to generate unique IDs.\nlet uniqueIdCounter = 0;\n/** Change event object emitted by button toggle. */\nclass MatButtonToggleChange {\n    constructor(\n    /** The button toggle that emits the event. */\n    source, \n    /** The value assigned to the button toggle. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n    /** `name` attribute for the underlying `input` element. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this._markButtonsForCheck();\n    }\n    /** Whether the toggle group is vertical. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Value of the toggle group. */\n    get value() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map(toggle => toggle.value);\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /** Selected button toggles in the group. */\n    get selected() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : selected[0] || null;\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._markButtonsForCheck();\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markButtonsForCheck();\n    }\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = () => { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this._onTouched = () => { };\n        this._name = `mat-button-toggle-group-${uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the group's value changes. */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent(toggle) {\n        const event = new MatButtonToggleChange(toggle, this.value);\n        this._rawValue = event.value;\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            this.selected.checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then(() => this._updateModelValue(toggle, isUserInput));\n        }\n        else {\n            this._updateModelValue(toggle, isUserInput);\n        }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n        }\n        return toggle.value === this._rawValue;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach(toggle => (toggle.checked = false));\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value) {\n        const correspondingOption = this._buttonToggles.find(toggle => {\n            return toggle.value != null && toggle.value === value;\n        });\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(toggle, isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent(toggle);\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n    /** Marks all of the child button toggles to be checked. */\n    _markButtonsForCheck() {\n        this._buttonToggles?.forEach(toggle => toggle._markForCheck());\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatButtonToggleGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatButtonToggleGroup, selector: \"mat-button-toggle-group\", inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, host: { attributes: { \"role\": \"group\" }, properties: { \"attr.aria-disabled\": \"disabled\", \"class.mat-button-toggle-vertical\": \"vertical\", \"class.mat-button-toggle-group-appearance-standard\": \"appearance === \\\"standard\\\"\" }, classAttribute: \"mat-button-toggle-group\" }, providers: [\n            MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n            { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n        ], queries: [{ propertyName: \"_buttonToggles\", predicate: i0.forwardRef(function () { return MatButtonToggle; }), descendants: true }], exportAs: [\"matButtonToggleGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatButtonToggleGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-button-toggle-group',\n                    providers: [\n                        MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                        { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n                    ],\n                    host: {\n                        'role': 'group',\n                        'class': 'mat-button-toggle-group',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[class.mat-button-toggle-vertical]': 'vertical',\n                        '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"',\n                    },\n                    exportAs: 'matButtonToggleGroup',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { _buttonToggles: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatButtonToggle), {\n                        // Note that this would technically pick up toggles\n                        // from nested groups, but that's not a case that we support.\n                        descendants: true,\n                    }]\n            }], appearance: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], multiple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/** @docs-private */\nconst _MatButtonToggleBase = mixinDisableRipple(class {\n});\n/** Single button inside of a toggle group. */\nclass MatButtonToggle extends _MatButtonToggleBase {\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() {\n        return `${this.id}-button`;\n    }\n    /** The appearance style of the button. */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /** Whether the button is checked. */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /** Event emitted when the group value changes. */\n        this.change = new EventEmitter();\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    ngOnInit() {\n        const group = this.buttonToggleGroup;\n        this.id = this.id || `mat-button-toggle-${uniqueIdCounter++}`;\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /** Focuses the button. */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n        const newChecked = this._isSingleSelector() ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Gets the name that should be assigned to the inner DOM node. */\n    _getButtonName() {\n        if (this._isSingleSelector()) {\n            return this.buttonToggleGroup.name;\n        }\n        return this.name || null;\n    }\n    /** Whether the toggle is in single selection mode. */\n    _isSingleSelector() {\n        return this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatButtonToggle, deps: [{ token: MAT_BUTTON_TOGGLE_GROUP, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: 'tabindex', attribute: true }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatButtonToggle, selector: \"mat-button-toggle\", inputs: { disableRipple: \"disableRipple\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", name: \"name\", value: \"value\", tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\" }, outputs: { change: \"change\" }, host: { attributes: { \"role\": \"presentation\" }, listeners: { \"focus\": \"focus()\" }, properties: { \"class.mat-button-toggle-standalone\": \"!buttonToggleGroup\", \"class.mat-button-toggle-checked\": \"checked\", \"class.mat-button-toggle-disabled\": \"disabled\", \"class.mat-button-toggle-appearance-standard\": \"appearance === \\\"standard\\\"\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.id\": \"id\", \"attr.name\": \"null\" }, classAttribute: \"mat-button-toggle\" }, viewQueries: [{ propertyName: \"_buttonElement\", first: true, predicate: [\"button\"], descendants: true }], exportAs: [\"matButtonToggle\"], usesInheritance: true, ngImport: i0, template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{--mat-legacy-button-toggle-height:36px;--mat-legacy-button-toggle-shape:2px;--mat-legacy-button-toggle-focus-state-layer-opacity:1;position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);border-radius:var(--mat-legacy-button-toggle-shape)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{--mat-standard-button-toggle-shape:4px;--mat-standard-button-toggle-hover-state-layer-opacity:0.04;--mat-standard-button-toggle-focus-state-layer-opacity:0.12;border-radius:var(--mat-standard-button-toggle-shape);border:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-legacy-button-toggle-text-color);font-family:var(--mat-legacy-button-toggle-text-font)}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-legacy-button-toggle-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle-checked{color:var(--mat-legacy-button-toggle-selected-state-text-color);background-color:var(--mat-legacy-button-toggle-selected-state-background-color)}.mat-button-toggle-disabled{color:var(--mat-legacy-button-toggle-disabled-state-text-color);background-color:var(--mat-legacy-button-toggle-disabled-state-background-color)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-legacy-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-appearance-standard{--mat-standard-button-toggle-shape:4px;--mat-standard-button-toggle-hover-state-layer-opacity:0.04;--mat-standard-button-toggle-focus-state-layer-opacity:0.12;color:var(--mat-standard-button-toggle-text-color);background-color:var(--mat-standard-button-toggle-background-color);font-family:var(--mat-standard-button-toggle-text-font)}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-standard-button-toggle-divider-color)}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-selected-state-text-color);background-color:var(--mat-standard-button-toggle-selected-state-background-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-standard-button-toggle-disabled-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-state-background-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-disabled-selected-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-standard-button-toggle-state-layer-color)}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-hover-state-layer-opacity)}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-focus-state-layer-opacity)}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-legacy-button-toggle-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-standard-button-toggle-height)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-legacy-button-toggle-state-layer-color)}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatButtonToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-button-toggle', encapsulation: ViewEncapsulation.None, exportAs: 'matButtonToggle', changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disableRipple'], host: {\n                        '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                        '[class.mat-button-toggle-checked]': 'checked',\n                        '[class.mat-button-toggle-disabled]': 'disabled',\n                        '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                        'class': 'mat-button-toggle',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.id]': 'id',\n                        '[attr.name]': 'null',\n                        '(focus)': 'focus()',\n                        'role': 'presentation',\n                    }, template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{--mat-legacy-button-toggle-height:36px;--mat-legacy-button-toggle-shape:2px;--mat-legacy-button-toggle-focus-state-layer-opacity:1;position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);border-radius:var(--mat-legacy-button-toggle-shape)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{--mat-standard-button-toggle-shape:4px;--mat-standard-button-toggle-hover-state-layer-opacity:0.04;--mat-standard-button-toggle-focus-state-layer-opacity:0.12;border-radius:var(--mat-standard-button-toggle-shape);border:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-legacy-button-toggle-text-color);font-family:var(--mat-legacy-button-toggle-text-font)}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-legacy-button-toggle-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle-checked{color:var(--mat-legacy-button-toggle-selected-state-text-color);background-color:var(--mat-legacy-button-toggle-selected-state-background-color)}.mat-button-toggle-disabled{color:var(--mat-legacy-button-toggle-disabled-state-text-color);background-color:var(--mat-legacy-button-toggle-disabled-state-background-color)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-legacy-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-appearance-standard{--mat-standard-button-toggle-shape:4px;--mat-standard-button-toggle-hover-state-layer-opacity:0.04;--mat-standard-button-toggle-focus-state-layer-opacity:0.12;color:var(--mat-standard-button-toggle-text-color);background-color:var(--mat-standard-button-toggle-background-color);font-family:var(--mat-standard-button-toggle-text-font)}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-standard-button-toggle-divider-color)}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-selected-state-text-color);background-color:var(--mat-standard-button-toggle-selected-state-background-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-standard-button-toggle-disabled-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-state-background-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-disabled-selected-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-standard-button-toggle-state-layer-color)}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-hover-state-layer-opacity)}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-focus-state-layer-opacity)}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-legacy-button-toggle-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-standard-button-toggle-height)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-legacy-button-toggle-state-layer-color)}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\"] }]\n        }], ctorParameters: function () { return [{ type: MatButtonToggleGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_GROUP]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], _buttonElement: [{\n                type: ViewChild,\n                args: ['button']\n            }], id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n\nclass MatButtonToggleModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatButtonToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatButtonToggleModule, declarations: [MatButtonToggleGroup, MatButtonToggle], imports: [MatCommonModule, MatRippleModule], exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatButtonToggleModule, imports: [MatCommonModule, MatRippleModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatButtonToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule],\n                    exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                    declarations: [MatButtonToggleGroup, MatButtonToggle],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i5 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i7 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i6 from '@angular/material/core';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i4 from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() {\n        return this._hidePageSize;\n    }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() {\n        return this._showFirstLastButtons;\n    }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Used to configure the underlying `MatSelect` inside the paginator. */\n        this.selectConfig = {};\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatPaginatorBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _MatPaginatorBase, inputs: { color: \"color\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", selectConfig: \"selectConfig\" }, outputs: { page: \"page\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatPaginatorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined }]; }, propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input\n            }], showFirstLastButtons: [{\n                type: Input\n            }], selectConfig: [{\n                type: Input\n            }], page: [{\n                type: Output\n            }] } });\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        /** ID for the DOM node containing the paginator's items per page label. */\n        this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n        this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatPaginator, selector: \"mat-paginator\", inputs: { disabled: \"disabled\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-paginator\" }, exportAs: [\"matPaginator\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    <div class=\\\"mat-mdc-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-mdc-paginator-page-size-label\\\" id=\\\"{{_pageSizeLabelId}}\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-mdc-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n          [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n          [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n          hideSingleSelectionIndicator>\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-mdc-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatIconButton, selector: \"button[mat-icon-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"component\", type: i4.MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: i5.MatSelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\", \"panelWidth\", \"hideSingleSelectionIndicator\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: i6.MatOption, selector: \"mat-option\", exportAs: [\"matOption\"] }, { kind: \"directive\", type: i7.MatTooltip, selector: \"[matTooltip]\", exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', inputs: ['disabled'], host: {\n                        'class': 'mat-mdc-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    <div class=\\\"mat-mdc-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-mdc-paginator-page-size-label\\\" id=\\\"{{_pageSizeLabelId}}\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-mdc-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n          [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n          [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n          hideSingleSelectionIndicator>\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-mdc-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"] }]\n        }], ctorParameters: function () { return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                }] }]; } });\n\nclass MatPaginatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorModule, declarations: [MatPaginator], imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule], exports: [MatPaginator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n","import * as i8 from '@angular/cdk/overlay';\nimport { Overlay, CdkConnectedOverlay, CdkOverlayOrigin, OverlayModule } from '@angular/cdk/overlay';\nimport * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Directive, Optional, Inject, Self, Attribute, Input, ViewChild, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /** This animation transforms the select's overlay panel on and off the page. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)',\n        })),\n        transition('void => showing', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)',\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\nlet nextUniqueId = 0;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /**\n     * Form control bound to the component.\n     * Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n        /**\n         * Emits whenever the component state changes and should cause the parent\n         * form-field to update. Implemented as part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n    }\n}))));\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() {\n        return this._disableOptionCentering;\n    }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        const hasAssigned = this._assignValue(newValue);\n        if (hasAssigned) {\n            this._onChange(newValue);\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() {\n        return this._typeaheadDebounceInterval;\n    }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `aria-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._multiple = false;\n        this._disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable.pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n         * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n         * panel. Track the modal we have changed so we can undo the changes on destroy.\n         */\n        this._trackedModal = null;\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if (_defaultOptions?.typeaheadDebounceInterval != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        const ngControl = this.ngControl;\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (ngControl) {\n            // The disabled state might go out of sync if the form group is swapped out. See #17860.\n            if (this._previousControl !== ngControl.control) {\n                if (this._previousControl !== undefined &&\n                    ngControl.disabled !== null &&\n                    ngControl.disabled !== this.disabled) {\n                    this.disabled = ngControl.disabled;\n                }\n                this._previousControl = ngControl.control;\n            }\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled'] || changes['userAriaDescribedBy']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n        this._clearFromModal();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._applyModalPanelOwnership();\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * If the autocomplete trigger is inside of an `aria-modal` element, connect\n     * that modal to the options panel with `aria-owns`.\n     *\n     * For some browser + screen reader combinations, when navigation is inside\n     * of an `aria-modal` element, the screen reader treats everything outside\n     * of that modal as hidden or invisible.\n     *\n     * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n     * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n     * from reaching the panel.\n     *\n     * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n     * the options panel. This effectively communicates to assistive technology that the\n     * options panel is part of the same interaction as the modal.\n     *\n     * At time of this writing, this issue is present in VoiceOver.\n     * See https://github.com/angular/components/issues/20694\n     */\n    _applyModalPanelOwnership() {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `LiveAnnouncer` and any other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        if (!modal) {\n            // Most commonly, the autocomplete trigger is not inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        if (this._trackedModal) {\n            removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        }\n        addAriaReferencedId(modal, 'aria-owns', panelId);\n        this._trackedModal = modal;\n    }\n    /** Clears the reference to the listbox overlay element from the modal it was added to. */\n    _clearFromModal() {\n        if (!this._trackedModal) {\n            // Most commonly, the autocomplete trigger is not used inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        this._trackedModal = null;\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        this._keyManager?.cancelTypeahead();\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this.options.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectOptionByValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectOptionByValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n            return true;\n        }\n        return false;\n    }\n    _skipPredicate(item) {\n        return item.disabled;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withPageUpDown()\n            .withAllowedModifierKeys(['shiftKey'])\n            .skipPredicate(this._skipPredicate);\n        this._keyManager.tabOut.subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n            // be the result of an expression changing. We have to use `detectChanges` in order\n            // to avoid \"changed after checked\" errors (see #14793).\n            this._changeDetectorRef.detectChanges();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first *enabled* option.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n                // because it activates the first option that passes the skip predicate, rather than the\n                // first *enabled* option.\n                let firstEnabledOptionIndex = -1;\n                for (let index = 0; index < this.options.length; index++) {\n                    const option = this.options.get(index);\n                    if (!option.disabled) {\n                        firstEnabledOptionIndex = index;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(firstEnabledOptionIndex);\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        return !this._panelOpen && !this.disabled && this.options?.length > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatSelectBase, deps: [{ token: i1.ViewportRuler }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.ErrorStateMatcher }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.NgForm, optional: true }, { token: i4.FormGroupDirective, optional: true }, { token: MAT_FORM_FIELD, optional: true }, { token: i4.NgControl, optional: true, self: true }, { token: 'tabindex', attribute: true }, { token: MAT_SELECT_SCROLL_STRATEGY }, { token: i5.LiveAnnouncer }, { token: MAT_SELECT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _MatSelectBase, inputs: { userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], panelClass: \"panelClass\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", sortComparator: \"sortComparator\", id: \"id\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatSelectBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1.ViewportRuler }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.ErrorStateMatcher }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i4.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i4.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i6.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }, { type: i4.NgControl, decorators: [{\n                    type: Self\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SELECT_SCROLL_STRATEGY]\n                }] }, { type: i5.LiveAnnouncer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SELECT_CONFIG]\n                }] }]; }, propDecorators: { userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], disableOptionCentering: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSelectTrigger, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                }]\n        }] });\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Width of the panel. If set to `auto`, the panel will match the trigger width.\n         * If set to null or an empty string, the panel will grow to match the longest option's text.\n         */\n        this.panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined'\n            ? this._defaultOptions.panelWidth\n            : 'auto';\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom',\n                panelClass: 'mat-mdc-select-panel-above',\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom',\n                panelClass: 'mat-mdc-select-panel-above',\n            },\n        ];\n        this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n        // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n        // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n        // recommendation.\n        //\n        // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n        // makes a few exceptions for compound widgets.\n        //\n        // From [Developing a Keyboard Interface](\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n        //   Listbox...\"\n        //\n        // The user can focus disabled options using the keyboard, but the user cannot click disabled\n        // options.\n        this._skipPredicate = (option) => {\n            if (this.panelOpen) {\n                // Support keyboard focusing disabled options in an ARIA listbox.\n                return false;\n            }\n            // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n            // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n            // closed.\n            return option.disabled;\n        };\n    }\n    get shouldLabelFloat() {\n        // Since the panel doesn't overlap the trigger, we\n        // want the label to only float when there's a value.\n        return this.panelOpen || !this.empty || (this.focused && !!this.placeholder);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n                this._changeDetectorRef.detectChanges();\n            }\n        });\n    }\n    open() {\n        // It's important that we read this as late as possible, because doing so earlier will\n        // return a different element since it's based on queries in the form field which may\n        // not have run yet. Also this needs to be assigned before we measure the overlay width.\n        if (this._parentFormField) {\n            this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n        }\n        this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n        super.open();\n        // Required for the MDC form field to pick up when the overlay has been opened.\n        this.stateChanges.next();\n    }\n    close() {\n        super.close();\n        // Required for the MDC form field to pick up when the overlay has been closed.\n        this.stateChanges.next();\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const option = this.options.toArray()[index];\n        if (option) {\n            const panel = this.panel.nativeElement;\n            const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n            const element = option._getHostElement();\n            if (index === 0 && labelCount === 1) {\n                // If we've got one group label before the option and we're at the top option,\n                // scroll the list to the top. This is better UX than scrolling the list to the\n                // top of the option, because it allows the user to read the top group's label.\n                panel.scrollTop = 0;\n            }\n            else {\n                panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n            }\n        }\n    }\n    _positioningSettled() {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /** Gets how wide the overlay panel should be. */\n    _getOverlayWidth(preferredOrigin) {\n        if (this.panelWidth === 'auto') {\n            const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin\n                ? preferredOrigin.elementRef\n                : preferredOrigin || this._elementRef;\n            return refToMeasure.nativeElement.getBoundingClientRect().width;\n        }\n        return this.panelWidth === null ? '' : this.panelWidth;\n    }\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = coerceBooleanProperty(value);\n        this._syncParentProperties();\n    }\n    /** Syncs the parent state with the individual options. */\n    _syncParentProperties() {\n        if (this.options) {\n            for (const option of this.options) {\n                option._changeDetectorRef.markForCheck();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelect, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSelect, selector: \"mat-select\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", panelWidth: \"panelWidth\", hideSingleSelectionIndicator: \"hideSingleSelectionIndicator\" }, host: { attributes: { \"role\": \"combobox\", \"aria-autocomplete\": \"none\", \"aria-haspopup\": \"listbox\", \"ngSkipHydration\": \"\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-mdc-select-disabled\": \"disabled\", \"class.mat-mdc-select-invalid\": \"errorState\", \"class.mat-mdc-select-required\": \"required\", \"class.mat-mdc-select-empty\": \"empty\", \"class.mat-mdc-select-multiple\": \"multiple\" }, classAttribute: \"mat-mdc-select\" }, providers: [\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n        ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], exportAs: [\"matSelect\"], usesInheritance: true, ngImport: i0, template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-mdc-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-mdc-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-mdc-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    [@transformPanel]=\\\"'showing'\\\"\\n    (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color);font-family:var(--mat-select-trigger-text-font);line-height:var(--mat-select-trigger-text-line-height);font-size:var(--mat-select-trigger-text-size);font-weight:var(--mat-select-trigger-text-weight);letter-spacing:var(--mat-select-trigger-text-tracking)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color)}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow{color:var(--mat-select-invalid-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color)}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\"], dependencies: [{ kind: \"directive\", type: i7.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i7.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i7.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i7.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"directive\", type: i8.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i8.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }], animations: [matSelectAnimations.transformPanel], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', inputs: ['disabled', 'disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-autocomplete': 'none',\n                        'aria-haspopup': 'listbox',\n                        'class': 'mat-mdc-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        'ngSkipHydration': '',\n                        '[class.mat-mdc-select-disabled]': 'disabled',\n                        '[class.mat-mdc-select-invalid]': 'errorState',\n                        '[class.mat-mdc-select-required]': 'required',\n                        '[class.mat-mdc-select-empty]': 'empty',\n                        '[class.mat-mdc-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, animations: [matSelectAnimations.transformPanel], providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-mdc-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-mdc-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-mdc-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    [@transformPanel]=\\\"'showing'\\\"\\n    (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color);font-family:var(--mat-select-trigger-text-font);line-height:var(--mat-select-trigger-text-line-height);font-size:var(--mat-select-trigger-text-size);font-weight:var(--mat-select-trigger-text-weight);letter-spacing:var(--mat-select-trigger-text-tracking)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color)}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow{color:var(--mat-select-invalid-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color)}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\"] }]\n        }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }], panelWidth: [{\n                type: Input\n            }], hideSingleSelectionIndicator: [{\n                type: Input\n            }] } });\n\nclass MatSelectModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectModule, declarations: [MatSelect, MatSelectTrigger], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule], exports: [CdkScrollableModule,\n            MatFormFieldModule,\n            MatSelect,\n            MatSelectTrigger,\n            MatOptionModule,\n            MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule,\n            MatFormFieldModule,\n            MatOptionModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatSelect, MatSelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nconst _MatSortBase = mixinInitialized(mixinDisabled(class {\n}));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortBase {\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overridden by the MatSortable's disable clear input.\n     */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overridden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSort, selector: \"[matSort]\", inputs: { disabled: [\"matSortDisabled\", \"disabled\"], active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: {\n                        'class': 'mat-sort',\n                    },\n                    inputs: ['disabled: matSortDisabled'],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: ['matSortDisableClear']\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nconst _MatSortHeaderBase = mixinDisabled(class {\n});\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderBase {\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber, defaultOptions) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        if (defaultOptions?.arrowPosition) {\n            this.arrowPosition = defaultOptions?.arrowPosition;\n        }\n        this._handleStateChanges();\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n            this._ariaDescriber?.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }, { token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSortHeader, selector: \"[mat-sort-header]\", inputs: { disabled: \"disabled\", id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", sortActionDescription: \"sortActionDescription\", disableClear: \"disableClear\" }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"], dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"] }]\n        }], ctorParameters: function () { return [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                }, {\n                    type: Optional\n                }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input\n            }] } });\n\nclass MatSortModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortModule, declarations: [MatSort, MatSortHeader], imports: [CommonModule, MatCommonModule], exports: [MatSort, MatSortHeader] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatSort, MatSortHeader],\n                    declarations: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy, DataSource } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { map } from 'rxjs/operators';\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-mdc-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // After ngOnInit, the `CdkTable` has created and inserted the table sections (thead, tbody,\n        // tfoot). MDC requires the `mdc-data-table__content` class to be added to the body. Note that\n        // this only applies to native tables, because we don't wrap the content of flexbox-based ones.\n        if (this._isNativeHtmlTable) {\n            const tbody = this._elementRef.nativeElement.querySelector('tbody');\n            tbody.classList.add('mdc-data-table__content');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatTable, selector: \"mat-table, table[mat-table]\", host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"class.mdc-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-mdc-table mdc-data-table__table\" }, providers: [\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n            //  is only included in the build if used.\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: `\n    <ng-content select=\"caption\"></ng-content>\n    <ng-content select=\"colgroup, col\"></ng-content>\n    <ng-container headerRowOutlet></ng-container>\n    <ng-container rowOutlet></ng-container>\n    <ng-container noDataRowOutlet></ng-container>\n    <ng-container footerRowOutlet></ng-container>\n  `, isInline: true, styles: [\".mat-mdc-table-sticky{position:sticky !important}.mdc-data-table{-webkit-overflow-scrolling:touch;display:inline-flex;flex-direction:column;box-sizing:border-box;position:relative}.mdc-data-table__table-container{-webkit-overflow-scrolling:touch;overflow-x:auto;width:100%}.mdc-data-table__table{min-width:100%;border:0;white-space:nowrap;border-spacing:0;table-layout:fixed}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell,.mdc-data-table__cell[dir=rtl]{text-align:right}.mdc-data-table__cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__cell--numeric,.mdc-data-table__cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mdc-data-table__header-cell,.mdc-data-table__header-cell[dir=rtl]{text-align:right}.mdc-data-table__header-cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__header-cell--numeric,.mdc-data-table__header-cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell-wrapper{align-items:center;display:inline-flex;vertical-align:middle}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px 0 16px}.mdc-data-table__header-cell--checkbox,.mdc-data-table__cell--checkbox{padding-left:4px;padding-right:0}[dir=rtl] .mdc-data-table__header-cell--checkbox,[dir=rtl] .mdc-data-table__cell--checkbox,.mdc-data-table__header-cell--checkbox[dir=rtl],.mdc-data-table__cell--checkbox[dir=rtl]{padding-left:0;padding-right:4px}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{--mat-table-row-item-outline-width:1px;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color)}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-header-headline-font, Roboto, sans-serif);line-height:var(--mat-table-header-headline-line-height);font-size:var(--mat-table-header-headline-size, 14px);font-weight:var(--mat-table-header-headline-weight, 500)}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, Roboto, sans-serif);line-height:var(--mat-table-row-item-label-text-line-height);font-size:var(--mat-table-row-item-label-text-size, 14px);font-weight:var(--mat-table-row-item-label-text-weight)}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-footer-supporting-text-font, Roboto, sans-serif);line-height:var(--mat-table-footer-supporting-text-line-height);font-size:var(--mat-table-footer-supporting-text-size, 14px);font-weight:var(--mat-table-footer-supporting-text-weight);letter-spacing:var(--mat-table-footer-supporting-text-tracking)}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking);font-weight:inherit;line-height:inherit}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking);line-height:inherit}.mdc-data-table__row:last-child .mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking)}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\"], dependencies: [{ kind: \"directive\", type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: `\n    <ng-content select=\"caption\"></ng-content>\n    <ng-content select=\"colgroup, col\"></ng-content>\n    <ng-container headerRowOutlet></ng-container>\n    <ng-container rowOutlet></ng-container>\n    <ng-container noDataRowOutlet></ng-container>\n    <ng-container footerRowOutlet></ng-container>\n  `, host: {\n                        'class': 'mat-mdc-table mdc-data-table__table',\n                        '[class.mdc-table-fixed-layout]': 'fixedLayout',\n                        'ngSkipHydration': '',\n                    }, providers: [\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\".mat-mdc-table-sticky{position:sticky !important}.mdc-data-table{-webkit-overflow-scrolling:touch;display:inline-flex;flex-direction:column;box-sizing:border-box;position:relative}.mdc-data-table__table-container{-webkit-overflow-scrolling:touch;overflow-x:auto;width:100%}.mdc-data-table__table{min-width:100%;border:0;white-space:nowrap;border-spacing:0;table-layout:fixed}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell,.mdc-data-table__cell[dir=rtl]{text-align:right}.mdc-data-table__cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__cell--numeric,.mdc-data-table__cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mdc-data-table__header-cell,.mdc-data-table__header-cell[dir=rtl]{text-align:right}.mdc-data-table__header-cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__header-cell--numeric,.mdc-data-table__header-cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell-wrapper{align-items:center;display:inline-flex;vertical-align:middle}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px 0 16px}.mdc-data-table__header-cell--checkbox,.mdc-data-table__cell--checkbox{padding-left:4px;padding-right:0}[dir=rtl] .mdc-data-table__header-cell--checkbox,[dir=rtl] .mdc-data-table__cell--checkbox,.mdc-data-table__header-cell--checkbox[dir=rtl],.mdc-data-table__cell--checkbox[dir=rtl]{padding-left:0;padding-right:4px}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{--mat-table-row-item-outline-width:1px;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color)}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-header-headline-font, Roboto, sans-serif);line-height:var(--mat-table-header-headline-line-height);font-size:var(--mat-table-header-headline-size, 14px);font-weight:var(--mat-table-header-headline-weight, 500)}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, Roboto, sans-serif);line-height:var(--mat-table-row-item-label-text-line-height);font-size:var(--mat-table-row-item-label-text-size, 14px);font-weight:var(--mat-table-row-item-label-text-weight)}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-footer-supporting-text-font, Roboto, sans-serif);line-height:var(--mat-table-footer-supporting-text-line-height);font-size:var(--mat-table-footer-supporting-text-size, 14px);font-weight:var(--mat-table-footer-supporting-text-weight);letter-spacing:var(--mat-table-footer-supporting-text-tracking)}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking);font-weight:inherit;line-height:inherit}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking);line-height:inherit}.mdc-data-table__row:last-child .mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking)}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\"] }]\n        }] });\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n        ], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-mdc-header-cell mdc-data-table__header-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-mdc-header-cell mdc-data-table__header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { classAttribute: \"mat-mdc-footer-cell mdc-data-table__cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-mdc-footer-cell mdc-data-table__cell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCell, selector: \"mat-cell, td[mat-cell]\", host: { classAttribute: \"mat-mdc-cell mdc-data-table__cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-mdc-cell mdc-data-table__cell',\n                    },\n                }]\n        }] });\n\n// We can't reuse `CDK_ROW_TEMPLATE` because it's incompatible with local compilation mode.\nconst ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-header-row mdc-data-table__header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-header-row mdc-data-table__header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-footer-row mdc-data-table__row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-footer-row mdc-data-table__row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-row mdc-data-table__row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-row mdc-data-table__row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-mdc-no-data-row';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { kind: \"directive\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { kind: \"directive\", type: MatCellDef, selector: \"[matCellDef]\" }, { kind: \"directive\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { kind: \"directive\", type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTableModule, declarations: [\n            // Table\n            MatTable,\n            MatRecycleRows,\n            // Template defs\n            MatHeaderCellDef,\n            MatHeaderRowDef,\n            MatColumnDef,\n            MatCellDef,\n            MatRowDef,\n            MatFooterCellDef,\n            MatFooterRowDef,\n            // Cell directives\n            MatHeaderCell,\n            MatCell,\n            MatFooterCell,\n            // Row directives\n            MatHeaderRow,\n            MatRow,\n            MatFooterRow,\n            MatNoDataRow,\n            MatTextColumn], imports: [MatCommonModule, CdkTableModule], exports: [MatCommonModule, \n            // Table\n            MatTable,\n            MatRecycleRows,\n            // Template defs\n            MatHeaderCellDef,\n            MatHeaderRowDef,\n            MatColumnDef,\n            MatCellDef,\n            MatRowDef,\n            MatFooterCellDef,\n            MatFooterRowDef,\n            // Cell directives\n            MatHeaderCell,\n            MatCell,\n            MatFooterCell,\n            // Row directives\n            MatHeaderRow,\n            MatRow,\n            MatFooterRow,\n            MatNoDataRow,\n            MatTextColumn] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTableModule, imports: [MatCommonModule, CdkTableModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CdkTableModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        data = Array.isArray(data) ? data : [];\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the paginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the paginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if sort and/or paginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterPredicate function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterPredicate.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided paginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterPredicate,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n"],"names":["animateChild","query","stagger","transition","trigger","staggerAnimation","timing","optional","stagger80ms","stagger60ms","stagger40ms","stagger20ms","VexPageLayoutContentDirective","constructor","_","_2","selectors","hostAttrs","standalone","VexPageLayoutHeaderDirective","VexPageLayoutComponent","mode","isCard","isSimple","hostVars","hostBindings","VexPageLayoutComponent_HostBindings","rf","ctx","i0","ɵɵprojection","i1","coerceBooleanProperty","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","isDataSource","_DisposeViewRepeaterStrategy","DataSource","i2","i3","ScrollingModule","DOCUMENT","InjectionToken","Directive","Inject","Optional","Input","ContentChild","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","EventEmitter","NgZone","Attribute","SkipSelf","Output","ViewChild","ContentChildren","NgModule","Subject","from","BehaviorSubject","isObservable","of","takeUntil","take","_c0","_c1","CdkTextColumn_th_1_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵstyleProp","justify","ɵɵadvance","ɵɵtextInterpolate1","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","mixinHasStickyInput","base","sticky","_sticky","v","prevValue","_hasStickyChanged","hasStickyChanged","resetStickyChanged","args","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵɵdirectiveInject","TemplateRef","ɵdir","ɵɵdefineDirective","type","ngDevMode","ɵsetClassMetadata","selector","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_name","_setNameInput","stickyEnd","_stickyEnd","_table","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","value","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","cell","first","headerCell","footerCell","inputs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","providers","undefined","decorators","BaseCdkCell","columnDef","elementRef","nativeElement","classList","add","CdkHeaderCell","CdkHeaderCell_Factory","ElementRef","host","CdkFooterCell","_elementRef","nodeType","tableRole","getAttribute","role","setAttribute","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","ngOnDestroy","next","complete","_getScheduleObservable","pipe","subscribe","length","isStable","Promise","resolve","onStable","_CoalescedStyleScheduler_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","IterableDiffers","ɵɵNgOnChangesFeature","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","mostRecentCellOutlet","_viewContainer","CdkCellOutlet_Factory","ViewContainerRef","_3","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","ɵɵdefineComponent","decls","vars","consts","CdkHeaderRow_Template","ɵɵelementContainer","dependencies","encapsulation","changeDetection","Default","None","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","templateRef","_contentClassName","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","ELEMENT_NODE","i","children","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","CdkRecycleRows_Factory","useClass","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","trackBy","_trackByFn","fn","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","_fixedLayout","_forceRecalculateCellWidths","_stickyColumnStylesNeedReset","_changeDetectorRef","_dir","_document","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","contentChanged","viewChange","Number","MAX_VALUE","nodeName","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","forEach","def","clear","_defaultRowDef","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","get","isInAngularZone","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","renderIndex","count","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","_noDataRowOutlet","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","rootNode","CdkTable_Factory","ChangeDetectorRef","ɵɵinjectAttribute","Directionality","Platform","ViewportRuler","CdkTable_ContentQueries","viewQuery","CdkTable_Query","ɵɵviewQuery","CdkTable_HostBindings","ɵɵclassProp","outputs","exportAs","useValue","ngContentSelectors","CdkTable_Template","ɵɵprojectionDef","styles","static","descendants","array","concat","CdkTextColumn","_syncColumnDefName","_options","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","SelectionModel","forwardRef","NG_VALUE_ACCESSOR","mixinDisableRipple","MatCommonModule","MatRippleModule","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","MAT_BUTTON_TOGGLE_GROUP","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","MatButtonToggleGroup","multi","uniqueIdCounter","MatButtonToggleChange","source","_markButtonsForCheck","vertical","_vertical","selected","_selectionModel","multiple","toggle","newValue","_setSelectionByValue","valueChange","emit","_multiple","disabled","_disabled","_changeDetector","defaultOptions","_controlValueAccessorChangeFn","_onTouched","appearance","ngAfterContentInit","select","_buttonToggles","checked","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","_emitChangeEvent","event","_rawValue","_syncButtonToggle","isUserInput","deferEvents","deselect","then","_updateModelValue","_isSelected","isSelected","_isPrechecked","_clearSelection","_selectValue","correspondingOption","_markForCheck","MatButtonToggleGroup_Factory","MatButtonToggleGroup_ContentQueries","MatButtonToggle","MatButtonToggleGroup_HostBindings","ɵɵattribute","_MatButtonToggleBase","buttonId","buttonToggleGroup","_appearance","_checked","toggleGroup","_focusMonitor","defaultTabIndex","ariaLabelledby","parsedTabIndex","tabIndex","group","ngAfterViewInit","monitor","stopMonitoring","focus","options","_buttonElement","_onButtonClick","newChecked","_isSingleSelector","_getButtonName","MatButtonToggle_Factory","FocusMonitor","MatButtonToggle_Query","MatButtonToggle_HostBindings","ɵɵlistener","MatButtonToggle_focus_HostBindingHandler","disableRipple","ariaLabel","MatButtonToggle_Template","MatButtonToggle_Template_button_click_0_listener","ɵɵelement","_r0","ɵɵreference","ɵɵproperty","MatRipple","OnPush","MatButtonToggleModule","MatButtonToggleModule_Factory","CommonModule","MatButtonModule","i5","MatSelectModule","i7","MatTooltipModule","i6","mixinDisabled","mixinInitialized","coerceNumberProperty","i4","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r6","MatPaginator_div_2_mat_form_field_3_Template","_r8","ɵɵgetCurrentView","MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","$event","ɵɵrestoreView","ctx_r7","ɵɵresetView","_changePageSize","ctx_r3","_formFieldAppearance","color","pageSize","_pageSizeLabelId","selectConfig","panelClass","disableOptionCentering","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r4","ɵɵtextInterpolate","MatPaginator_div_2_Template","ɵɵpropertyInterpolate","_intl","itemsPerPageLabel","MatPaginator_button_6_Template","_r10","MatPaginator_button_6_Template_button_click_0_listener","ctx_r9","firstPage","ɵɵnamespaceSVG","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r12","ɵɵnamespaceHTML","MatPaginator_button_13_Template_button_click_0_listener","ctx_r11","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","nextPageLabel","previousPageLabel","getRangeLabel","page","Math","max","startIndex","endIndex","min","MatPaginatorIntl_Factory","providedIn","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","_MatPaginatorBase","pageIndex","_pageIndex","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","p","hidePageSize","_hidePageSize","showFirstLastButtons","_showFirstLastButtons","defaults","_intlChanges","_initialized","_markInitialized","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","sort","a","b","_MatPaginatorBase_Factory","ɵɵinvalidFactory","nextUniqueId","MatPaginator","intl","changeDetectorRef","formFieldAppearance","MatPaginator_Factory","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","MatPaginator_Template_button_click_10_listener","NgForOf","NgIf","MatIconButton","MatFormField","MatSelect","MatOption","MatTooltip","MatPaginatorModule","MatPaginatorModule_Factory","i8","Overlay","CdkConnectedOverlay","CdkOverlayOrigin","OverlayModule","Self","mixinTabIndex","mixinErrorState","_countGroupLabelsBeforeOption","_getOptionScrollPosition","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","MatOptionModule","MAT_FORM_FIELD","MatFormFieldControl","MatFormFieldModule","CdkScrollableModule","removeAriaReferencedId","addAriaReferencedId","ActiveDescendantKeyManager","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","hasModifierKey","A","Validators","defer","merge","startWith","switchMap","distinctUntilChanged","animate","MatSelect_span_4_Template","placeholder","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_ng_content_2_Template","MatSelect_span_5_Template","customTrigger","MatSelect_ng_template_10_Template","_r9","MatSelect_ng_template_10_Template_div_animation_transformPanel_done_0_listener","ctx_r8","_panelDoneAnimatingStream","toState","MatSelect_ng_template_10_Template_div_keydown_0_listener","ctx_r10","_handleKeydown","ɵɵclassMapInterpolate1","_getPanelTheme","_getPanelAriaLabelledby","_c2","_c3","matSelectAnimations","transformPanelWrap","transformPanel","opacity","transform","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MAT_SELECT_TRIGGER","MatSelectChange","_MatSelectMixinBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","stateChanges","_MatSelectBase","focused","_focused","_panelOpen","_placeholder","required","_required","control","hasValidator","_disableOptionCentering","compareWith","_compareWith","_initializeSelection","_value","hasAssigned","_assignValue","_onChange","typeaheadDebounceInterval","_typeaheadDebounceInterval","_id","_uid","_parentFormField","scrollStrategyFactory","_liveAnnouncer","_defaultOptions","o1","o2","_triggerAriaLabelledBy","_destroy","_valueId","_overlayPanelClass","overlayPanelClass","controlType","optionSelectionChanges","option","onSelectionChange","openedChange","_openedStream","o","_closedStream","selectionChange","_trackedModal","valueAccessor","_scrollStrategyFactory","_scrollStrategy","parseInt","_panelDoneAnimating","panelOpen","_initKeyManager","changed","added","removed","_resetOptions","ngDoCheck","newAriaLabelledby","_getTriggerAriaLabelledby","removeAttribute","_previousControl","updateErrorState","_keyManager","withTypeAhead","destroy","_clearFromModal","close","open","_canOpen","_applyModalPanelOwnership","withHorizontalOrientation","_highlightCorrectOption","modal","closest","panelId","_isRtl","empty","selectedOptions","viewValue","join","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","isOpenKey","manager","isTyping","altKey","preventDefault","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_onFocus","_onBlur","cancelTypeahead","_onAttached","_overlayDir","positionChange","detectChanges","_positioningSettled","isEmpty","setInactiveStyles","_selectOptionByValue","_sortValues","updateActiveItem","error","_skipPredicate","withVerticalOrientation","withHomeAndEnd","withPageUpDown","withAllowedModifierKeys","skipPredicate","tabOut","panel","_scrollOptionIntoView","changedOrDestroyed","_onSelect","_stateChanges","wasSelected","_propagateChanges","setActiveItem","toArray","sortComparator","fallbackValue","valueToEmit","_getChangeEvent","firstEnabledOptionIndex","labelId","getLabelId","labelExpression","_getAriaActiveDescendant","isOpen","setDescribedByIds","ids","onContainerClick","shouldLabelFloat","_MatSelectBase_Factory","ErrorStateMatcher","NgForm","FormGroupDirective","NgControl","LiveAnnouncer","_MatSelectBase_Query","userAriaDescribedBy","errorStateMatcher","MatSelectTrigger","MatSelectTrigger_Factory","arguments","panelWidth","_positions","originX","originY","overlayX","overlayY","_hideSingleSelectionIndicator","hideSingleSelectionIndicator","_overlayWidth","_getOverlayWidth","_preferredOverlayOrigin","getConnectedOverlayOrigin","labelCount","optionGroups","_getHostElement","scrollTop","offsetTop","offsetHeight","preferredOrigin","refToMeasure","_syncParentProperties","ɵMatSelect_BaseFactory","MatSelect_Factory","ɵɵgetInheritedFactory","MatSelect_ContentQueries","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","toString","errorState","MatSelect_Template","MatSelect_Template_div_click_0_listener","MatSelect_Template_ng_template_backdropClick_10_listener","MatSelect_Template_ng_template_attach_10_listener","MatSelect_Template_ng_template_detach_10_listener","NgClass","NgSwitch","NgSwitchCase","NgSwitchDefault","animation","animations","MatSelectModule_Factory","AnimationDurations","AnimationCurves","keyframes","MatSortHeader_div_3_Template","_r2","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","_getArrowViewState","_getArrowDirectionState","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MAT_SORT_DEFAULT_OPTIONS","_MatSortBase","MatSort","_direction","disableClear","_disableClear","sortables","sortChange","register","sortable","deregister","active","getNextSortDirection","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","MatSort_Factory","sortOrder","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","MatSortHeaderIntl","MatSortHeaderIntl_Factory","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","_MatSortHeaderBase","MatSortHeader","sortActionDescription","_sortActionDescription","_updateSortActionDescription","_sort","_columnDef","_ariaDescriber","_showIndicatorHint","_viewState","_arrowDirection","_handleStateChanges","_updateArrowDirection","_setAnimationTransitionState","_isSorted","_sortButton","origin","newState","_setIndicatorHintVisible","_rerenderSubscription","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_getAriaSortAttribute","_renderArrow","newDescription","removeDescription","describe","MatSortHeader_Factory","AriaDescriber","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_keydown_HostBindingHandler","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","attrs","MatSortHeader_Template","MatSortModule","MatSortModule_Factory","combineLatest","_isNumberValue","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatRecycleRows","MatRecycleRows_Factory","MatTable","tbody","ɵMatTable_BaseFactory","MatTable_Factory","MatTable_HostBindings","MatTable_Template","MatCellDef","ɵMatCellDef_BaseFactory","MatCellDef_Factory","MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatHeaderCellDef_Factory","MatFooterCellDef","ɵMatFooterCellDef_BaseFactory","MatFooterCellDef_Factory","MatColumnDef","ɵMatColumnDef_BaseFactory","MatColumnDef_Factory","MatHeaderCell","ɵMatHeaderCell_BaseFactory","MatHeaderCell_Factory","MatFooterCell","ɵMatFooterCell_BaseFactory","MatFooterCell_Factory","MatCell","ɵMatCell_BaseFactory","MatCell_Factory","ROW_TEMPLATE","MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatHeaderRowDef_Factory","MatFooterRowDef","ɵMatFooterRowDef_BaseFactory","MatFooterRowDef_Factory","MatRowDef","ɵMatRowDef_BaseFactory","MatRowDef_Factory","MatHeaderRow","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Factory","MatHeaderRow_Template","MatFooterRow","ɵMatFooterRow_BaseFactory","MatFooterRow_Factory","MatFooterRow_Template","MatRow","ɵMatRow_BaseFactory","MatRow_Factory","MatRow_Template","MatNoDataRow","ɵMatNoDataRow_BaseFactory","MatNoDataRow_Factory","MatTextColumn","ɵMatTextColumn_BaseFactory","MatTextColumn_Factory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","_MatTableDataSource","_renderChangesSubscription","_filterData","_filter","_updateChangeSubscription","paginator","_paginator","initialData","_renderData","_internalPageChanges","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","initialized","pageChange","filteredData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","MatTableDataSource"],"sourceRoot":"webpack:///","x_google_ignoreList":[4,5,6,7,8,9]}