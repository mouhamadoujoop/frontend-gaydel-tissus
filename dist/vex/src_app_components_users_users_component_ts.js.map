{"version":3,"file":"src_app_components_users_users_component_ts.js","mappings":"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","sources":["./src/app/components/users/users-create-update/users-create-update.component.ts","./src/app/components/users/users-create-update/users-create-update.component.html","./src/app/components/users/users.component.ts","./src/app/components/users/users.component.html","./src/app/services/site/sites.service.ts","./src/app/services/users/users.service.ts"],"sourcesContent":["import { SitesService } from './../../../services/site/sites.service';\r\nimport { UsersService } from './../../../services/users/users.service';\r\nimport { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, ReactiveFormsModule, UntypedFormControl, Validators } from '@angular/forms';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef\r\n} from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { AsyncPipe, NgFor, NgIf } from '@angular/common';\r\nimport { User } from 'src/app/models/user';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { Roles } from 'src/app/models/roles';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Component({\r\n  selector: 'vex-users-create-update',\r\n  templateUrl: './users-create-update.component.html',\r\n  styleUrls: ['./users-create-update.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    NgFor,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    AsyncPipe\r\n  ]\r\n})\r\nexport class UsersCreateUpdateComponent implements OnInit {\r\n  roleId: number = 0;\r\n  roleName: string = '';\r\n  roles: Roles[] = [];\r\n\r\n  siteId: number = 0;\r\n  siteName: string = '';\r\n  sites: Site[] = [];\r\n\r\n  roleCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\r\n  siteCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\r\n  statusCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\r\n\r\n  inputType = 'password';\r\n  visible = false;\r\n\r\n  static id = 100;\r\n\r\n  form = this.fb.group({\r\n    id: [UsersCreateUpdateComponent.id++],\r\n    first_name: [this.defaults?.first_name, [Validators.required, Validators.pattern(/^[a-zA-ZÀ-ÿ\\s'-]+$/)]],\r\n    last_name: [this.defaults?.last_name, [Validators.required, Validators.pattern(/^[a-zA-Z]+$/)]],\r\n    password: [this.defaults?.password],\r\n    phone: [this.defaults?.phone, [Validators.required, Validators.pattern(/^(\\+221|221)?(77|78|70|76|75)\\d{7}$/)]],\r\n    email: [this.defaults?.email, [Validators.required, Validators.email]],\r\n    role_id: [this.defaults?.role_id || ''],\r\n    role: [this.defaults?.role || ''],\r\n    status: [this.defaults?.status, [Validators.required]],\r\n    site_id: [this.defaults?.site_id || ''],\r\n    site: [this.defaults?.site || '']\r\n  });\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public defaults: User | undefined,\r\n    private dialogRef: MatDialogRef<UsersCreateUpdateComponent>,\r\n    private fb: FormBuilder,\r\n    private usersService: UsersService,\r\n    private sitesService: SitesService,\r\n    private cd: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getRoles();\r\n    this.getSites();\r\n    \r\n    if (this.defaults) {\r\n      this.mode = 'update';\r\n\r\n      const role = this.defaults.role_id as any;\r\n      const site = this.defaults.site_id as any;\r\n      this.roleCtrl.setValue(role.id); \r\n      this.siteCtrl.setValue(site.id); \r\n      this.statusCtrl.setValue(this.defaults.status); \r\n      \r\n    } else {\r\n      this.defaults = {} as User;\r\n    }\r\n\r\n    this.form.patchValue(this.defaults);\r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createUser();\r\n    } else if (this.mode === 'update') {\r\n      console.log({form: this.form.value});\r\n      this.updateUser();\r\n    }\r\n  }\r\n\r\n  createUser() {\r\n    this.form.get('role_id')?.setValue(this.roleId);\r\n    this.form.get('role')?.setValue(this.roleName);\r\n    this.form.get('site_id')?.setValue(this.siteId);\r\n    this.form.get('site')?.setValue(this.siteName);\r\n    this.form.get('status')?.setValue(this.statusCtrl.value);\r\n    const users = this.form.value;\r\n\r\n    this.dialogRef.close(users);\r\n  }\r\n\r\n  updateUser() {\r\n    this.form.get('role_id')?.setValue(this.roleId);\r\n    this.form.get('role')?.setValue(this.roleName);\r\n    this.form.get('site_id')?.setValue(this.siteId);\r\n    this.form.get('site')?.setValue(this.siteName);\r\n    this.form.get('status')?.setValue(this.statusCtrl.value);\r\n    const users = this.form.value;\r\n\r\n    if (!this.defaults) {\r\n      throw new Error(\r\n        'User ID does not exist, this roles cannot be updated'\r\n      );\r\n    }\r\n\r\n    users.id = this.defaults.id;\r\n\r\n    this.dialogRef.close(users);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n\r\n  toggleVisibility() {\r\n    if (this.visible) {\r\n      this.inputType = 'password';\r\n      this.visible = false;\r\n      this.cd.markForCheck();\r\n    } else {\r\n      this.inputType = 'text';\r\n      this.visible = true;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  getRoles(){\r\n    this.usersService.getRoles().subscribe(\r\n    (result) => {\r\n        this.roles = result.data;\r\n      });\r\n  }\r\n\r\n  getRoleNameById(id: number): string {\r\n    this.roleId=id;\r\n    const role = this.roles.find(r => r.id === id);\r\n    this.roleName = role ? role.role_name : '';\r\n    return role ? role.role_name : '';\r\n  }\r\n  \r\n\r\n  getSites(){\r\n    this.sitesService.getSites().subscribe(\r\n      (result) => {\r\n        this.sites = result.data;\r\n      });\r\n  }\r\n\r\n  getSiteNameById(id: number): string {\r\n    this.siteId=id;\r\n    const site = this.sites.find(s => s.id === id);\r\n    this.siteName = site ? site.name : '';\r\n    return site ? site.name : '';\r\n  }\r\n  \r\n}\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n     <div class=\"flex items-center\" mat-dialog-title>\r\n       <h2 *ngIf=\"form.controls.first_name.value || form.controls.first_name.value\" class=\"headline m-0 flex-auto\">\r\n         {{ form.controls.first_name.value + \" \" }}\r\n       </h2>\r\n       <h2 *ngIf=\"!form.controls.first_name.value && !form.controls.first_name.value\" class=\"headline m-0 flex-auto\">\r\n         Nouveau Utilisateur\r\n       </h2>\r\n       <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n         <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n       </button>\r\n     </div>\r\n   \r\n     <mat-divider class=\"text-border\"></mat-divider>\r\n   \r\n     <mat-dialog-content class=\"flex flex-col\">\r\n        <mat-form-field class=\"w-300 max-w-full\" >\r\n              <mat-label>Selectionner un role</mat-label>\r\n              <input [formControl]=\"roleCtrl\" [matAutocomplete]=\"autoRole\" matInput [value]=\"getRoleNameById(roleCtrl.value)\"/>\r\n              <mat-autocomplete #autoRole=\"matAutocomplete\">\r\n                <mat-option\r\n                  *ngFor=\"let role of roles \"\r\n                  [value]=\"role.id\" >\r\n                  <span class=\"flex items-center\">\r\n                    <span class=\"flex flex-col\">\r\n                      {{ role.role_name }}\r\n                    </span>\r\n                  </span>\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <button\r\n                (click)=\"roleCtrl.reset()\"\r\n                *ngIf=\"roleCtrl.value\"\r\n                mat-icon-button\r\n                matIconSuffix\r\n                type=\"button\">\r\n                <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n              </button>\r\n              <button *ngIf=\"!roleCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n                <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n              </button>\r\n              <mat-error *ngIf=\"roleCtrl.invalid\">Veuillez sélectionner un role</mat-error>\r\n        </mat-form-field>\r\n\r\n        <div class=\"flex flex-col sm:flex-row\">\r\n          <mat-form-field class=\"flex-auto\">\r\n            <mat-label>Prénom</mat-label>\r\n            <input formControlName=\"first_name\" matInput />\r\n            <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n            <mat-error *ngIf=\"form.get('first_name')?.hasError('required')\">\r\n              Le prénom de l'utilisateur est requise\r\n            </mat-error>\r\n            <mat-error *ngIf=\"form.get('first_name')?.hasError('pattern')\">\r\n              Le nom de l'utilisateur doit contenir uniquement des caractères alphabétiques.\r\n            </mat-error>\r\n          </mat-form-field>\r\n      \r\n   \r\n          <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n            <mat-label>Nom</mat-label>\r\n            <input formControlName=\"last_name\"  matInput />\r\n            <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n            <mat-error *ngIf=\"form.get('last_name')?.hasError('required')\">\r\n              Le nom de l'utilisateur est requise\r\n            </mat-error>\r\n            <mat-error *ngIf=\"form.get('last_name')?.hasError('pattern')\">\r\n              Le nom de l'utilisateur doit contenir uniquement des caractères alphabétiques.\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"flex flex-col sm:flex-row\" *ngIf=\"isCreateMode()\">\r\n          <mat-form-field class=\"flex-auto\" *ngIf=\"isCreateMode\">\r\n              <mat-label>Password</mat-label>\r\n              <input\r\n                [type]=\"inputType\"\r\n                formControlName=\"password\"\r\n                matInput\r\n                required />\r\n              <button\r\n                (click)=\"toggleVisibility()\"\r\n                mat-icon-button\r\n                matIconSuffix\r\n                matTooltip=\"Toggle Visibility\"\r\n                type=\"button\">\r\n                <mat-icon *ngIf=\"visible\" svgIcon=\"mat:visibility\"></mat-icon>\r\n                <mat-icon *ngIf=\"!visible\" svgIcon=\"mat:visibility_off\"></mat-icon>\r\n              </button>\r\n              <mat-error  *ngIf=\"form.controls.password.hasError('required')\"\r\n              >Merci de saisire votre mot de passe\r\n              </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"sm:ml-6 flex-auto\" >\r\n            <mat-label>Status</mat-label>\r\n            <input [formControl]=\"statusCtrl\" [matAutocomplete]=\"autoStatus\" matInput/>\r\n            <mat-autocomplete #autoStatus=\"matAutocomplete\">\r\n              <mat-option\r\n                [value]=\"'Actif'\" >\r\n                <span class=\"flex items-center\">\r\n                  <span class=\"flex flex-col\">\r\n                    Actif\r\n                  </span>\r\n                </span>\r\n              </mat-option>\r\n              <mat-option\r\n                [value]=\"'Inactif'\" >\r\n                <span class=\"flex items-center\">\r\n                  <span class=\"flex flex-col\">\r\n                   Inactif\r\n                  </span>\r\n                </span>\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n            <button\r\n              (click)=\"statusCtrl.reset()\"\r\n              *ngIf=\"statusCtrl.value\"\r\n              mat-icon-button\r\n              matIconSuffix\r\n              type=\"button\">\r\n              <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n            </button>\r\n            <button *ngIf=\"!statusCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n              <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n            </button>\r\n            <mat-error *ngIf=\"statusCtrl.invalid\">Veuillez sélectionner un site</mat-error>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        \r\n        <mat-form-field class=\"w-300 max-w-full\" *ngIf=\"isUpdateMode()\">\r\n          <mat-label>Status</mat-label>\r\n          <input [formControl]=\"statusCtrl\" [matAutocomplete]=\"autoStatus\" matInput/>\r\n          <mat-autocomplete #autoStatus=\"matAutocomplete\">\r\n            <mat-option\r\n              [value]=\"'Actif'\" >\r\n              <span class=\"flex items-center\">\r\n                <span class=\"flex flex-col\">\r\n                  Actif\r\n                </span>\r\n              </span>\r\n            </mat-option>\r\n            <mat-option\r\n              [value]=\"'Inactif'\" >\r\n              <span class=\"flex items-center\">\r\n                <span class=\"flex flex-col\">\r\n                  Inactif\r\n                </span>\r\n              </span>\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <button\r\n            (click)=\"statusCtrl.reset()\"\r\n            *ngIf=\"statusCtrl.value\"\r\n            mat-icon-button\r\n            matIconSuffix\r\n            type=\"button\">\r\n            <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n          </button>\r\n          <button *ngIf=\"!statusCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n            <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n          </button>\r\n          <mat-error *ngIf=\"statusCtrl.invalid\">Veuillez sélectionner un site</mat-error>\r\n        </mat-form-field>\r\n      \r\n    \r\n   \r\n       <mat-form-field class=\"flex-auto\">\r\n         <mat-label>Télephone</mat-label>\r\n         <input formControlName=\"phone\" matInput />\r\n         <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n         <mat-error *ngIf=\"form.get('phone')?.hasError('required')\">\r\n           Le numéro de téléphone est requise\r\n         </mat-error>\r\n         <mat-error *ngIf=\"form.get('phone')?.hasError('pattern')\">\r\n          Le numéro de téléphone doit être valide (format sénégalais).\r\n        </mat-error>\r\n       </mat-form-field>\r\n   \r\n       <mat-form-field class=\"flex-auto\">\r\n         <mat-label>Email</mat-label>\r\n         <input formControlName=\"email\" matInput />\r\n         <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n         <mat-error *ngIf=\"form.get('email')?.hasError('required')\">\r\n           L'email de l'utilisateur est requise\r\n         </mat-error>\r\n         <mat-error *ngIf=\"form.get('email')?.hasError('email')\">\r\n          L'email de l'utilisateur doit être valide.\r\n        </mat-error>\r\n       </mat-form-field>\r\n\r\n      <mat-form-field class=\"w-300 max-w-full\" >\r\n          <mat-label>Selectionner un site</mat-label>\r\n          <input [formControl]=\"siteCtrl\" [matAutocomplete]=\"autoSite\" matInput [value]=\"getSiteNameById(siteCtrl.value)\"/>\r\n          <mat-autocomplete #autoSite=\"matAutocomplete\">\r\n            <mat-option\r\n              *ngFor=\"let site of sites \"\r\n              [value]=\"site.id\" >\r\n              <span class=\"flex items-center\">\r\n                <span class=\"flex flex-col\">\r\n                  {{ site.name }}\r\n                </span>\r\n              </span>\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <button\r\n            (click)=\"siteCtrl.reset()\"\r\n            *ngIf=\"siteCtrl.value\"\r\n            mat-icon-button\r\n            matIconSuffix\r\n            type=\"button\">\r\n            <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n          </button>\r\n          <button *ngIf=\"!siteCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n            <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n          </button>\r\n          <mat-error *ngIf=\"siteCtrl.invalid\">Veuillez sélectionner un site</mat-error>\r\n      </mat-form-field>\r\n\r\n     </mat-dialog-content>\r\n\r\n     <mat-dialog-actions align=\"end\">\r\n       <button mat-button mat-dialog-close type=\"button\">Annuler</button>\r\n       <button\r\n         *ngIf=\"isCreateMode() &&  roleCtrl.invalid==false && siteCtrl.invalid==false\"\r\n         color=\"primary\"\r\n         mat-flat-button\r\n         type=\"submit\">\r\n         Ajouter un utilisateur\r\n       </button>\r\n       <button\r\n         *ngIf=\"isUpdateMode()\"\r\n         color=\"primary\"\r\n         mat-flat-button\r\n         type=\"submit\">\r\n         Modifier l'utilisateur\r\n       </button>\r\n     </mat-dialog-actions>\r\n\r\n</form>\r\n   \r\n   \r\n   ","import { UsersService } from './../../services/users/users.service';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  DestroyRef,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Observable,ReplaySubject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\r\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\r\nimport { stagger40ms } from '@vex/animations/stagger.animation';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  UntypedFormControl\r\n} from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { VexPageLayoutContentDirective } from '@vex/components/vex-page-layout/vex-page-layout-content.directive';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { VexBreadcrumbsComponent } from '@vex/components/vex-breadcrumbs/vex-breadcrumbs.component';\r\nimport { VexPageLayoutHeaderDirective } from '@vex/components/vex-page-layout/vex-page-layout-header.directive';\r\nimport { VexPageLayoutComponent } from '@vex/components/vex-page-layout/vex-page-layout.component';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { User } from 'src/app/models/user';\r\nimport { UsersCreateUpdateComponent } from './users-create-update/users-create-update.component';\r\n\r\n@Component({\r\n  selector: 'vex-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss'],\r\n  standalone : true,\r\n  animations: [fadeInUp400ms, stagger40ms],\r\n  imports: [\r\n    VexPageLayoutComponent,\r\n    VexPageLayoutHeaderDirective,\r\n    VexBreadcrumbsComponent,\r\n    MatButtonToggleModule,\r\n    ReactiveFormsModule,\r\n    VexPageLayoutContentDirective,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    NgFor,\r\n    NgClass,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule\r\n  ]\r\n})\r\nexport class UsersComponent implements OnInit, AfterViewInit {\r\n  layoutCtrl = new UntypedFormControl('boxed');\r\n\r\n  /**\r\n   * Simulating a service with HTTP that returns Observables\r\n   * You probably want to remove this and do all requests in a service with HTTP\r\n   */\r\n  subject$: ReplaySubject<User[]> = new ReplaySubject<User[]>(1);\r\n  data$: Observable<User[]> = this.subject$.asObservable();\r\n  users: User[] = [];\r\n\r\n  @Input()\r\n  columns: TableColumn<User>[] = [\r\n    {\r\n      label: 'Prénom',\r\n      property: 'first_name',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Nom',\r\n      property: 'last_name',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n    {\r\n      label: 'Téléphone',\r\n      property: 'phone',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n    {\r\n      label: 'Email',\r\n      property: 'email',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n    {\r\n      label: 'Role',\r\n      property: 'role',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n    {\r\n      label: 'Site',\r\n      property: 'site',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n    {\r\n      label: 'Status',\r\n      property: 'status',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n\r\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 20, 50];\r\n  dataSource!: MatTableDataSource<User>;\r\n  selection = new SelectionModel<User>(true, []);\r\n  searchCtrl = new UntypedFormControl();\r\n\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\r\n\r\n  private readonly destroyRef: DestroyRef = inject(DestroyRef);\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private usersService: UsersService,\r\n    private snackbar: MatSnackBar,\r\n  ) {}\r\n  \r\n  ngOnInit() {\r\n    this.getData().subscribe((users) => {\r\n      this.subject$.next(users);\r\n    });\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.data$.pipe(filter<User[]>(Boolean)).subscribe((users) => {\r\n      this.users = users;\r\n      this.dataSource.data = users;\r\n    });\r\n\r\n    console.log({user:this.users});\r\n    this.searchCtrl.valueChanges\r\n      .pipe(takeUntilDestroyed(this.destroyRef))\r\n      .subscribe((value) => this.onFilterChange(value));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.paginator) {\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    if (this.sort) {\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  get visibleColumns() {\r\n    return this.columns\r\n      .filter((column) => column.visible)\r\n      .map((column) => column.property);\r\n  }\r\n\r\n  /**\r\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\r\n   * We are simulating this request here.\r\n   */\r\n    getData() {\r\n      return this.usersService.getUsers().pipe(\r\n        map((result: any) => {\r\n          this.users = result.data;\r\n          return this.users.map((user) => new User(user));\r\n        })\r\n      );\r\n    }\r\n\r\n  createUser() {\r\n    this.dialog\r\n      .open(UsersCreateUpdateComponent)\r\n      .afterClosed()\r\n      .subscribe((user: User) => {\r\n        if (user) {\r\n          this.usersService.addUser(user).subscribe((result:any) => {\r\n            if (result.status === 200) {\r\n              this.users.unshift(new User(user));\r\n              this.subject$.next(this.users);\r\n              this.snackbar.open(\r\n                \"L'utilisateur ajouter avec succés\",\r\n                'MERCI',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n            }else{\r\n              this.snackbar.open(\r\n                \"Echec Ajout Utilisateur\",\r\n                'MERCI DE REESSAYER',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n      \r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  updateUser(user: User) {\r\n    this.dialog\r\n      .open(UsersCreateUpdateComponent, {\r\n        data: user\r\n      })\r\n      .afterClosed()\r\n      .subscribe((updatedUser) => {\r\n\r\n        if (updatedUser) {\r\n          this.usersService.updateUser(updatedUser).subscribe((result:any) => {\r\n            console.log({result: result});\r\n            if (result.status === 200) {\r\n              const index = this.users.findIndex(\r\n                (existingUser) => existingUser.id === updatedUser.id\r\n              );\r\n              this.users[index] = new User(updatedUser);\r\n              this.subject$.next(this.users);\r\n              this.snackbar.open(\r\n                \"Utilisateur modifier avec succés\",\r\n                'MERCI',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n            }else{\r\n              this.snackbar.open(\r\n                \"Echec Modification Utilisateur\",\r\n                'MERCI DE REESSAYER',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n      \r\n            }\r\n          });\r\n          \r\n        }\r\n      });\r\n  }\r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column: TableColumn<User>, event: Event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  onLabelChange(change: MatSelectChange, row: User) {\r\n    const index = this.users.findIndex((u) => u === row);\r\n    this.subject$.next(this.users);\r\n  }\r\n\r\n}\r\n","<vex-page-layout>\r\n     <vex-page-layout-header\r\n       class=\"pb-1 flex flex-col items-start justify-center\">\r\n     </vex-page-layout-header>\r\n   \r\n     <vex-page-layout-content\r\n       [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n       [class.px-6]=\"layoutCtrl.value === 'fullwidth'\"\r\n       class=\"-mt-6\">\r\n       <div class=\"card overflow-auto -mt-16\">\r\n         <div\r\n           class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\r\n           <h2\r\n             class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\r\n             <span *ngIf=\"selection.isEmpty()\">Utilisateurs</span>\r\n           </h2>\r\n   \r\n          \r\n   \r\n           <mat-form-field subscriptSizing=\"dynamic\">\r\n             <mat-icon matIconPrefix svgIcon=\"mat:search\"></mat-icon>\r\n             <input\r\n               matInput\r\n               [formControl]=\"searchCtrl\"\r\n               placeholder=\"Search&hellip;\"\r\n               type=\"text\" />\r\n           </mat-form-field>\r\n   \r\n           <span class=\"flex-1\"></span>\r\n   \r\n           <button\r\n             [matMenuTriggerFor]=\"columnFilterMenu\"\r\n             class=\"ml-4 flex-none\"\r\n             mat-icon-button\r\n             matTooltip=\"Filter Columns\"\r\n             type=\"button\">\r\n             <mat-icon svgIcon=\"mat:filter_list\"></mat-icon>\r\n           </button>\r\n   \r\n           <button\r\n             (click)=\"createUser()\"\r\n             class=\"ml-4 flex-none\"\r\n             color=\"primary\"\r\n             mat-mini-fab\r\n             matTooltip=\"Add user\"\r\n             type=\"button\">\r\n             <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n           </button>\r\n         </div>\r\n   \r\n         <table\r\n           @stagger\r\n           [dataSource]=\"dataSource\"\r\n           class=\"w-full\"\r\n           mat-table\r\n           matSort>\r\n           <!--- Note that these columns can be defined in any order.\r\n                 The actual rendered columns are set as a property on the row definition\" -->\r\n   \r\n           <!-- Checkbox Column -->\r\n           <ng-container matColumnDef=\"checkbox\">\r\n             <th *matHeaderCellDef mat-header-cell>\r\n               <mat-checkbox\r\n                 (change)=\"$event ? masterToggle() : null\"\r\n                 [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                 [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                 color=\"primary\">\r\n               </mat-checkbox>\r\n             </th>\r\n             <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n               <mat-checkbox\r\n                 (change)=\"$event ? selection.toggle(row) : null\"\r\n                 (click)=\"$event.stopPropagation()\"\r\n                 [checked]=\"selection.isSelected(row)\"\r\n                 color=\"primary\">\r\n               </mat-checkbox>\r\n             </td>\r\n           </ng-container>\r\n   \r\n           <!-- Image Column -->\r\n           <ng-container matColumnDef=\"image\">\r\n             <th *matHeaderCellDef mat-header-cell></th>\r\n             <td *matCellDef=\"let row\" class=\"w-8 min-w-8 p-0\" mat-cell>\r\n               <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\" />\r\n             </td>\r\n           </ng-container>\r\n   \r\n           <!-- Text Columns -->\r\n           <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n             <ng-container\r\n               *ngIf=\"column.type === 'text'\"\r\n               [matColumnDef]=\"column.property\">\r\n               <th\r\n                 *matHeaderCellDef\r\n                 class=\"uppercase\"\r\n                 mat-header-cell\r\n                 mat-sort-header>\r\n                 {{ column.label }}\r\n               </th>\r\n               <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n                 {{ row[column.property] }}\r\n               </td>\r\n             </ng-container>\r\n           </ng-container>\r\n   \r\n           <!-- Conversion (kg-m)-->\r\n           <ng-container matColumnDef=\"contact\">\r\n             <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n             <td *matCellDef=\"let row\" mat-cell>\r\n               <div class=\"flex\">\r\n                 <a\r\n                   (click)=\"$event.stopPropagation()\"\r\n                   class=\"w-8 h-8 p-0 leading-none flex items-center justify-center hover:bg-hover text-primary-600 bg-primary-600/10\"\r\n                   mat-icon-button>\r\n                   <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\r\n                 </a>\r\n   \r\n                 <a\r\n                   (click)=\"$event.stopPropagation()\"\r\n                   class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal-600 bg-teal/10\"\r\n                   mat-icon-button>\r\n                   <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\r\n                 </a>\r\n   \r\n                 <a\r\n                   (click)=\"$event.stopPropagation()\"\r\n                   class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green-600 bg-green-600/10\"\r\n                   mat-icon-button>\r\n                   <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\r\n                 </a>\r\n               </div>\r\n             </td>\r\n           </ng-container>\r\n   \r\n           <!-- Label Column -->\r\n           <ng-container matColumnDef=\"labels\">\r\n             <th\r\n               *matHeaderCellDef\r\n               class=\"uppercase\"\r\n               mat-header-cell\r\n               mat-sort-header>\r\n               Qualité\r\n             </th>\r\n             <td *matCellDef=\"let row\" mat-cell>\r\n               <div\r\n                 (click)=\"$event.stopPropagation()\"\r\n                 class=\"flex items-center gap-1\">\r\n                 <div\r\n                   class=\"bg-base text-hint cursor-pointer hover:bg-hover flex-none flex items-center justify-center\">\r\n                   <mat-icon class=\"icon-sm\" svgIcon=\"mat:add\"></mat-icon>\r\n                 </div>\r\n               </div>\r\n             </td>\r\n           </ng-container>\r\n   \r\n           <!-- Action Column -->\r\n           <ng-container matColumnDef=\"actions\">\r\n             <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n             <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n               <button\r\n                 (click)=\"$event.stopPropagation()\"\r\n                 [matMenuTriggerData]=\"{ user: row }\"\r\n                 [matMenuTriggerFor]=\"actionsMenu\"\r\n                 mat-icon-button\r\n                 type=\"button\">\r\n                 <mat-icon svgIcon=\"mat:more_horiz\"></mat-icon>\r\n               </button>\r\n             </td>\r\n           </ng-container>\r\n   \r\n           <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n           <tr\r\n             (click)=\"updateUser(row)\"\r\n             *matRowDef=\"let row; columns: visibleColumns\"\r\n             @fadeInUp\r\n             class=\"hover:bg-hover transition duration-400 ease-out-swift cursor-pointer\"\r\n             mat-row></tr>\r\n         </table>\r\n   \r\n         <mat-paginator\r\n           [pageSizeOptions]=\"pageSizeOptions\"\r\n           [pageSize]=\"pageSize\"\r\n           class=\"sticky left-0\"></mat-paginator>\r\n       </div>\r\n     </vex-page-layout-content>\r\n   </vex-page-layout>\r\n   \r\n   <mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n     <button\r\n       (click)=\"toggleColumnVisibility(column, $event)\"\r\n       *ngFor=\"let column of columns\"\r\n       class=\"mat-menu-item block\">\r\n       <mat-checkbox\r\n         (click)=\"$event.stopPropagation()\"\r\n         [(ngModel)]=\"column.visible\"\r\n         color=\"primary\">\r\n         {{ column.label }}\r\n       </mat-checkbox>\r\n     </button>\r\n   </mat-menu>\r\n   \r\n   <mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n     <ng-template let-user=\"user\" matMenuContent>\r\n       <button (click)=\"updateUser(user)\" mat-menu-item>\r\n         <mat-icon svgIcon=\"mat:edit\"></mat-icon>\r\n         <span>Modifier</span>\r\n       </button>\r\n     </ng-template>\r\n   </mat-menu>\r\n   \r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SitesService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  getSites():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  addSite(site:Site):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/sites`, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateSite(site:Site):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/sites/`+site.id, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSite(id:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+id, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSiteStocks(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/stocks`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  getUsers():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/users`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  addUser(user:User):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/users`, user,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateUser(user:User):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/users/${user.id}`, user,{... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  getRoles():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/roles`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n}\r\n"],"names":["ReactiveFormsModule","UntypedFormControl","Validators","MAT_DIALOG_DATA","MatDialogModule","MatInputModule","MatFormFieldModule","MatDividerModule","MatIconModule","MatMenuModule","MatButtonModule","NgFor","NgIf","MatAutocompleteModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","form","controls","first_name","value","ɵɵproperty","role_r24","id","role_name","ɵɵlistener","UsersCreateUpdateComponent_button_15_Template_button_click_0_listener","ɵɵrestoreView","_r26","ctx_r25","ɵɵnextContext","ɵɵresetView","roleCtrl","reset","ɵɵelement","UsersCreateUpdateComponent_div_33_mat_form_field_1_Template_button_click_4_listener","_r36","ctx_r35","toggleVisibility","ɵɵtemplate","UsersCreateUpdateComponent_div_33_mat_form_field_1_mat_icon_5_Template","UsersCreateUpdateComponent_div_33_mat_form_field_1_mat_icon_6_Template","UsersCreateUpdateComponent_div_33_mat_form_field_1_mat_error_7_Template","ctx_r27","inputType","visible","password","hasError","UsersCreateUpdateComponent_div_33_button_16_Template_button_click_0_listener","_r38","ctx_r37","statusCtrl","UsersCreateUpdateComponent_div_33_mat_form_field_1_Template","UsersCreateUpdateComponent_div_33_button_16_Template","UsersCreateUpdateComponent_div_33_button_17_Template","UsersCreateUpdateComponent_div_33_mat_error_18_Template","ctx_r11","isCreateMode","_r28","invalid","UsersCreateUpdateComponent_mat_form_field_34_button_14_Template_button_click_0_listener","_r44","ctx_r43","UsersCreateUpdateComponent_mat_form_field_34_button_14_Template","UsersCreateUpdateComponent_mat_form_field_34_button_15_Template","UsersCreateUpdateComponent_mat_form_field_34_mat_error_16_Template","ctx_r12","_r39","site_r45","name","UsersCreateUpdateComponent_button_56_Template_button_click_0_listener","_r47","ctx_r46","siteCtrl","UsersCreateUpdateComponent","_","constructor","defaults","dialogRef","fb","usersService","sitesService","cd","roleId","roleName","roles","siteId","siteName","sites","required","group","pattern","last_name","phone","email","role_id","role","status","site_id","site","mode","ngOnInit","getRoles","getSites","setValue","patchValue","save","createUser","console","log","updateUser","get","users","close","Error","isUpdateMode","markForCheck","subscribe","result","data","getRoleNameById","find","r","getSiteNameById","s","_2","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","i3","UsersService","i4","SitesService","ChangeDetectorRef","_3","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","UsersCreateUpdateComponent_Template","rf","ctx","UsersCreateUpdateComponent_Template_form_ngSubmit_0_listener","UsersCreateUpdateComponent_h2_2_Template","UsersCreateUpdateComponent_h2_3_Template","UsersCreateUpdateComponent_mat_option_14_Template","UsersCreateUpdateComponent_button_15_Template","UsersCreateUpdateComponent_button_16_Template","UsersCreateUpdateComponent_mat_error_17_Template","UsersCreateUpdateComponent_mat_error_24_Template","UsersCreateUpdateComponent_mat_error_25_Template","UsersCreateUpdateComponent_mat_error_31_Template","UsersCreateUpdateComponent_mat_error_32_Template","UsersCreateUpdateComponent_div_33_Template","UsersCreateUpdateComponent_mat_form_field_34_Template","UsersCreateUpdateComponent_mat_error_40_Template","UsersCreateUpdateComponent_mat_error_41_Template","UsersCreateUpdateComponent_mat_error_47_Template","UsersCreateUpdateComponent_mat_error_48_Template","UsersCreateUpdateComponent_mat_option_55_Template","UsersCreateUpdateComponent_button_56_Template","UsersCreateUpdateComponent_button_57_Template","UsersCreateUpdateComponent_mat_error_58_Template","UsersCreateUpdateComponent_button_62_Template","UsersCreateUpdateComponent_button_63_Template","_r2","tmp_10_0","tmp_11_0","tmp_12_0","tmp_13_0","tmp_16_0","tmp_17_0","tmp_18_0","tmp_19_0","_r17","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormControlDirective","FormGroupDirective","FormControlName","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i5","MatButton","MatIconButton","i6","MatIcon","i7","MatDivider","i8","MatFormField","MatLabel","MatError","MatPrefix","MatSuffix","i9","MatInput","i10","MatAutocomplete","i11","MatOption","MatAutocompleteTrigger","styles","DestroyRef","inject","ReplaySubject","filter","map","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","SelectionModel","fadeInUp400ms","stagger40ms","FormsModule","MatCheckboxModule","MatTooltipModule","NgClass","VexPageLayoutContentDirective","MatButtonToggleModule","VexPageLayoutHeaderDirective","VexPageLayoutComponent","takeUntilDestroyed","MatSnackBarModule","User","UsersComponent_th_17_Template_mat_checkbox_change_1_listener","$event","_r19","ctx_r18","masterToggle","ctx_r1","selection","hasValue","isAllSelected","UsersComponent_td_18_Template_mat_checkbox_change_1_listener","restoredCtx","_r22","row_r20","$implicit","ctx_r21","toggle","UsersComponent_td_18_Template_mat_checkbox_click_1_listener","stopPropagation","ctx_r2","isSelected","row_r24","ɵɵsanitizeUrl","column_r25","label","cssClasses","row_r30","property","ɵɵelementContainerStart","UsersComponent_ng_container_22_ng_container_1_th_1_Template","UsersComponent_ng_container_22_ng_container_1_td_2_Template","ɵɵelementContainerEnd","UsersComponent_ng_container_22_ng_container_1_Template","type","UsersComponent_td_25_Template_a_click_2_listener","UsersComponent_td_25_Template_a_click_4_listener","UsersComponent_td_25_Template_a_click_6_listener","UsersComponent_td_28_Template_div_click_1_listener","UsersComponent_td_31_Template_button_click_1_listener","ɵɵpureFunction1","_c0","row_r39","_r16","UsersComponent_tr_33_Template_tr_click_0_listener","_r43","row_r41","ctx_r42","undefined","UsersComponent_button_37_Template_button_click_0_listener","_r46","column_r44","ctx_r45","toggleColumnVisibility","UsersComponent_button_37_Template_mat_checkbox_click_1_listener","UsersComponent_button_37_Template_mat_checkbox_ngModelChange_1_listener","UsersComponent_ng_template_40_Template_button_click_0_listener","_r51","user_r49","user","ctx_r50","UsersComponent","dialog","snackbar","layoutCtrl","subject$","data$","asObservable","columns","pageSize","pageSizeOptions","searchCtrl","destroyRef","getData","next","dataSource","pipe","Boolean","valueChanges","onFilterChange","ngAfterViewInit","paginator","sort","visibleColumns","column","getUsers","open","afterClosed","addUser","unshift","duration","updatedUser","index","findIndex","existingUser","trim","toLowerCase","event","stopImmediatePropagation","numSelected","selected","length","numRows","clear","forEach","row","select","trackByProperty","onLabelChange","change","u","MatDialog","MatSnackBar","viewQuery","UsersComponent_Query","UsersComponent_span_6_Template","UsersComponent_Template_button_click_13_listener","UsersComponent_th_17_Template","UsersComponent_td_18_Template","UsersComponent_th_20_Template","UsersComponent_td_21_Template","UsersComponent_ng_container_22_Template","UsersComponent_th_24_Template","UsersComponent_td_25_Template","UsersComponent_th_27_Template","UsersComponent_td_28_Template","UsersComponent_th_30_Template","UsersComponent_td_31_Template","UsersComponent_tr_32_Template","UsersComponent_tr_33_Template","UsersComponent_button_37_Template","UsersComponent_ng_template_40_Template","ɵɵclassProp","isEmpty","_r14","MatIconAnchor","MatMiniFabButton","MatTooltip","MatMenu","MatMenuItem","MatMenuContent","MatMenuTrigger","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatSortHeader","MatCheckbox","i12","NgModel","i13","i14","animation","environment","httpClient","router","localStorage","BASE_URL","getAuthorization","addSite","post","updateSite","put","getSite","getSiteStocks","ɵɵinject","HttpClient","Router","LocalStorageService","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}