{"version":3,"file":"default-src_app_components_sales_sales-create-update_sales-create-update_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEkG;AAKhE;AACW;AACY;AACS;AACL;AACN;AACA;AACI;AACA;AACY;AACd;AACP;AACC;AAIN;;;;;;;;;;;;;;;;;ICrBzCmB,4DAAA,aAAkE;IAChEA,oDAAA,GACF;IAAAA,0DAAA,EAAK;;;;IADHA,uDAAA,GACF;IADEA,gEAAA,MAAAM,MAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,KAAA,MACF;;;;;IACAV,4DAAA,aAAmE;IACjEA,oDAAA,yBACF;IAAAA,0DAAA,EAAK;;;;;IAULA,4DAAA,yBAAwD;IACtDA,uDAAA,gBAA6D;IAE/DA,0DAAA,EAAiB;;;;;IACjBA,4DAAA,yBAAwD;IAC3CA,oDAAA,WAAI;IAAAA,0DAAA,EAAY;IAC3BA,uDAAA,eAA8G;IAIhHA,0DAAA,EAAiB;;;;;IAJRA,uDAAA,GAAwB;IAAxBA,wDAAA,gBAAAa,MAAA,CAAAC,QAAA,CAAwB,oBAAAC,GAAA,WAAAF,MAAA,CAAAG,eAAA,CAAAH,MAAA,CAAAC,QAAA,CAAAJ,KAAA;;;;;IAW7BV,4DAAA,qBAAkE;IAG5DA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;IAJkCA,wDAAA,UAAAiB,WAAA,CAAAR,EAAA,CAAoB;IAG3DT,uDAAA,GACF;IADEA,gEAAA,MAAAiB,WAAA,CAAAC,IAAA,MACF;;;;;;IAINlB,4DAAA,iBAA4G;IAApGA,wDAAA,mBAAAoB,sEAAA;MAAApB,2DAAA,CAAAsB,IAAA;MAAA,MAAAC,OAAA,GAAAvB,2DAAA;MAAA,OAASA,yDAAA,CAAAuB,OAAA,CAAAG,WAAA,CAAAC,KAAA,EAAmB;IAAA,EAAC;IACnC3B,uDAAA,kBAAyC;IAC3CA,0DAAA,EAAS;;;;;IACTA,4DAAA,iBAA+E;IAC7EA,uDAAA,mBAAmD;IACrDA,0DAAA,EAAS;;;;;IACTA,4DAAA,gBAAuC;IAAAA,oDAAA,4CAAgC;IAAAA,0DAAA,EAAY;;;;;IAQnFA,4DAAA,gBAAmE;IACjEA,oDAAA,8BACF;IAAAA,0DAAA,EAAY;;;;;IACZA,4DAAA,gBAA8D;IAC5DA,oDAAA,gDACF;IAAAA,0DAAA,EAAY;;;;;IAQZA,4DAAA,gBAAwD;IACtDA,oDAAA,qBACF;IAAAA,0DAAA,EAAY;;;;;IACZA,4DAAA,gBAAmD;IACjDA,oDAAA,uCACF;IAAAA,0DAAA,EAAY;;;;;IAOdA,4DAAA,iBAAsG;IACpGA,oDAAA,sBACF;IAAAA,0DAAA,EAAS;;;;;IACTA,4DAAA,iBAAsG;IACpGA,oDAAA,uBACF;IAAAA,0DAAA,EAAS;;;ADzDb,MAqBa4B,0BAA0B;EAuBrCC,YACkCC,QAA0B,EAClDC,SAAmD,EACnDC,EAAe,EACfC,cAA+B,EAC/BC,WAAyB,EACzBC,YAA0B,EAC1BC,QAAqB;IANG,KAAAN,QAAQ,GAARA,QAAQ;IAChC,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,QAAQ,GAARA,QAAQ;IA7BjB,KAAA3B,EAAE,GAAG,CAAC;IACP,KAAA4B,MAAM,GAAS,CAAC;IAChB,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,SAAS,GAAU,CAAC;IACpB,KAAAC,QAAQ,GAAe,EAAE;IACzB,KAAAC,KAAK,GAAY,EAAE;IACnB,KAAAC,WAAW,GAAW,EAAE;IAGxB,KAAAnC,IAAI,GAAG,IAAI,CAACyB,EAAE,CAACW,KAAK,CAAC;MACnBlC,EAAE,EAAE,CAAC,CAAC,EAAE1B,sDAAU,CAAC6D,QAAQ,CAAC;MAC5BC,OAAO,EAAE,CAAC,IAAI,CAACf,QAAQ,EAAEe,OAAO,IAAI,EAAE,CAAC;MACvCC,IAAI,EAAE,CAAC,IAAI,CAAChB,QAAQ,EAAEgB,IAAI,IAAI,EAAE,CAAC;MACjCC,UAAU,EAAE,CAAC,IAAI,CAACjB,QAAQ,EAAEiB,UAAU,IAAI,EAAE,CAAC;MAC7CC,OAAO,EAAE,CAAC,IAAI,CAAClB,QAAQ,EAAEkB,OAAO,IAAI,EAAE,CAAC;MACvCC,EAAE,EAAE,CAAC,IAAI,CAACnB,QAAQ,EAAEmB,EAAE,IAAG,EAAE,EAAC,CAAClE,sDAAU,CAAC6D,QAAQ,EAAE7D,sDAAU,CAACmE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACrEC,aAAa,EAAE,CAAC,IAAI,CAACrB,QAAQ,EAAEqB,aAAa,EAAC,CAACpE,sDAAU,CAAC6D,QAAQ,EAAE7D,sDAAU,CAACmE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACtFE,SAAS,EAAE,CAAC,IAAI,CAACtB,QAAQ,EAAEsB,SAAS,EAAE,CAACrE,sDAAU,CAAC6D,QAAQ,CAAC,CAAC;MAC5DS,IAAI,EAAE,CAAC,IAAI,CAACvB,QAAQ,EAAEuB,IAAI,EAAE,CAACtE,sDAAU,CAAC6D,QAAQ,CAAC;KAClD,CAAC;IACF,KAAAU,IAAI,GAAwB,QAAQ;IA0FpC,KAAA5B,WAAW,GAAuB,IAAI5C,8DAAkB,CAAC,EAAE,EAAE,CAACC,sDAAU,CAAC6D,QAAQ,CAAC,CAAC;IAOnF,KAAA9B,QAAQ,GAAuB,IAAIhC,8DAAkB,CAAC,EAAE,EAAE,CAACC,sDAAU,CAAC6D,QAAQ,CAAC,CAAC;IAChF,KAAAW,aAAa,GAAG,KAAK;EAxFlB;EACHC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACvB,cAAc,CAACuB,WAAW,EAAE,CAACC,IAAI,CAC3C5D,yCAAG,CAAE6D,MAAW,IAAI;MAClB,IAAI,CAAClB,QAAQ,GAAGkB,MAAM,CAACC,IAAI;MAE3B,OAAO,IAAI,CAACnB,QAAQ,CAAC3C,GAAG,CAAEmD,OAAO,IAAK,IAAIlD,qDAAO,CAACkD,OAAO,CAAC,CAAC;IAC7D,CAAC,CAAC,CACH;EACH;EACAY,QAAQA,CAAA;IACN,OAAO,IAAI,CAAC1B,WAAW,CAAC0B,QAAQ,EAAE,CAACH,IAAI,CACrC5D,yCAAG,CAAE6D,MAAW,IAAI;MAClB,IAAI,CAACjB,KAAK,GAAGiB,MAAM,CAACC,IAAI;MAExB,OAAO,IAAI,CAAClB,KAAK,CAAC5C,GAAG,CAAEiD,IAAI,IAAK,IAAI/C,+CAAI,CAAC+C,IAAI,CAAC,CAAC;IACjD,CAAC,CAAC,CACH;EACH;EACAe,QAAQA,CAAA;IACN,IAAI,CAACL,WAAW,EAAE,CAACM,SAAS,CAACtB,QAAQ,IAAG;MACtC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACoB,QAAQ,EAAE,CAACE,SAAS,CAACrB,KAAK,IAAG;QAChC,IAAI,CAACA,KAAK,GAAGA,KAAK;QAClB,IAAI,IAAI,CAACX,QAAQ,EAAE;UACjB,IAAI,CAACwB,IAAI,GAAG,QAAQ;SACrB,MAAM;UACL,IAAI,CAACxB,QAAQ,GAAG,EAAU;;QAE5B,IAAI,CAACvB,IAAI,CAACwD,UAAU,CAAC,IAAI,CAACjC,QAAQ,CAAC;MACrC,CAAC,CAAC;IACJ,CAAC,CAAC;EAEJ;EACAkC,IAAIA,CAAA;IACF,IAAI,IAAI,CAACV,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAI,CAACW,UAAU,EAAE;MACjB,IAAIC,IAAI,GAAG,IAAIhF,+CAAI,CAAC,IAAI,CAACqB,IAAI,CAACG,KAAK,CAAC;KAErC,MAAM,IAAI,IAAI,CAAC4C,IAAI,KAAK,QAAQ,EAAE;MACjC,IAAI,CAACa,UAAU,EAAE;;EAErB;EACAF,UAAUA,CAAA;IACR,IAAI,CAAC1D,IAAI,CAAC6D,GAAG,CAAC,YAAY,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAAC9B,SAAS,CAAC;IACrD,IAAI,CAAChC,IAAI,CAAC6D,GAAG,CAAC,SAAS,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAAC3B,WAAW,CAAC;IACpD,IAAI,CAACnC,IAAI,CAAC6D,GAAG,CAAC,SAAS,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAAChC,MAAM,CAAC;IAC/C,IAAI,CAAC9B,IAAI,CAAC6D,GAAG,CAAC,MAAM,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAAC/B,QAAQ,CAAC;IAC9C,MAAM4B,IAAI,GAAG,IAAI,CAAC3D,IAAI,CAACG,KAAK;IAG5B,IAAI,CAACqB,SAAS,CAACuC,KAAK,CAACJ,IAAI,CAAC;EAC5B;EACAC,UAAUA,CAAA;IACR,MAAMI,KAAK,GAAG,IAAI,CAAChE,IAAI,CAACG,KAAK;IAC7B,MAAMyC,aAAa,GAAGqB,MAAM,CAAC,IAAI,CAACjE,IAAI,CAAC6D,GAAG,CAAC,eAAe,CAAC,EAAE1D,KAAK,IAAI,CAAC,CAAC;IAExE,IAAI,CAAC,IAAI,CAACoB,QAAQ,EAAE;MAClB,MAAM,IAAI2C,KAAK,CACb,uDAAuD,CACxD;;IAGHF,KAAK,CAAC9D,EAAE,GAAG,IAAI,CAACqB,QAAQ,CAACrB,EAAE;IAC3B,IAAI,CAACsB,SAAS,CAACuC,KAAK,CAACC,KAAK,CAAC;EAC7B;EAEAG,YAAYA,CAAA;IACV,OAAO,IAAI,CAACpB,IAAI,KAAK,QAAQ;EAC/B;EAEAqB,YAAYA,CAAA;IACV,OAAO,IAAI,CAACrB,IAAI,KAAK,QAAQ;EAC/B;EACAsB,kBAAkBA,CAACnE,EAAU;IAC3B,IAAI,CAAC8B,SAAS,GAAC9B,EAAE;IACjB,MAAMuC,OAAO,GAAG,IAAI,CAACR,QAAQ,CAACqC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrE,EAAE,KAAKA,EAAE,CAAC;IACpD,IAAI,CAACiC,WAAW,GAAGM,OAAO,GAAGA,OAAO,CAAC9B,IAAI,GAAG,EAAE;IAC9C,OAAO8B,OAAO,GAAGA,OAAO,CAAC9B,IAAI,GAAG,EAAE;EACpC;EAEAF,eAAeA,CAACP,EAAU;IACxB,IAAI,CAAC4B,MAAM,GAAC5B,EAAE;IACd,MAAMqC,IAAI,GAAG,IAAI,CAACL,KAAK,CAACoC,IAAI,CAACE,CAAC,IAAIA,CAAC,CAACtE,EAAE,KAAKA,EAAE,CAAC;IAC9C,IAAI,CAAC6B,QAAQ,GAAGQ,IAAI,GAAGA,IAAI,CAAC5B,IAAI,GAAG,EAAE;IACrC,OAAO4B,IAAI,GAAGA,IAAI,CAAC5B,IAAI,GAAG,EAAE;EAC9B;EAAC,QAAA8D,CAAA;qBArHUpD,0BAA0B,EAAA5B,+DAAA,CAwB3BhB,qEAAe,GAAAgB,+DAAA,CAAAkF,kEAAA,GAAAlF,+DAAA,CAAAoF,uDAAA,GAAApF,+DAAA,CAAAsF,+EAAA,GAAAtF,+DAAA,CAAAwF,sEAAA,GAAAxF,+DAAA,CAAA0F,sEAAA,GAAA1F,+DAAA,CAAA4F,qEAAA;EAAA;EAAA,QAAAE,EAAA;UAxBdlE,0BAA0B;IAAAmE,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAjG,iEAAA;IAAAmG,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,oCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QClDvCxG,4DAAA,cAA6C;QAAvCA,wDAAA,sBAAA0G,6DAAA;UAAA,OAAYD,GAAA,CAAAzC,IAAA,EAAM;QAAA,EAAC;QACvBhE,4DAAA,aAAgD;QAC9CA,wDAAA,IAAA4G,wCAAA,gBAEK;QACL5G,wDAAA,IAAA6G,wCAAA,gBAEK;QACL7G,4DAAA,gBAA8E;QAC5EA,uDAAA,kBAAyC;QAC3CA,0DAAA,EAAS;QAGXA,uDAAA,qBAA+C;QAE/CA,4DAAA,4BAA0C;QAExCA,wDAAA,IAAA8G,oDAAA,4BAGiB;QACjB9G,wDAAA,IAAA+G,oDAAA,4BAMiB;QAGjB/G,4DAAA,yBAAyC;QAC5BA,oDAAA,4BAAoB;QAAAA,0DAAA,EAAY;QAC3CA,uDAAA,gBAAuH;QACvHA,4DAAA,kCAA0C;QACxCA,wDAAA,KAAAgH,iDAAA,yBAMa;QACfhH,0DAAA,EAAmB;QACnBA,wDAAA,KAAAiH,6CAAA,qBAES;QACTjH,wDAAA,KAAAkH,6CAAA,qBAES;QACTlH,wDAAA,KAAAmH,gDAAA,wBAAmF;QACrFnH,0DAAA,EAAiB;QAGjBA,4DAAA,0BAAkC;QACrBA,oDAAA,qBAAQ;QAAAA,0DAAA,EAAY;QAC/BA,uDAAA,iBAAiE;QAEjEA,wDAAA,KAAAoH,gDAAA,wBAEY;QACZpH,wDAAA,KAAAqH,gDAAA,wBAEY;QACdrH,0DAAA,EAAiB;QAGjBA,4DAAA,0BAAkC;QACrBA,oDAAA,qBAAa;QAAAA,0DAAA,EAAY;QACpCA,uDAAA,iBAAsD;QAEtDA,wDAAA,KAAAsH,gDAAA,wBAEY;QACZtH,wDAAA,KAAAuH,gDAAA,wBAEY;QACdvH,0DAAA,EAAiB;QAInBA,4DAAA,8BAAgC;QACoBA,oDAAA,eAAO;QAAAA,0DAAA,EAAS;QAClEA,wDAAA,KAAAwH,6CAAA,qBAES;QACTxH,wDAAA,KAAAyH,6CAAA,qBAES;QACXzH,0DAAA,EAAqB;;;;;;;;QAvFGA,wDAAA,cAAAyG,GAAA,CAAAlG,IAAA,CAAkB;QAEnCP,uDAAA,GAA4B;QAA5BA,wDAAA,SAAAyG,GAAA,CAAAlG,IAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,KAAA,CAA4B;QAG5BV,uDAAA,GAA6B;QAA7BA,wDAAA,UAAAyG,GAAA,CAAAlG,IAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,KAAA,CAA6B;QAYCV,uDAAA,GAAmB;QAAnBA,wDAAA,SAAAyG,GAAA,CAAAlD,aAAA,CAAmB;QAInBvD,uDAAA,GAAmB;QAAnBA,wDAAA,SAAAyG,GAAA,CAAAlD,aAAA,CAAmB;QAW7CvD,uDAAA,GAA2B;QAA3BA,wDAAA,gBAAAyG,GAAA,CAAA/E,WAAA,CAA2B,oBAAAX,GAAA,WAAA0F,GAAA,CAAA7B,kBAAA,CAAA6B,GAAA,CAAA/E,WAAA,CAAAhB,KAAA;QAEAV,uDAAA,GAAW;QAAXA,wDAAA,YAAAyG,GAAA,CAAAjE,QAAA,CAAW;QAQNxC,uDAAA,GAAuB;QAAvBA,wDAAA,SAAAyG,GAAA,CAAA/E,WAAA,CAAAhB,KAAA,CAAuB;QAGrDV,uDAAA,GAAwB;QAAxBA,wDAAA,UAAAyG,GAAA,CAAA/E,WAAA,CAAAhB,KAAA,CAAwB;QAGrBV,uDAAA,GAAyB;QAAzBA,wDAAA,SAAAyG,GAAA,CAAA/E,WAAA,CAAAgG,OAAA,CAAyB;QAQzB1H,uDAAA,GAAqD;QAArDA,wDAAA,UAAA2H,QAAA,GAAAlB,GAAA,CAAAlG,IAAA,CAAA6D,GAAA,oCAAAuD,QAAA,CAAAC,QAAA,aAAqD;QAGrD5H,uDAAA,GAAgD;QAAhDA,wDAAA,UAAA6H,QAAA,GAAApB,GAAA,CAAAlG,IAAA,CAAA6D,GAAA,oCAAAyD,QAAA,CAAAD,QAAA,QAAgD;QAUhD5H,uDAAA,GAA0C;QAA1CA,wDAAA,UAAA8H,QAAA,GAAArB,GAAA,CAAAlG,IAAA,CAAA6D,GAAA,yBAAA0D,QAAA,CAAAF,QAAA,aAA0C;QAG1C5H,uDAAA,GAAqC;QAArCA,wDAAA,UAAA+H,QAAA,GAAAtB,GAAA,CAAAlG,IAAA,CAAA6D,GAAA,yBAAA2D,QAAA,CAAAH,QAAA,QAAqC;QAS1C5H,uDAAA,GAA6C;QAA7CA,wDAAA,SAAAyG,GAAA,CAAA/B,YAAA,MAAA+B,GAAA,CAAAlG,IAAA,CAAAmH,OAAA,UAA6C;QAG7C1H,uDAAA,GAA6C;QAA7CA,wDAAA,SAAAyG,GAAA,CAAA9B,YAAA,MAAA8B,GAAA,CAAAlG,IAAA,CAAAmH,OAAA,UAA6C;;;mBDjDtD7I,+DAAmB,EAAAuG,4DAAA,EAAAA,gEAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,6DAAA,EAAAA,gEAAA,EAAAA,8DAAA,EAAAA,2DAAA,EACnBnG,qEAAe,EAAAiG,oEAAA,EAAAA,oEAAA,EAAAA,sEAAA,EAAAA,sEAAA,EACfxF,kDAAI,EACJF,sEAAe,EAAAoJ,gEAAA,EAAAA,oEAAA,EACfrJ,kEAAa,EACbD,kEAAa,EAAAyJ,4DAAA,EACb1J,wEAAgB,EAAA4J,kEAAA,EAChB7J,6EAAkB,EAAA+J,uEAAA,EAAAA,mEAAA,EAAAA,mEAAA,EAAAA,oEAAA,EAAAA,oEAAA,EAClBhK,oEAAc,EAAAsK,8DAAA,EAEd9J,kFAAqB,EAAAgK,4EAAA,EAAAE,8DAAA,EAAAF,mFAAA,EACrB/J,oEAAe,EACfH,qDAAO;IAAAuK,MAAA;EAAA;;;;;;;;;;;;;;;;AE/CL,MAAOlK,OAAO;EAMlB+B,YAAYmB,OAAY;IACtB,IAAI,CAACvC,EAAE,GAAGuC,OAAO,CAACvC,EAAE;IACpB,IAAI,CAACS,IAAI,GAAG8B,OAAO,CAAC9B,IAAI;IACxB,IAAI,CAAC+I,OAAO,GAAGjH,OAAO,CAACiH,OAAO;IAC9B,IAAI,CAACC,eAAe,GAAGlH,OAAO,CAACkH,eAAe;EAChD;;;;;;;;;;;;;;;ACXI,MAAOhL,IAAI;EAgBf2C,YAAYqC,IAAS;IACnB,MAAMiG,KAAK,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC;IAClC,IAAI,CAAC5J,EAAE,GAAGyD,IAAI,CAACzD,EAAE;IACjB,IAAI,CAACoC,OAAO,GAAGqB,IAAI,CAACrB,OAAO;IAC3B,IAAI,CAACE,UAAU,GAAGmB,IAAI,CAACnB,UAAU;IACjC,IAAI,CAACI,aAAa,GAAGe,IAAI,CAACf,aAAa;IACvC,IAAI,CAACC,SAAS,GAAGc,IAAI,CAACd,SAAS,GAAGc,IAAI,CAACd,SAAS,GAAG+G,KAAK,CAACG,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC;IACtF,IAAI,CAACtH,EAAE,GAAGiB,IAAI,CAACjB,EAAE;IACjB,IAAI,CAACuH,MAAM,GAAGtG,IAAI,CAACjB,EAAE,GAACiB,IAAI,CAACf,aAAa;IACxC,IAAI,CAACH,OAAO,GAAIkB,IAAI,CAAClB,OAAO,IAAIkB,IAAI,CAAClB,OAAO,CAAC9B,IAAI,GAAIgD,IAAI,CAAClB,OAAO,CAAC9B,IAAI,GAAKgD,IAAI,CAAClB,OAAO,GAAGkB,IAAI,CAAClB,OAAO,GAAE,EAAE;IAC1G,IAAI,CAACF,IAAI,GAAIoB,IAAI,CAACpB,IAAI,IAAIoB,IAAI,CAACpB,IAAI,CAAC5B,IAAI,GAAIgD,IAAI,CAACpB,IAAI,CAAC5B,IAAI,GAAIgD,IAAI,CAACpB,IAAI,GAAIoB,IAAI,CAACpB,IAAI,GAAG,EAAE;IACzF,IAAI,CAAC2H,QAAQ,GAAG,IAAI,CAACC,UAAU,CAAC,IAAIN,IAAI,CAAC,IAAI,CAAChH,SAAS,CAAC,CAAC;IACzD,IAAI,CAACuH,SAAS,GAAGzG,IAAI,CAACyG,SAAS;IAC/B,IAAI,CAACtH,IAAI,GAAGa,IAAI,CAACb,IAAI;EAGvB;EACQqH,UAAUA,CAACE,IAAU;IAC3B,MAAMC,GAAG,GAAGD,IAAI,CAACE,OAAO,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACtD,MAAMC,UAAU,GAAG,CACjB,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACpD,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAClE;IACD,MAAMC,KAAK,GAAGD,UAAU,CAACL,IAAI,CAACO,QAAQ,EAAE,CAAC;IACzC,MAAMC,IAAI,GAAGR,IAAI,CAACS,WAAW,EAAE,CAACN,QAAQ,EAAE;IAC1C,OAAO,GAAGF,GAAG,IAAIK,KAAK,IAAIE,IAAI,EAAE;EAClC;;;;;;;;;;;;;;;AC1CI,MAAOrL,IAAI;EAKf8B,YAAYiB,IAAU;IACpB,IAAIA,IAAI,EAAE;MACR,IAAI,CAACrC,EAAE,GAAGqC,IAAI,CAACrC,EAAE;MACjB,IAAI,CAACS,IAAI,GAAG4B,IAAI,CAAC5B,IAAI;MACrB,IAAI,CAACoK,OAAO,GAAGxI,IAAI,CAACwI,OAAO;KAC5B,MAAM;MACL,IAAI,CAAC7K,EAAE,GAAG,CAAC;MACX,IAAI,CAACS,IAAI,GAAG,EAAE;MACd,IAAI,CAACoK,OAAO,GAAG,EAAE;;EAErB;;;;;;;;;;;;;;;;;;;;ACd2D;;;;;AAQ7D,MAGa/F,eAAe;EAE1B;EAEA1D,YACU2J,UAAsB,EACtBC,MAAc,EACdC,YAAiC;IAFjC,KAAAF,UAAU,GAAVA,UAAU;IACV,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IANtB,KAAAC,QAAQ,GAAGJ,kEAAW,CAACI,QAAQ;EAO7B;EAIFnI,WAAWA,CAAA;IACT,OAAO,IAAI,CAACgI,UAAU,CAACpH,GAAG,CAAC,GAAG,IAAI,CAACuH,QAAQ,WAAW,EAAE;MAAC,GAAI,IAAI,CAACD,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAErG;EACAC,oBAAoBA,CAAC/I,IAAS;IAC5B,OAAO,IAAI,CAAC0I,UAAU,CAACpH,GAAG,CAAC,GAAG,IAAI,CAACuH,QAAQ,SAAS,GAAC7I,IAAI,CAACrC,EAAE,GAAC,uBAAuB,EAAE;MAAC,GAAI,IAAI,CAACiL,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAEnI;EAEAE,UAAUA,CAAC9I,OAAe;IACxB,OAAO,IAAI,CAACwI,UAAU,CAACO,IAAI,CAAC,GAAG,IAAI,CAACJ,QAAQ,WAAW,EAAE3I,OAAO,EAAC;MAAC,GAAI,IAAI,CAAC0I,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAE9G;EAEAI,aAAaA,CAAChJ,OAAe;IAC3B,OAAO,IAAI,CAACwI,UAAU,CAACS,GAAG,CAAC,GAAG,IAAI,CAACN,QAAQ,YAAY,GAAC3I,OAAO,CAACvC,EAAE,EAAEuC,OAAO,EAAC;MAAC,GAAI,IAAI,CAAC0I,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAEzH;EAEAM,yBAAyBA,CAAClJ,OAAc,EAACF,IAAW;IAClD,OAAO,IAAI,CAAC0I,UAAU,CAACpH,GAAG,CAAC,GAAG,IAAI,CAACuH,QAAQ,SAAS,GAAC3I,OAAO,GAAC,WAAW,GAACF,IAAI,GAAC,gCAAgC,EAAC;MAAC,GAAI,IAAI,CAAC4I,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAE5J;EAAC,QAAA5G,CAAA;qBAlCUO,eAAe,EAAAvF,sDAAA,CAAAkF,4DAAA,GAAAlF,sDAAA,CAAAoF,mDAAA,GAAApF,sDAAA,CAAAsF,qFAAA;EAAA;EAAA,QAAAQ,EAAA;WAAfP,eAAe;IAAAgH,OAAA,EAAfhH,eAAe,CAAAiH,IAAA;IAAAC,UAAA,EAFd;EAAM;;;;;;;;;;;;;;;;;;;;;ACN2C;;;;;AAO/D,MAGa9G,YAAY;EAEvB;EAEA9D,YACU2J,UAAsB,EACtBC,MAAc,EACdC,YAAiC;IAFjC,KAAAF,UAAU,GAAVA,UAAU;IACV,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IANtB,KAAAC,QAAQ,GAAGJ,yEAAW,CAACI,QAAQ;EAO7B;EAEFe,YAAYA,CAACC,MAAc;IACzB,OAAO,IAAI,CAACnB,UAAU,CAACpH,GAAG,CAAC,GAAG,IAAI,CAACuH,QAAQ,UAAUgB,MAAM,QAAQ,EAAE;MAAC,GAAI,IAAI,CAACjB,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAClH;EAEAgB,gBAAgBA,CAACC,SAAiB;IAChC,OAAO,IAAI,CAACrB,UAAU,CAACpH,GAAG,CAAC,GAAG,IAAI,CAACuH,QAAQ,aAAakB,SAAS,OAAO,EAAE;MAAC,GAAI,IAAI,CAACnB,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EACvH;EAEAkB,QAAQA,CAAC5I,IAAS;IAChB,OAAO,IAAI,CAACsH,UAAU,CAACO,IAAI,CAAC,GAAG,IAAI,CAACJ,QAAQ,QAAQ,EAAEzH,IAAI,EAAC;MAAC,GAAI,IAAI,CAACwH,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAExG;EACAzH,UAAUA,CAACD,IAAS;IAClB,OAAO,IAAI,CAACsH,UAAU,CAACS,GAAG,CAAC,GAAG,IAAI,CAACN,QAAQ,SAAS,GAACzH,IAAI,CAACzD,EAAE,EAAEyD,IAAI,EAAC;MAAC,GAAI,IAAI,CAACwH,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAEhH;EACAmB,UAAUA,CAAC7I,IAAS;IAClB,OAAO,IAAI,CAACsH,UAAU,CAACwB,MAAM,CAAC,GAAG,IAAI,CAACrB,QAAQ,SAAS,GAACzH,IAAI,CAACzD,EAAE,EAAE;MAAC,GAAI,IAAI,CAACiL,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAE9G;EAAC,QAAA5G,CAAA;qBA7BUW,YAAY,EAAA3F,sDAAA,CAAAkF,4DAAA,GAAAlF,sDAAA,CAAAoF,mDAAA,GAAApF,sDAAA,CAAAsF,qFAAA;EAAA;EAAA,QAAAQ,EAAA;WAAZH,YAAY;IAAA4G,OAAA,EAAZ5G,YAAY,CAAA6G,IAAA;IAAAC,UAAA,EAFX;EAAM;;;;;;;;;;;;;;;;;;;;;ACT2C;;;;;AAK/D,MAGahH,YAAY;EAEvB;EAEA5D,YACU2J,UAAsB,EACtBC,MAAc,EACdC,YAAiC;IAFjC,KAAAF,UAAU,GAAVA,UAAU;IACV,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IANtB,KAAAC,QAAQ,GAAGJ,yEAAW,CAACI,QAAQ;EAO7B;EAEF/H,QAAQA,CAAA;IACN,OAAO,IAAI,CAAC4H,UAAU,CAACpH,GAAG,CAAC,GAAG,IAAI,CAACuH,QAAQ,QAAQ,EAAE;MAAC,GAAI,IAAI,CAACD,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAClG;EAEAqB,OAAOA,CAACnK,IAAS;IACf,OAAO,IAAI,CAAC0I,UAAU,CAACO,IAAI,CAAC,GAAG,IAAI,CAACJ,QAAQ,QAAQ,EAAE7I,IAAI,EAAC;MAAC,GAAI,IAAI,CAAC4I,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAExG;EAEAsB,UAAUA,CAACpK,IAAS;IAClB,OAAO,IAAI,CAAC0I,UAAU,CAACS,GAAG,CAAC,GAAG,IAAI,CAACN,QAAQ,SAAS,GAAC7I,IAAI,CAACrC,EAAE,EAAEqC,IAAI,EAAC;MAAC,GAAI,IAAI,CAAC4I,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAEhH;EAEAuB,OAAOA,CAAC1M,EAAS;IACf,OAAO,IAAI,CAAC+K,UAAU,CAACpH,GAAG,CAAC,GAAG,IAAI,CAACuH,QAAQ,SAAS,GAAClL,EAAE,EAAE;MAAC,GAAI,IAAI,CAACiL,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAEtG;EAEAwB,aAAaA,CAACtK,IAAS;IACrB,OAAO,IAAI,CAAC0I,UAAU,CAACpH,GAAG,CAAC,GAAG,IAAI,CAACuH,QAAQ,SAAS,GAAC7I,IAAI,CAACrC,EAAE,GAAC,SAAS,EAAE;MAAC,GAAI,IAAI,CAACiL,YAAY,CAACE,gBAAgB;IAAE,CAAC,CAAC;EAErH;EAAC,QAAA5G,CAAA;qBAhCUS,YAAY,EAAAzF,sDAAA,CAAAkF,4DAAA,GAAAlF,sDAAA,CAAAoF,mDAAA,GAAApF,sDAAA,CAAAsF,qFAAA;EAAA;EAAA,QAAAQ,EAAA;WAAZL,YAAY;IAAA8G,OAAA,EAAZ9G,YAAY,CAAA+G,IAAA;IAAAC,UAAA,EAFX;EAAM","sources":["./src/app/components/sales/sales-create-update/sales-create-update.component.ts","./src/app/components/sales/sales-create-update/sales-create-update.component.html","./src/app/models/products.ts","./src/app/models/sales.ts","./src/app/models/sites.ts","./src/app/services/product/products.service.ts","./src/app/services/sale/sales.service.ts","./src/app/services/site/sites.service.ts"],"sourcesContent":["\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, ReactiveFormsModule, UntypedFormControl, Validators } from '@angular/forms';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef\r\n} from '@angular/material/dialog';\r\nimport { Sale } from '../../../models/sales';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { AsyncPipe, NgForOf, NgIf } from '@angular/common';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { map, Observable, startWith } from 'rxjs';\r\nimport { Product } from '../../../models/products';\r\nimport { Client } from '../../../models/clients';\r\nimport { ProductsService } from '../../../services/product/products.service';\r\nimport { Account } from '../../../models/accounts';\r\nimport { Site } from '../../../models/sites';\r\nimport { SitesService } from '../../../services/site/sites.service';\r\nimport { SalesService } from '../../../services/sale/sales.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { defaults } from 'autoprefixer';\r\n\r\n@Component({\r\n  selector: 'vex-sales-create-update',\r\n  templateUrl: './sales-create-update.component.html',\r\n  styleUrls: ['./sales-create-update.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    AsyncPipe,\r\n    MatAutocompleteModule,\r\n    MatOptionModule,\r\n    NgForOf\r\n  ]\r\n})\r\nexport class SalesCreateUpdateComponent implements OnInit {\r\n   id = 0;\r\n  siteId: number=0;\r\n  siteName: string =\"\";\r\n  productId : number=0;\r\n  products:  Product[] = [] ;\r\n  sites:  Site[] = [] ;\r\n  productName: string = \"\";\r\n\r\n\r\n  form = this.fb.group({\r\n    id: [0, Validators.required],\r\n    site_id: [this.defaults?.site_id || ''],\r\n    site: [this.defaults?.site || ''],\r\n    product_id: [this.defaults?.product_id || ''],\r\n    product: [this.defaults?.product || ''],\r\n    pU: [this.defaults?.pU|| '',[Validators.required, Validators.min(1)]],\r\n    quantity_sold: [this.defaults?.quantity_sold,[Validators.required, Validators.min(1)]],\r\n    sale_date: [this.defaults?.sale_date, [Validators.required]],\r\n    step: [this.defaults?.step, [Validators.required]]\r\n  });\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public defaults: Sale | undefined,\r\n    private dialogRef: MatDialogRef<SalesCreateUpdateComponent>,\r\n    private fb: FormBuilder,\r\n    private productService: ProductsService,\r\n    private siteService: SitesService,\r\n    private salesService: SalesService,\r\n    private snackbar: MatSnackBar\r\n  ) {}\r\n  getProducts() {\r\n    return this.productService.getProducts().pipe(\r\n      map((result: any) => {\r\n        this.products = result.data;\r\n\r\n        return this.products.map((product) => new Product(product));\r\n      })\r\n    );\r\n  }\r\n  getSites() {\r\n    return this.siteService.getSites().pipe(\r\n      map((result: any) => {\r\n        this.sites = result.data;\r\n\r\n        return this.sites.map((site) => new Site(site));\r\n      })\r\n    );\r\n  }\r\n  ngOnInit() {\r\n    this.getProducts().subscribe(products => {\r\n      this.products = products;\r\n      this.getSites().subscribe(sites => {\r\n        this.sites = sites;\r\n        if (this.defaults) {\r\n          this.mode = 'update';\r\n        } else {\r\n          this.defaults = {} as Sale;\r\n        }\r\n        this.form.patchValue(this.defaults);\r\n      });\r\n    });\r\n\r\n  }\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createSale();\r\n      let sale = new Sale(this.form.value);\r\n\r\n    } else if (this.mode === 'update') {\r\n      this.updateSale();\r\n    }\r\n  }\r\n  createSale() {\r\n    this.form.get('product_id')?.setValue(this.productId);\r\n    this.form.get('product')?.setValue(this.productName);\r\n    this.form.get('site_id')?.setValue(this.siteId);\r\n    this.form.get('site')?.setValue(this.siteName);\r\n    const sale = this.form.value;\r\n\r\n\r\n    this.dialogRef.close(sale);\r\n  }\r\n  updateSale() {\r\n    const sales = this.form.value;\r\n    const quantity_sold = Number(this.form.get('quantity_sold')?.value || 0);\r\n\r\n    if (!this.defaults) {\r\n      throw new Error(\r\n        'sales ID does not exist, this roles cannot be updated'\r\n      );\r\n    }\r\n\r\n    sales.id = this.defaults.id;\r\n    this.dialogRef.close(sales);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n  getProductNameById(id: number): string {\r\n    this.productId=id;\r\n    const product = this.products.find(p => p.id === id);\r\n    this.productName = product ? product.name : '';\r\n    return product ? product.name : '';\r\n  }\r\n  productCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\r\n  getSiteNameById(id: number): string {\r\n    this.siteId=id;\r\n    const site = this.sites.find(s => s.id === id);\r\n    this.siteName = site ? site.name : '';\r\n    return site ? site.name : '';\r\n  }\r\n  siteCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\r\n  showSiteField = false;\r\n}\r\n\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div class=\"flex items-center\" mat-dialog-title>\r\n    <h2 *ngIf=\"form.controls.id.value\" class=\"headline m-0 flex-auto\">\r\n      {{ form.controls.id.value }}\r\n    </h2>\r\n    <h2 *ngIf=\"!form.controls.id.value\" class=\"headline m-0 flex-auto\">\r\n      Nouvelles Ventes\r\n    </h2>\r\n    <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n      <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-divider class=\"text-border\"></mat-divider>\r\n\r\n  <mat-dialog-content class=\"flex flex-col\">\r\n    <!-- Code pour le champ \"Site\" -->\r\n    <mat-form-field class=\"flex-auto\" *ngIf=\"showSiteField\">\r\n      <input formControlName=\"client_id\" matInput required min=1 />\r\n      <mat-icon matIconPrefix svgIcon=\"mat:edit\"></mat-icon>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"flex-auto\" *ngIf=\"showSiteField\">\r\n      <mat-label>Site</mat-label>\r\n      <input [formControl]=\"siteCtrl\" [matAutocomplete]=\"auto\" matInput [value]=\"getSiteNameById(siteCtrl.value)\" />\r\n\r\n      <input formControlName=\"site_id\" matInput required min=1 />\r\n      <mat-icon matIconPrefix svgIcon=\"mat:edit\"></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <!-- Code pour le champ \"Selectionner Produit\" -->\r\n    <mat-form-field class=\"w-300 max-w-full\">\r\n      <mat-label>Selectionner Produit</mat-label>\r\n      <input [formControl]=\"productCtrl\" [matAutocomplete]=\"auto\" matInput [value]=\"getProductNameById(productCtrl.value)\" />\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let product of products\" [value]=\"product.id\">\r\n          <span class=\"flex items-center\">\r\n            <span class=\"flex flex-col\">\r\n              {{ product.name }}\r\n            </span>\r\n          </span>\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n      <button (click)=\"productCtrl.reset()\" *ngIf=\"productCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n      </button>\r\n      <button *ngIf=\"!productCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n        <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n      </button>\r\n      <mat-error *ngIf=\"productCtrl.invalid\">Veuillez sélectionner un produit</mat-error>\r\n    </mat-form-field>\r\n\r\n    <!-- Code pour le champ \"Quantité\" -->\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Quantité</mat-label>\r\n      <input formControlName=\"quantity_sold\" matInput required min=1 />\r\n      <mat-icon matIconPrefix svgIcon=\"mat:number\"></mat-icon>\r\n      <mat-error *ngIf=\"form.get('quantity_sold')?.hasError('required')\">\r\n        Quantité requise\r\n      </mat-error>\r\n      <mat-error *ngIf=\"form.get('quantity_sold')?.hasError('min')\">\r\n        Quantité doit être au moins 1\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <!-- Code pour le champ \"Prix Unitaire\" -->\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Prix Unitaire</mat-label>\r\n      <input formControlName=\"pU\" matInput required min=1 />\r\n      <mat-icon matIconPrefix svgIcon=\"mat:number\"></mat-icon>\r\n      <mat-error *ngIf=\"form.get('pU')?.hasError('required')\">\r\n        Prix requise\r\n      </mat-error>\r\n      <mat-error *ngIf=\"form.get('pU')?.hasError('min')\">\r\n        Prix doit être au moins 1\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">Annuler</button>\r\n    <button *ngIf=\"isCreateMode()   && form.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\">\r\n      Ajouter Vente\r\n    </button>\r\n    <button *ngIf=\"isUpdateMode()   && form.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\">\r\n      Modifier Vente\r\n    </button>\r\n  </mat-dialog-actions>\r\n</form>\r\n","export class Product {\r\n  id: number;\r\n  name: string;\r\n  quality: string;\r\n  conversion_rate: number;\r\n\r\n  constructor(product: any) {\r\n    this.id = product.id;\r\n    this.name = product.name;\r\n    this.quality = product.quality;\r\n    this.conversion_rate = product.conversion_rate;\r\n  }\r\n\r\n}\r\n","export class Sale {\r\n\r\n  id: number;\r\n  site_id: number;\r\n  step: number;\r\n  client_id: number;\r\n  invoice_id!: number;\r\n  product_id: number;\r\n  quantity_sold: number;\r\n  sale_date: string;\r\n  pU:number;\r\n  pTotal:number;\r\n  site: string;\r\n  product: string;\r\n  callDate: string;\r\n\r\n  constructor(sale: any) {\r\n    const today = new Date(Date.now());\r\n    this.id = sale.id;\r\n    this.site_id = sale.site_id;\r\n    this.product_id = sale.product_id;\r\n    this.quantity_sold = sale.quantity_sold;\r\n    this.sale_date = sale.sale_date ? sale.sale_date : today.toISOString().substring(0,10);\r\n    this.pU = sale.pU;\r\n    this.pTotal = sale.pU*sale.quantity_sold;\r\n    this.product = (sale.product && sale.product.name) ? sale.product.name  : (sale.product)? sale.product: '';\r\n    this.site = (sale.site && sale.site.name) ? sale.site.name : (sale.site)?  sale.site : '';\r\n    this.callDate = this.formatDate(new Date(this.sale_date));\r\n    this.client_id = sale.client_id;\r\n    this.step = sale.step;\r\n\r\n\r\n  }\r\n  private formatDate(date: Date): string {\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const monthNames = [\r\n      'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\r\n      'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const year = date.getFullYear().toString();\r\n    return `${day} ${month} ${year}`;\r\n  }\r\n\r\n\r\n\r\n}\r\n","export class Site {\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n\r\n  constructor(site?: any) {\r\n    if (site) {\r\n      this.id = site.id;\r\n      this.name = site.name;\r\n      this.address = site.address;\r\n    } else {\r\n      this.id = 0;\r\n      this.name = '';\r\n      this.address = '';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Product } from 'src/app/models/products';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  \r\n\r\n  getProducts():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/products`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  getProductNotInStock(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/productsWithoutStock`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  addProduct(product:Product):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/products`, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateProduct(product:Product):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/products/`+product.id, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  checkProductExistsInStock(product:number,site:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+product+`/product/`+site+`/checkProductExistsInSiteStock`,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n\r\n  \r\n}\r\n","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from '../../models/sites';\r\nimport { Sale } from '../../models/sales';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SalesService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n\r\n  getSalesById(siteID: number){\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/${siteID}/sales`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  getSaleByInvoice(invoiceID: number){\r\n    return this.httpClient.get(`${this.BASE_URL}/invoices/${invoiceID}/sale`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  addSales(sale:Sale):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/sales`, sale,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  updateSale(sale:Sale):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/sales/`+sale.id, sale,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  deleteSale(sale:Sale):Observable<any>{\r\n    return this.httpClient.delete(`${this.BASE_URL}/sales/`+sale.id, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SitesService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  getSites():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  addSite(site:Site):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/sites`, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateSite(site:Site):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/sites/`+site.id, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSite(id:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+id, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSiteStocks(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/stocks`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n}\r\n"],"names":["ReactiveFormsModule","UntypedFormControl","Validators","MAT_DIALOG_DATA","MatDialogModule","Sale","MatInputModule","MatFormFieldModule","MatDividerModule","MatIconModule","MatMenuModule","MatButtonModule","NgForOf","NgIf","MatAutocompleteModule","MatOptionModule","map","Product","Site","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","form","controls","id","value","ɵɵelement","ɵɵproperty","ctx_r3","siteCtrl","_r4","getSiteNameById","product_r15","name","ɵɵlistener","SalesCreateUpdateComponent_button_17_Template_button_click_0_listener","ɵɵrestoreView","_r17","ctx_r16","ɵɵnextContext","ɵɵresetView","productCtrl","reset","SalesCreateUpdateComponent","constructor","defaults","dialogRef","fb","productService","siteService","salesService","snackbar","siteId","siteName","productId","products","sites","productName","group","required","site_id","site","product_id","product","pU","min","quantity_sold","sale_date","step","mode","showSiteField","getProducts","pipe","result","data","getSites","ngOnInit","subscribe","patchValue","save","createSale","sale","updateSale","get","setValue","close","sales","Number","Error","isCreateMode","isUpdateMode","getProductNameById","find","p","s","_","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","i3","ProductsService","i4","SitesService","i5","SalesService","i6","MatSnackBar","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SalesCreateUpdateComponent_Template","rf","ctx","SalesCreateUpdateComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","SalesCreateUpdateComponent_h2_2_Template","SalesCreateUpdateComponent_h2_3_Template","SalesCreateUpdateComponent_mat_form_field_8_Template","SalesCreateUpdateComponent_mat_form_field_9_Template","SalesCreateUpdateComponent_mat_option_16_Template","SalesCreateUpdateComponent_button_17_Template","SalesCreateUpdateComponent_button_18_Template","SalesCreateUpdateComponent_mat_error_19_Template","SalesCreateUpdateComponent_mat_error_25_Template","SalesCreateUpdateComponent_mat_error_26_Template","SalesCreateUpdateComponent_mat_error_32_Template","SalesCreateUpdateComponent_mat_error_33_Template","SalesCreateUpdateComponent_button_37_Template","SalesCreateUpdateComponent_button_38_Template","invalid","tmp_12_0","hasError","tmp_13_0","tmp_14_0","tmp_15_0","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormControlDirective","FormGroupDirective","FormControlName","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i7","MatButton","MatIconButton","i8","MatIcon","i9","MatDivider","i10","MatFormField","MatLabel","MatError","MatPrefix","MatSuffix","i11","MatInput","i12","MatAutocomplete","i13","MatOption","MatAutocompleteTrigger","styles","quality","conversion_rate","today","Date","now","toISOString","substring","pTotal","callDate","formatDate","client_id","date","day","getDate","toString","padStart","monthNames","month","getMonth","year","getFullYear","address","environment","httpClient","router","localStorage","BASE_URL","getAuthorization","getProductNotInStock","addProduct","post","updateProduct","put","checkProductExistsInStock","ɵɵinject","HttpClient","Router","LocalStorageService","factory","ɵfac","providedIn","getSalesById","siteID","getSaleByInvoice","invoiceID","addSales","deleteSale","delete","addSite","updateSite","getSite","getSiteStocks"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}