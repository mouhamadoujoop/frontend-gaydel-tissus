{"version":3,"file":"src_app_components_clients_clients_component_ts.js","mappings":"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","sources":["./src/app/components/clients/clients-create-update/clients-create-update.component.ts","./src/app/components/clients/clients-create-update/clients-create-update.component.html","./src/app/components/clients/clients.component.ts","./src/app/components/clients/clients.component.html","./src/app/services/sale/sales.service.ts"],"sourcesContent":["\r\n\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MAT_DIALOG_DATA, MatDialog,\r\n  MatDialogModule,\r\n  MatDialogRef\r\n} from '@angular/material/dialog';\r\nimport { Client } from '../../../models/clients';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgIf } from '@angular/common';\r\nimport { AccountsService } from '../../../services/account/accounts.service';\r\nimport { Product } from '../../../models/products';\r\nimport { SalesCreateUpdateComponent } from '../../sales/sales-create-update/sales-create-update.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\n@Component({\r\n  selector: 'vex-clients-create-update',\r\n  templateUrl: './clients-create-update.component.html',\r\n  styleUrls: ['./clients-create-update.component.scss'],\r\n  standalone : true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule\r\n  ]\r\n})\r\nexport class ClientsCreateUpdateComponent implements OnInit {\r\n  static id = 100;\r\n\r\n  form = this.fb.group({\r\n    id: [ClientsCreateUpdateComponent.id++],\r\n    full_name: [this.defaults?.full_name || ''],\r\n    phone: [this.defaults?.phone || ''],\r\n    address: [this.defaults?.address || '']\r\n  });\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public defaults: Client | undefined,\r\n    private dialogRef: MatDialogRef<ClientsCreateUpdateComponent>,\r\n    private fb: FormBuilder,\r\n    private dialog: MatDialog,\r\n    private AccountService: AccountsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.defaults) {\r\n      this.mode = 'update';\r\n    } else {\r\n      this.defaults = {} as Client;\r\n    }\r\n\r\n    this.form.patchValue(this.defaults);\r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createClient();\r\n    } else if (this.mode === 'update') {\r\n      this.updateClient();\r\n    }\r\n  }\r\n\r\n  createClient() {\r\n    const clients = this.form.value;\r\n\r\n\r\n    this.dialogRef.close(clients);\r\n  }\r\n\r\n  updateClient() {\r\n    const clients = this.form.value;\r\n\r\n    if (!this.defaults) {\r\n      throw new Error(\r\n        'Client ID does not exist, this roles cannot be updated'\r\n      );\r\n    }\r\n\r\n    clients.id = this.defaults.id;\r\n\r\n    this.dialogRef.close(clients);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n  showSiteField = false;\r\n  // onSubmit() {\r\n  //   if (this.form.valid) {\r\n  //     const account:any= this.form.value;\r\n  //     // Logique pour créer ou éditer le compte client\r\n  //     this.AccountService.addAccountToClient(this.data.clientId, account).subscribe();\r\n  //   }\r\n  // }\r\n\r\n}\r\n\r\n\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div class=\"flex items-center\" mat-dialog-title>\r\n\r\n    <h2\r\n      *ngIf=\"form.controls.full_name.value\"\r\n      class=\"headline m-0 flex-auto\">\r\n      {{ form.controls.full_name.value  }}\r\n    </h2>\r\n    <h2\r\n      *ngIf=\"!form.controls.full_name.value\"\r\n      class=\"headline m-0 flex-auto\">\r\n      Nouveau Client\r\n    </h2>\r\n\r\n\r\n    <button\r\n      class=\"text-secondary\"\r\n      mat-dialog-close\r\n      mat-icon-button\r\n      type=\"button\">\r\n      <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-divider class=\"text-border\"></mat-divider>\r\n\r\n  <mat-dialog-content class=\"flex flex-col\">\r\n    <mat-form-field class=\"flex-auto\" *ngIf=\"showSiteField\">\r\n      <mat-label>Site</mat-label>\r\n<!--      <input [formControl]=\"siteCtrl\" [matAutocomplete]=\"auto\" matInput [value]=\"getSiteNameById(siteCtrl.value)\" />-->\r\n\r\n      <input formControlName=\"site_id\" matInput required min=1 />\r\n      <mat-icon matIconPrefix svgIcon=\"mat:edit\"></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Nom & Prénom</mat-label>\r\n      <input formControlName=\"full_name\" matInput />\r\n\r\n      <mat-icon matIconPrefix svgIcon=\"mat:person_pin_circle\"></mat-icon>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Téléphone</mat-label>\r\n      <input formControlName=\"phone\" matInput />\r\n\r\n      <mat-icon matIconPrefix svgIcon=\"mat:phone\"></mat-icon>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Addresse</mat-label>\r\n      <input formControlName=\"address\" matInput />\r\n\r\n      <mat-icon matIconPrefix svgIcon=\"mat:location_city\"></mat-icon>\r\n    </mat-form-field>\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">Annuler</button>\r\n    <button\r\n      *ngIf=\"isCreateMode()\"\r\n      color=\"primary\"\r\n      mat-flat-button\r\n      type=\"submit\">\r\n      Ajouter Client\r\n    </button>\r\n    <button\r\n      *ngIf=\"isUpdateMode()\"\r\n      color=\"primary\"\r\n      mat-flat-button\r\n      type=\"submit\">\r\n      Modifier Client\r\n    </button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n\r\n","\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  DestroyRef,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Observable, of, ReplaySubject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Client } from '../../models/clients';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\r\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\r\nimport { ClientsCreateUpdateComponent } from './clients-create-update/clients-create-update.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\r\nimport { stagger40ms } from '@vex/animations/stagger.animation';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  UntypedFormControl\r\n} from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { VexPageLayoutContentDirective } from '@vex/components/vex-page-layout/vex-page-layout-content.directive';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { VexBreadcrumbsComponent } from '@vex/components/vex-breadcrumbs/vex-breadcrumbs.component';\r\nimport { VexPageLayoutHeaderDirective } from '@vex/components/vex-page-layout/vex-page-layout-header.directive';\r\nimport { VexPageLayoutComponent } from '@vex/components/vex-page-layout/vex-page-layout.component';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { Account } from '../../models/accounts';\r\nimport { AccountsService } from '../../services/account/accounts.service';\r\nimport { AccountsCreateUpdateComponent } from '../accounts/accounts-create-update/accounts-create-update.component';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { ClientsService } from '../../services/client/clients.service';\r\nimport { SalesCreateUpdateComponent } from '../sales/sales-create-update/sales-create-update.component';\r\nimport { Sale } from 'src/app/models/sales';\r\nimport { SalesService } from 'src/app/services/sale/sales.service';\r\nimport { Roles } from 'src/app/models/roles';\r\nimport { LocalStorageService } from 'src/app/services/local-storage/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'vex-clients',\r\n  templateUrl: './clients.component.html',\r\n  styleUrls: ['./clients.component.scss'],\r\n  standalone : true,\r\n  animations: [fadeInUp400ms, stagger40ms],\r\n  imports: [\r\n    VexPageLayoutComponent,\r\n    VexPageLayoutHeaderDirective,\r\n    VexBreadcrumbsComponent,\r\n    MatButtonToggleModule,\r\n    ReactiveFormsModule,\r\n    VexPageLayoutContentDirective,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    NgFor,\r\n    NgClass,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule\r\n  ]\r\n})\r\nexport class ClientsComponent implements OnInit, AfterViewInit {\r\n  layoutCtrl = new UntypedFormControl('boxed');\r\n\r\n  /**\r\n   * Simulating a service with HTTP that returns Observables\r\n   * You probably want to remove this and do all requests in a service with HTTP\r\n   */\r\n  subject$: ReplaySubject<Client[]> = new ReplaySubject<Client[]>(1);\r\n  data$: Observable<Client[]> = this.subject$.asObservable();\r\n  clients: Client[] = [];\r\n  userRoles!: Roles;\r\n\r\n  @Input()\r\n  columns: TableColumn<Client>[] = [\r\n    {\r\n      label: 'Client',\r\n      property: 'full_name',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Téléphone',\r\n      property: 'phone',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n    {\r\n      label: 'Addresse',\r\n      property: 'address',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n    {\r\n      label: 'Solde',\r\n      property: 'balance',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n\r\n\r\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 20, 50];\r\n  dataSource!: MatTableDataSource<Client>;\r\n  selection = new SelectionModel<Client>(true, []);\r\n  searchCtrl = new UntypedFormControl();\r\n  site_id!:number;\r\n  userConnected!: any;\r\n  siteName !: string;\r\n\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\r\n\r\n  private readonly destroyRef: DestroyRef = inject(DestroyRef);\r\n\r\n  constructor(private dialog: MatDialog,\r\n              private AccountsService: AccountsService,\r\n              private clientService: ClientsService,\r\n              private accountsService: AccountsService,\r\n              private snackbar: MatSnackBar,\r\n              private router: Router,\r\n              private salesService:SalesService,\r\n              private localStorage: LocalStorageService\r\n            ) {\r\n  }\r\n\r\n  get visibleColumns() {\r\n    return this.columns\r\n      .filter((column) => column.visible)\r\n      .map((column) => column.property);\r\n  }\r\n\r\n  /**\r\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\r\n   * We are simulating this request here.\r\n   */\r\n\r\n  getData() {\r\n    return this.clientService.getClientsBySite(this.site_id).pipe(\r\n      map((result: any) => {\r\n       {\r\n         this.siteName = result['data'][0].site.name;\r\n          this.clients = result.data;\r\n          \r\n        }\r\n\r\n        return this.clients.map((client) => new Client(client));\r\n      })\r\n    );\r\n  }\r\n  ngOnInit() {\r\n    this.userRoles = new Roles(JSON.parse(this.localStorage.getData('dataRole') ?? 'null'));\r\n    this.userConnected = localStorage.getItem('dataUser');\r\n    this.userConnected = JSON.parse(this.userConnected);\r\n    this.site_id = this.userConnected.site_id;\r\n    this.getData().subscribe((clients) => {\r\n      this.subject$.next(clients);\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.data$.pipe(filter<Client[]>(Boolean)).subscribe((clients) => {\r\n      this.clients = clients;\r\n      this.dataSource.data = clients;\r\n    });\r\n\r\n    this.searchCtrl.valueChanges\r\n      .pipe(takeUntilDestroyed(this.destroyRef))\r\n      .subscribe((value) => this.onFilterChange(value));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.paginator) {\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    if (this.sort) {\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  createClient() {\r\n    this.dialog\r\n      .open(ClientsCreateUpdateComponent)\r\n      .afterClosed()\r\n      .subscribe((client: Client) => {\r\n        if (client) {\r\n          client.site_id = this.site_id;\r\n          try {this.clientService.addClients(client).subscribe((result:any) => {\r\n            if (result.status === 200) {\r\n              \r\n              \r\n              const account = new Account( {\r\n                'client_id': result.client.id,\r\n                'balance': 0,\r\n                'client': result.client,\r\n              });\r\n              \r\n              this.accountsService.addAccount(account).subscribe((result:any) => {\r\n                if (result.status === 200) {\r\n                  this.clients.unshift(new Client(client));\r\n                  this.subject$.next(this.clients);\r\n                  this.snackbar.open(\r\n                    \"Client créé ajouté avec success\",\r\n                    'MERCI',\r\n                    {\r\n                      duration: 1000\r\n                    }\r\n                  );\r\n                }else{\r\n                  this.snackbar.open(\r\n                    \"Echec Ajout Client\",\r\n                    'MERCI DE REESSAYER',\r\n                    {\r\n                      duration: 1000\r\n                    }\r\n                  );\r\n    \r\n                }\r\n              });\r\n            }else{\r\n              this.snackbar.open(\r\n                \"Echec Ajout Client\",\r\n                'MERCI DE REESSAYER',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n\r\n            }\r\n          });\r\n            \r\n          } catch (error) {\r\n            \r\n          }\r\n          \r\n        }\r\n      });\r\n  }\r\n\r\n  updateClient(client: Client) {\r\n    this.dialog\r\n      .open(ClientsCreateUpdateComponent, {\r\n        data: client\r\n      })\r\n      .afterClosed()\r\n      .subscribe((updateClient) => {\r\n        if (updateClient) {\r\n          this.clientService.updateClient(updateClient).subscribe((result:any) => {\r\n            // if (result.status === 200)\r\n              const index = this.clients.findIndex(\r\n                (existingClient) => existingClient.id === updateClient.id\r\n              );\r\n              this.clients[index] = new Client(updateClient);\r\n              this.subject$.next(this.clients);\r\n              this.snackbar.open(\r\n                \"Client modifier avec succés\",\r\n                'MERCI',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n\r\n          });\r\n\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n  deleteClient(client: Client) {\r\n\r\n    this.clients.splice(\r\n      this.clients.findIndex(\r\n        (existingClient) => existingClient.id === client.id\r\n      ),\r\n      1\r\n    );\r\n    this.selection.deselect(client);\r\n    this.subject$.next(this.clients);\r\n  }\r\n\r\n  deleteClients(clients: Client[]) {\r\n\r\n    clients.forEach((c) => this.deleteClient(c));\r\n  }\r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column: TableColumn<Client>, event: Event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  onLabelChange(change: MatSelectChange, row: Client) {\r\n    const index = this.clients.findIndex((c) => c === row);\r\n    //this.products[index].labels = change.value;\r\n    this.subject$.next(this.clients);\r\n  }\r\n\r\n  //variable dans client(hasAccount par defaut =0)\r\n\r\n  createAccount(client: Client) {\r\n    this.dialog.open(AccountsCreateUpdateComponent, {\r\n      data: { id: client.id, isEdit: false }\r\n    }).afterClosed().subscribe((account: Account) => {\r\n      // if (account) {\r\n      //   this.AccountsService.addAccountToClient(client.id, account).subscribe();\r\n      // }\r\n    });\r\n  }\r\n  createSale(account: any) {\r\n    const client_id = account;\r\n    \r\n    \r\n    this.router.navigate(['/new-sale'], { state: { clientId: client_id} });\r\n   \r\n\r\n  }\r\n\r\n  AccountsClient(client: Client){\r\n    this.router.navigate(['/accounts'], { state: {id: client.id}})\r\n  }\r\n  \r\n  transactionAccounts(client: Client) {\r\n    this.router.navigate(['/transactions'], { state: { id: client.account_id } });\r\n  }\r\n // viewAccountClient(client: Client){\r\n //\r\n //     this.router.navigate(['/accounts'], { state: {id: client.id}})\r\n //  }\r\n\r\n\r\n\r\n}\r\n\r\n","<vex-page-layout>\r\n  <vex-page-layout-header\r\n    class=\"pb-1 flex flex-col items-start justify-center\">\r\n  </vex-page-layout-header>\r\n  <vex-page-layout-content\r\n    [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n    [class.px-6]=\"layoutCtrl.value === 'fullwidth'\"\r\n    class=\"-mt-6\">\r\n    <div class=\"card overflow-auto -mt-16\">\r\n      <div\r\n        class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\r\n        <h2\r\n          class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\r\n          <span *ngIf=\"selection.isEmpty()\">{{siteName}}/clients</span>\r\n          <span *ngIf=\"selection.hasValue()\"\r\n          >{{ selection.selected.length }} clients<span\r\n            *ngIf=\"selection.selected.length > 1\"\r\n          >s</span\r\n          >\r\n            selected</span\r\n          >\r\n        </h2>\r\n\r\n        \r\n        <mat-form-field subscriptSizing=\"dynamic\">\r\n          <mat-icon matIconPrefix svgIcon=\"mat:search\"></mat-icon>\r\n          <input\r\n            matInput\r\n            [formControl]=\"searchCtrl\"\r\n            placeholder=\"Search&hellip;\"\r\n            type=\"text\" />\r\n        </mat-form-field>\r\n\r\n        <span class=\"flex-1\"></span>\r\n\r\n        <button\r\n          [matMenuTriggerFor]=\"columnFilterMenu\"\r\n          class=\"ml-4 flex-none\"\r\n          mat-icon-button\r\n          matTooltip=\"Filter Columns\"\r\n          type=\"button\">\r\n          <mat-icon svgIcon=\"mat:filter_list\"></mat-icon>\r\n        </button>\r\n\r\n        <button *ngIf=\"!['CAISSIERE'].includes(userRoles.role_name)\"\r\n          (click)=\"createClient()\"\r\n          class=\"ml-4 flex-none\"\r\n          color=\"primary\"\r\n          mat-mini-fab\r\n          matTooltip=\"Add client\"\r\n          type=\"button\">\r\n          <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n        </button>\r\n      </div>\r\n\r\n      <table\r\n        @stagger\r\n        [dataSource]=\"dataSource\"\r\n        class=\"w-full\"\r\n        mat-table\r\n        matSort>\r\n\r\n        <!-- Checkbox Column -->\r\n        <ng-container matColumnDef=\"checkbox\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            <mat-checkbox\r\n              (change)=\"$event? masterToggle() : null\"\r\n              [checked]=\"selection.hasValue() && isAllSelected()\"\r\n              [indeterminate]=\"selection.hasValue() &&!isAllSelected()\"\r\n              color=\"primary\">\r\n            </mat-checkbox>\r\n          </th>\r\n          <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n            <mat-checkbox\r\n              (change)=\"$event? selection.toggle(row) : null\"\r\n              (click)=\"$event.stopPropagation()\"\r\n              [checked]=\"selection.isSelected(row)\"\r\n              color=\"primary\">\r\n            </mat-checkbox>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Image Column -->\r\n        <ng-container matColumnDef=\"image\">\r\n          <th *matHeaderCellDef mat-header-cell></th>\r\n          <td *matCellDef=\"let row\" class=\"w-8 min-w-8 p-0\" mat-cell>\r\n            <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\" />\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Text Columns -->\r\n        <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n          <ng-container\r\n            *ngIf=\"column.type === 'text'\"\r\n            [matColumnDef]=\"column.property\">\r\n            <th\r\n              *matHeaderCellDef\r\n              class=\"uppercase\"\r\n              mat-header-cell\r\n              mat-sort-header>\r\n              {{ column.label }}\r\n            </th>\r\n            <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n              {{ row[column.property] }}\r\n            </td>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Contact Column -->\r\n        <ng-container matColumnDef=\"contact\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div class=\"flex\">\r\n              <a\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"w-8 h-8 p-0 leading-none flex items-center justify-center hover:bg-hover text-primary-600 bg-primary-600/10\"\r\n                mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\r\n              </a>\r\n              <a\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal-600 bg-teal/10\"\r\n                mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\r\n              </a>\r\n              <a\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green-600 bg-green-600/10\"\r\n                mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Labels Column -->\r\n        <ng-container matColumnDef=\"labels\">\r\n          <th\r\n            *matHeaderCellDef\r\n            class=\"uppercase\"\r\n            mat-header-cell\r\n            mat-sort-header>\r\n            Solde\r\n          </th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div\r\n              (click)=\"$event.stopPropagation()\"\r\n              class=\"flex items-center gap-1\">\r\n              <div\r\n                class=\"bg-base text-hint cursor-pointer hover:bg-hover flex-none flex items-center justify-center\">\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:add\"></mat-icon>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Actions Column -->\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n           <button\r\n             (click)=\"$event.stopPropagation()\"\r\n             [matMenuTriggerData]=\"{ client: row }\"\r\n             [matMenuTriggerFor]=\"actionsMenu\"\r\n             mat-icon-button\r\n             type=\"button\">\r\n             <mat-icon svgIcon=\"mat:more_horiz\"></mat-icon>\r\n         </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Header Row -->\r\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n\r\n        <!-- Data Rows -->\r\n        <tr\r\n          *matRowDef=\"let row; columns: visibleColumns\"\r\n          @fadeInUp\r\n          class=\"hover:bg-hover transition duration-400 ease-out-swift cursor-pointer\"\r\n          mat-row></tr>\r\n\r\n      </table>\r\n\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"pageSizeOptions\"\r\n        [pageSize]=\"pageSize\"\r\n        class=\"sticky left-0\"></mat-paginator>\r\n    </div>\r\n  </vex-page-layout-content>\r\n</vex-page-layout>\r\n\r\n<mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button\r\n    (click)=\"toggleColumnVisibility(column, $event)\"\r\n    *ngFor=\"let column of columns\"\r\n    class=\"mat-menu-item block\">\r\n    <mat-checkbox\r\n      (click)=\"$event.stopPropagation()\"\r\n      [(ngModel)]=\"column.visible\"\r\n      color=\"primary\">\r\n      {{ column.label }}\r\n    </mat-checkbox>\r\n  </button>\r\n</mat-menu>\r\n\r\n<mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n <ng-template let-client=\"client\" matMenuContent>\r\n  <button *ngIf=\"['CAISSIERE', 'SUPERVISEUR','SUPER_ADMIN'].includes(userRoles.role_name)\" (click)=\"createSale(client.id)\" mat-menu-item>\r\n    <mat-icon svgIcon=\"mat:shopping_cart\"></mat-icon>\r\n    <span>Effectuer Vente</span>\r\n  </button>\r\n  \r\n  <button *ngIf=\"['CAISSIERE'].includes(userRoles.role_name)\" (click)=\"transactionAccounts(client)\" mat-menu-item>\r\n    <mat-icon svgIcon=\"mat:remove_red_eye\"></mat-icon>\r\n    <span>Voir Transaction</span>\r\n  </button>\r\n\r\n\r\n\r\n </ng-template>\r\n</mat-menu>\r\n","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from '../../models/sites';\r\nimport { Sale } from '../../models/sales';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SalesService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n\r\n  getSalesById(siteID: number){\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/${siteID}/sales`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  getSaleByInvoice(invoiceID: number){\r\n    return this.httpClient.get(`${this.BASE_URL}/invoices/${invoiceID}/sale`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  addSales(sale:Sale):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/sales`, sale,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  updateSale(sale:Sale):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/sales/`+sale.id, sale,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  deleteSale(sale:Sale):Observable<any>{\r\n    return this.httpClient.delete(`${this.BASE_URL}/sales/`+sale.id, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n\r\n}\r\n"],"names":["ReactiveFormsModule","MAT_DIALOG_DATA","MatDialogModule","MatInputModule","MatFormFieldModule","MatDividerModule","MatIconModule","MatMenuModule","MatButtonModule","NgIf","MatAutocompleteModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","form","controls","full_name","value","ɵɵelement","ClientsCreateUpdateComponent","_","id","constructor","defaults","dialogRef","fb","dialog","AccountService","group","phone","address","mode","showSiteField","ngOnInit","patchValue","save","createClient","updateClient","clients","close","Error","isCreateMode","isUpdateMode","_2","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","MatDialog","i3","AccountsService","_3","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ClientsCreateUpdateComponent_Template","rf","ctx","ɵɵlistener","ClientsCreateUpdateComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","ClientsCreateUpdateComponent_h2_2_Template","ClientsCreateUpdateComponent_h2_3_Template","ClientsCreateUpdateComponent_mat_form_field_8_Template","ClientsCreateUpdateComponent_button_27_Template","ClientsCreateUpdateComponent_button_28_Template","ɵɵproperty","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i4","MatButton","MatIconButton","i5","MatIcon","i6","MatDivider","i7","MatFormField","MatLabel","MatPrefix","i8","MatInput","styles","DestroyRef","inject","ReplaySubject","filter","map","Client","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","SelectionModel","fadeInUp400ms","stagger40ms","FormsModule","UntypedFormControl","MatCheckboxModule","MatTooltipModule","NgClass","NgFor","VexPageLayoutContentDirective","MatButtonToggleModule","VexPageLayoutHeaderDirective","VexPageLayoutComponent","takeUntilDestroyed","Account","AccountsCreateUpdateComponent","MatSnackBarModule","Roles","siteName","ClientsComponent_span_7_span_2_Template","ctx_r1","selection","selected","length","ClientsComponent_button_14_Template_button_click_0_listener","ɵɵrestoreView","_r22","ctx_r21","ɵɵnextContext","ɵɵresetView","ClientsComponent_th_17_Template_mat_checkbox_change_1_listener","$event","_r24","ctx_r23","masterToggle","ctx_r3","hasValue","isAllSelected","ClientsComponent_td_18_Template_mat_checkbox_change_1_listener","restoredCtx","_r27","row_r25","$implicit","ctx_r26","toggle","ClientsComponent_td_18_Template_mat_checkbox_click_1_listener","stopPropagation","ctx_r4","isSelected","row_r29","ɵɵsanitizeUrl","column_r30","label","cssClasses","row_r35","property","ɵɵelementContainerStart","ClientsComponent_ng_container_22_ng_container_1_th_1_Template","ClientsComponent_ng_container_22_ng_container_1_td_2_Template","ɵɵelementContainerEnd","ClientsComponent_ng_container_22_ng_container_1_Template","type","ClientsComponent_td_25_Template_a_click_2_listener","ClientsComponent_td_25_Template_a_click_4_listener","ClientsComponent_td_25_Template_a_click_6_listener","ClientsComponent_td_28_Template_div_click_1_listener","ClientsComponent_td_31_Template_button_click_1_listener","ɵɵpureFunction1","_c0","row_r44","_r18","undefined","ClientsComponent_button_37_Template_button_click_0_listener","_r49","column_r47","ctx_r48","toggleColumnVisibility","ClientsComponent_button_37_Template_mat_checkbox_click_1_listener","ClientsComponent_button_37_Template_mat_checkbox_ngModelChange_1_listener","visible","ClientsComponent_ng_template_40_button_0_Template_button_click_0_listener","_r57","client_r52","client","ctx_r55","createSale","ClientsComponent_ng_template_40_button_1_Template_button_click_0_listener","_r60","ctx_r58","transactionAccounts","ClientsComponent_ng_template_40_button_0_Template","ClientsComponent_ng_template_40_button_1_Template","ɵɵpureFunction0","_c1","includes","ctx_r19","userRoles","role_name","_c2","ClientsComponent","clientService","accountsService","snackbar","router","salesService","localStorage","layoutCtrl","subject$","data$","asObservable","columns","pageSize","pageSizeOptions","searchCtrl","destroyRef","visibleColumns","column","getData","getClientsBySite","site_id","pipe","result","site","name","data","JSON","parse","userConnected","getItem","subscribe","next","dataSource","Boolean","valueChanges","onFilterChange","ngAfterViewInit","paginator","sort","open","afterClosed","addClients","status","account","addAccount","unshift","duration","error","index","findIndex","existingClient","deleteClient","splice","deselect","deleteClients","forEach","c","trim","toLowerCase","event","stopImmediatePropagation","numSelected","numRows","clear","row","select","trackByProperty","onLabelChange","change","createAccount","isEdit","client_id","navigate","state","clientId","AccountsClient","account_id","ClientsService","MatSnackBar","Router","SalesService","LocalStorageService","viewQuery","ClientsComponent_Query","ClientsComponent_span_6_Template","ClientsComponent_span_7_Template","ClientsComponent_button_14_Template","ClientsComponent_th_17_Template","ClientsComponent_td_18_Template","ClientsComponent_th_20_Template","ClientsComponent_td_21_Template","ClientsComponent_ng_container_22_Template","ClientsComponent_th_24_Template","ClientsComponent_td_25_Template","ClientsComponent_th_27_Template","ClientsComponent_td_28_Template","ClientsComponent_th_30_Template","ClientsComponent_td_31_Template","ClientsComponent_tr_32_Template","ClientsComponent_tr_33_Template","ClientsComponent_button_37_Template","ClientsComponent_ng_template_40_Template","ɵɵclassProp","isEmpty","_r16","FormControlDirective","i9","MatIconAnchor","MatMiniFabButton","i10","MatTooltip","i11","i12","MatMenu","MatMenuItem","MatMenuContent","MatMenuTrigger","i13","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i14","MatSortHeader","i15","MatCheckbox","i16","NgModel","i17","i18","animation","environment","httpClient","BASE_URL","getSalesById","siteID","get","getAuthorization","getSaleByInvoice","invoiceID","addSales","sale","post","updateSale","put","deleteSale","delete","ɵɵinject","HttpClient","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}