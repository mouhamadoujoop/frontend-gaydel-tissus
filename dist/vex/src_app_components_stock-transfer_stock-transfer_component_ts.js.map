{"version":3,"file":"src_app_components_stock-transfer_stock-transfer_component_ts.js","mappings":"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","sources":["./src/app/components/stock-transfer/stock-transfer-create-update/stock-transfer-create-update.component.ts","./src/app/components/stock-transfer/stock-transfer-create-update/stock-transfer-create-update.component.html","./src/app/components/stock-transfer/stock-transfer.component.ts","./src/app/components/stock-transfer/stock-transfer.component.html","./src/app/models/StockTransfer.ts","./src/app/models/products.ts","./src/app/models/sites.ts","./src/app/services/product/products.service.ts","./src/app/services/site/sites.service.ts","./src/app/services/stockTransfer/stokc-transfers.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, ReactiveFormsModule, UntypedFormControl, Validators} from '@angular/forms';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef\r\n} from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { AsyncPipe, NgFor, NgIf } from '@angular/common';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { Observable, map, startWith } from 'rxjs';\r\nimport { SitesService } from 'src/app/services/site/sites.service';\r\nimport { Site } from 'src/app/models/sites';\r\nimport { StockTransfer } from 'src/app/models/StockTransfer';\r\nimport { Product } from 'src/app/models/products';\r\nimport { ProductsService } from 'src/app/services/product/products.service';\r\n\r\n@Component({\r\n  selector: 'vex-stock-transfer-create-update',\r\n  templateUrl: './stock-transfer-create-update.component.html',\r\n  styleUrls: ['./stock-transfer-create-update.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatDialogModule,\r\n    NgFor,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    AsyncPipe\r\n  ]\r\n})\r\nexport class StockTransferCreateUpdateComponent implements OnInit {\r\n  static id = 100;\r\n  newQuantity: number = 0;\r\n  productId: number = 0;\r\n  siteId: number = 0;\r\n  productName: string = '';\r\n  siteName: string = '';\r\n  products: Product[] = [];\r\n  sites: Site[] = [];\r\n  source: Site = new Site();\r\n  form = this.fb.group({\r\n    id: [StockTransferCreateUpdateComponent.id++],\r\n    destination_site_id: [0],\r\n    destination_site: [ ''],\r\n    source_site_id: [this.defaults?.id || ''],\r\n    source_site: [this.defaults?.name || ''],\r\n    product_id: [0],\r\n    product: [''],\r\n    quantity_transferred: [0, [Validators.required, Validators.min(1)]]\r\n  });\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public defaults: Site | undefined,\r\n    private dialogRef: MatDialogRef<StockTransferCreateUpdateComponent>,\r\n    private fb: FormBuilder,\r\n    private productService: ProductsService,\r\n    private siteService: SitesService,\r\n  ) {}\r\n\r\n  \r\n  getProducts(site:Site) {\r\n    return this.productService.getProducts().pipe(\r\n      map((result: any) => {\r\n        if (result.total) {\r\n          this.products = result.data;\r\n        }\r\n        return this.products.map((product) => new Product(product));\r\n      })\r\n    );\r\n  }\r\n\r\n  getSites() {\r\n    return this.siteService.getSites().pipe(\r\n      map((result: any) => {\r\n        if (result.total) {\r\n          this.sites = result.data;\r\n        }\r\n        return this.sites.map((site) => new Site(site));\r\n      })\r\n    );\r\n  }\r\n  ngOnInit() {\r\n    this.getProducts(new Site(this.defaults)).subscribe(products => {\r\n      this.products = products;\r\n      if (this.defaults) {\r\n        this.mode = 'create';\r\n        this.source = new Site(this.defaults);\r\n      } else {\r\n        this.defaults = {} as Site;\r\n      }\r\n    });\r\n    this.getSites().subscribe(sites => {\r\n      this.sites = sites;\r\n    });\r\n    \r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createStockTransfer();\r\n    }\r\n  }\r\n\r\n  createStockTransfer() {\r\n    this.form.get('product_id')?.setValue(this.productId);\r\n    this.form.get('product')?.setValue(this.productName);\r\n    this.form.get('destination_site_id')?.setValue(this.siteId);\r\n    this.form.get('destination_site')?.setValue(this.siteName);\r\n    const stockTransfer = this.form.value;\r\n\r\n\r\n    this.dialogRef.close(stockTransfer);\r\n  }\r\n\r\n  updateStock() {\r\n  \r\n    const stockTransfer = this.form.value;\r\n    \r\n    \r\n    if (!this.defaults) {\r\n      throw new Error(\r\n        'stockTransfer ID does not exist, this stockTransfer cannot be updated'\r\n      );\r\n    }\r\n\r\n    stockTransfer.id = this.defaults.id;\r\n    this.dialogRef.close(stockTransfer);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n  \r\n  getProductNameById(id: number): string {\r\n    this.productId=id;\r\n    const product = this.products.find(p => p.id === id);\r\n    this.productName = product ? product.name : '';\r\n    return product ? product.name : '';\r\n  }\r\n  \r\n  getSiteNameById(id: number): string {\r\n    this.siteId=id;\r\n    const site = this.sites.find(s => s.id === id);\r\n    this.siteName = site ? site.name : '';\r\n    return site ? site.name : '';\r\n  }\r\n  \r\n  productCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\r\n  siteCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\r\n  \r\n  \r\n}\r\n\r\n\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n    <div class=\"flex items-center\" mat-dialog-title>\r\n  \r\n      <h2\r\n        *ngIf=\"isCreateMode()\"\r\n        class=\"headline m-0 flex-auto\">\r\n        Transfert depuis: {{source.name}}\r\n      </h2>\r\n  \r\n  \r\n      <button\r\n        class=\"text-secondary\"\r\n        mat-dialog-close\r\n        mat-icon-button\r\n        type=\"button\">\r\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n      </button>\r\n    </div>\r\n  \r\n    <mat-divider class=\"text-border\"></mat-divider>\r\n  \r\n    <mat-dialog-content *ngIf=\"isCreateMode()\" class=\"flex flex-col\">\r\n  \r\n      <mat-form-field class=\"w-300 max-w-full\" >\r\n        <mat-label>Selectionner Produit</mat-label>\r\n        <input [formControl]=\"productCtrl\" [matAutocomplete]=\"auto\" matInput [value]=\"getProductNameById(productCtrl.value)\"/>\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n          <mat-option\r\n            *ngFor=\"let product of products \"\r\n            [value]=\"product.id\" >\r\n            <span class=\"flex items-center\">\r\n              <span class=\"flex flex-col\">\r\n                {{ product.name }}\r\n              </span>\r\n            </span>\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <button\r\n          (click)=\"productCtrl.reset()\"\r\n          *ngIf=\"productCtrl.value\"\r\n          mat-icon-button\r\n          matIconSuffix\r\n          type=\"button\">\r\n          <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n        </button>\r\n        <button *ngIf=\"!productCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n          <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n        </button>\r\n        <mat-error *ngIf=\"productCtrl.invalid\">Veuillez sélectionner un produit</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"w-300 max-w-full\" >\r\n        <mat-label>Selectionner Site Destination</mat-label>\r\n        <input [formControl]=\"siteCtrl\" [matAutocomplete]=\"auto2\" matInput [value]=\"getSiteNameById(siteCtrl.value)\"/>\r\n        <mat-autocomplete #auto2=\"matAutocomplete\">\r\n          <mat-option\r\n            *ngFor=\"let site of sites \"\r\n            [value]=\"site.id\" >\r\n            <span class=\"flex items-center\">\r\n              <span class=\"flex flex-col\">\r\n                {{ site.name }}\r\n              </span>\r\n            </span>\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <button\r\n          (click)=\"siteCtrl.reset()\"\r\n          *ngIf=\"siteCtrl.value\"\r\n          mat-icon-button\r\n          matIconSuffix\r\n          type=\"button\">\r\n          <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n        </button>\r\n        <button *ngIf=\"!siteCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n          <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n        </button>\r\n        <mat-error *ngIf=\"siteCtrl.invalid\">Veuillez sélectionner un Site</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field  class=\"flex-auto\">\r\n        <mat-label>Quantité</mat-label>\r\n        <input type=\"number\" formControlName=\"quantity_transferred\" matInput required min=1 />\r\n        <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n        <mat-error *ngIf=\"form.get('quantity_transferred')?.hasError('required')\">\r\n          Quantité requise\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('quantity_transferred')?.hasError('min')\">\r\n          Quantité doit être au moins 1\r\n        </mat-error>\r\n      </mat-form-field>\r\n  \r\n    </mat-dialog-content>\r\n    \r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button mat-dialog-close type=\"button\">Annuler</button>\r\n      <button *ngIf=\"isCreateMode() && form.invalid==false && productCtrl.invalid==false && siteCtrl.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\" >\r\n      Transferer Stock\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n  \r\n  \r\n  ","import {\r\n  AfterViewInit,\r\n  Component,\r\n  DestroyRef,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { forkJoin, Observable, of, ReplaySubject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\r\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\r\nimport { stagger40ms } from '@vex/animations/stagger.animation';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  UntypedFormControl\r\n} from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { VexPageLayoutContentDirective } from '@vex/components/vex-page-layout/vex-page-layout-content.directive';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { VexBreadcrumbsComponent } from '@vex/components/vex-breadcrumbs/vex-breadcrumbs.component';\r\nimport { VexPageLayoutHeaderDirective } from '@vex/components/vex-page-layout/vex-page-layout-header.directive';\r\nimport { VexPageLayoutComponent } from '@vex/components/vex-page-layout/vex-page-layout.component';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SitesService } from 'src/app/services/site/sites.service';\r\nimport { Site } from 'src/app/models/sites';\r\nimport { StockTransfer } from 'src/app/models/StockTransfer';\r\nimport { StokcTransfersService } from 'src/app/services/stockTransfer/stokc-transfers.service';\r\nimport { StockTransferCreateUpdateComponent } from './stock-transfer-create-update/stock-transfer-create-update.component';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'vex-stock-transfer',\r\n  templateUrl: './stock-transfer.component.html',\r\n  styleUrls: ['./stock-transfer.component.scss'],\r\n  standalone : true,\r\n  animations: [fadeInUp400ms, stagger40ms],\r\n  imports: [\r\n    VexPageLayoutComponent,\r\n    VexPageLayoutHeaderDirective,\r\n    VexBreadcrumbsComponent,\r\n    MatButtonToggleModule,\r\n    ReactiveFormsModule,\r\n    VexPageLayoutContentDirective,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    NgFor,\r\n    NgClass,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule\r\n  ]\r\n})\r\nexport class StockTransferComponent implements OnInit, AfterViewInit {\r\n  layoutCtrl = new UntypedFormControl('boxed');\r\n  id!: number;\r\n  site: Site = new Site();\r\n\r\n  /**\r\n   * Simulating a service with HTTP that returns Observables\r\n   * You probably want to remove this and do all requests in a service with HTTP\r\n   */\r\n  subject$: ReplaySubject<StockTransfer[]> = new ReplaySubject<StockTransfer[]>(1);\r\n  data$: Observable<StockTransfer[]> = this.subject$.asObservable();\r\n  stockTransfers: StockTransfer[] = [];\r\n\r\n  @Input()\r\n  columns: TableColumn<StockTransfer>[] = [\r\n    {\r\n      label: 'Produit',\r\n      property: 'product',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Destination',\r\n      property: 'destination',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Source' ,\r\n      property: 'source' ,\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Quatité transférée',\r\n      property: 'quantity_transferred',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Date transfère',\r\n      property: 'displayed_Date',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    }\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 20, 50];\r\n  dataSource!: MatTableDataSource<StockTransfer>;\r\n  selection = new SelectionModel<StockTransfer>(true, []);\r\n  searchCtrl = new UntypedFormControl();\r\n\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\r\n\r\n  private readonly destroyRef: DestroyRef = inject(DestroyRef);\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private siteService: SitesService,\r\n    private stockTransferService: StokcTransfersService,\r\n    private snackbar: MatSnackBar,\r\n  ) {}\r\n\r\n  get visibleColumns() {\r\n    return this.columns\r\n      .filter((column) => column.visible)\r\n      .map((column) => column.property);\r\n  }\r\n\r\n  /**\r\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\r\n   * We are simulating this request here.\r\n   */\r\n  getData(site: Site) {\r\n    const received$ = this.stockTransferService.getStockTransfersReceived(site).pipe(\r\n      map((result: any) => {\r\n        if (result.status === 200) {\r\n          return result.stockTransfersReceived || [];\r\n        }\r\n        return [];\r\n      })\r\n    );\r\n  \r\n    const initiated$ = this.stockTransferService.getStockTransfersInitiated(site).pipe(\r\n      map((result: any) => {\r\n        if (result.status === 200) {\r\n          return result.stockTransfersInitiated || [];\r\n        }\r\n        return [];\r\n      })\r\n    );\r\n  \r\n    return forkJoin([received$, initiated$]).pipe(\r\n      map(([receivedTransfers, initiatedTransfers]) => {\r\n        this.stockTransfers = [...receivedTransfers, ...initiatedTransfers];\r\n        return this.stockTransfers.map(stockTransfer => new StockTransfer(stockTransfer));\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.id = history.state.siteId;\r\n    this.siteService.getSite(this.id).subscribe((result:any) => {\r\n        this.site = new Site(result.data);\r\n        this.getData(this.site).subscribe((stockTransfers) => {\r\n          this.subject$.next(stockTransfers);\r\n        });\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.data$.pipe(filter<StockTransfer[]>(Boolean)).subscribe((stockTransfers) => {\r\n      this.stockTransfers = stockTransfers;\r\n        this.dataSource.data = stockTransfers;\r\n    });\r\n\r\n    this.searchCtrl.valueChanges\r\n      .pipe(takeUntilDestroyed(this.destroyRef))\r\n      .subscribe((value) => this.onFilterChange(value));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.paginator) {\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    if (this.sort) {\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  createStockTransfer() {\r\n    this.dialog\r\n      .open(StockTransferCreateUpdateComponent,{\r\n        data: this.site})\r\n      .afterClosed()\r\n      .subscribe((stockTransfer: StockTransfer) => {\r\n        if (stockTransfer) {\r\n          this.stockTransferService.transferStock(new StockTransfer(stockTransfer)).subscribe({\r\n            next: (result: any) => {\r\n              this.stockTransfers.unshift(new StockTransfer(stockTransfer));\r\n              this.subject$.next(this.stockTransfers);\r\n              if (result) {\r\n                console.log(result.message);\r\n                this.snackbar.open(\r\n                  result.message,\r\n                  'MERCI DE REESSAYER',\r\n                  {\r\n                    duration: 2000\r\n                  }\r\n                );\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              console.error(error);\r\n              this.snackbar.open(\r\n                error.error.message,\r\n                'MERCI DE REESSAYER',\r\n                {\r\n                  duration: 10000\r\n                }\r\n              );\r\n            }\r\n          });\r\n          \r\n        \r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n \r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column: TableColumn<StockTransfer>, event: Event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  onLabelChange(change: MatSelectChange, row: StockTransfer) {\r\n    const index = this.stockTransfers.findIndex((s) => s === row);\r\n    this.subject$.next(this.stockTransfers);\r\n  }\r\n}\r\n\r\n","<vex-page-layout>\r\n    <vex-page-layout-header\r\n      class=\"pb-1 flex flex-col items-start justify-center\">\r\n    </vex-page-layout-header>\r\n  \r\n    <vex-page-layout-content\r\n      [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n      [class.px-6]=\"layoutCtrl.value === 'fullwidth'\"\r\n      class=\"-mt-6\">\r\n      <div class=\"card overflow-auto -mt-16\">\r\n        <div\r\n          class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\r\n          <h2\r\n            class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\r\n            <span *ngIf=\"selection.isEmpty()\">Déplacement Stock: {{site.name}}</span>\r\n            \r\n          </h2>\r\n  \r\n          \r\n  \r\n          <mat-form-field subscriptSizing=\"dynamic\">\r\n            <mat-icon matIconPrefix svgIcon=\"mat:search\"></mat-icon>\r\n            <input\r\n              matInput\r\n              [formControl]=\"searchCtrl\"\r\n              placeholder=\"Search&hellip;\"\r\n              type=\"text\" />\r\n          </mat-form-field>\r\n  \r\n          <span class=\"flex-1\"></span>\r\n  \r\n          <button\r\n            [matMenuTriggerFor]=\"columnFilterMenu\"\r\n            class=\"ml-4 flex-none\"\r\n            mat-icon-button\r\n            matTooltip=\"Filter Columns\"\r\n            type=\"button\">\r\n            <mat-icon svgIcon=\"mat:filter_list\"></mat-icon>\r\n          </button>\r\n  \r\n          <button\r\n            (click)=\"createStockTransfer()\"\r\n            class=\"ml-4 flex-none\"\r\n            color=\"primary\"\r\n            mat-mini-fab\r\n            matTooltip=\"Add Stock\"\r\n            type=\"button\">\r\n            <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n          </button>\r\n        </div>\r\n  \r\n        <table\r\n          @stagger\r\n          [dataSource]=\"dataSource\"\r\n          class=\"w-full\"\r\n          mat-table\r\n          matSort>\r\n          <!--- Note that these columns can be defined in any order.\r\n                The actual rendered columns are set as a property on the row definition\" -->\r\n  \r\n          <!-- Checkbox Column -->\r\n          <ng-container matColumnDef=\"checkbox\">\r\n            <th *matHeaderCellDef mat-header-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? masterToggle() : null\"\r\n                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                color=\"primary\">\r\n              </mat-checkbox>\r\n            </th>\r\n            <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? selection.toggle(row) : null\"\r\n                (click)=\"$event.stopPropagation()\"\r\n                [checked]=\"selection.isSelected(row)\"\r\n                color=\"primary\">\r\n              </mat-checkbox>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Image Column -->\r\n          <ng-container matColumnDef=\"image\">\r\n            <th *matHeaderCellDef mat-header-cell></th>\r\n            <td *matCellDef=\"let row\" class=\"w-8 min-w-8 p-0\" mat-cell>\r\n              <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\" />\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Text Columns -->\r\n          <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n            <ng-container\r\n              *ngIf=\"column.type === 'text'\"\r\n              [matColumnDef]=\"column.property\">\r\n              <th\r\n                *matHeaderCellDef\r\n                class=\"uppercase\"\r\n                mat-header-cell\r\n                mat-sort-header>\r\n                {{ column.label }}\r\n              </th>\r\n              <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n                {{ row[column.property] }}\r\n              </td>\r\n            </ng-container>\r\n          </ng-container>\r\n  \r\n          <!-- Conversion (kg-m)-->\r\n          <ng-container matColumnDef=\"contact\">\r\n            <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n            <td *matCellDef=\"let row\" mat-cell>\r\n              <div class=\"flex\">\r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center hover:bg-hover text-primary-600 bg-primary-600/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\r\n                </a>\r\n  \r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal-600 bg-teal/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\r\n                </a>\r\n  \r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green-600 bg-green-600/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\r\n                </a>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Label Column -->\r\n          <ng-container matColumnDef=\"labels\">\r\n            <th\r\n              *matHeaderCellDef\r\n              class=\"uppercase\"\r\n              mat-header-cell\r\n              mat-sort-header>\r\n              Qualité\r\n            </th>\r\n            <td *matCellDef=\"let row\" mat-cell>\r\n              <div\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"flex items-center gap-1\">\r\n                <div\r\n                  class=\"bg-base text-hint cursor-pointer hover:bg-hover flex-none flex items-center justify-center\">\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:add\"></mat-icon>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Action Column -->\r\n          \r\n  \r\n          <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n          <tr *matRowDef=\"let row; columns: visibleColumns\" @fadeInUp class=\"hover:bg-hover transition duration-400 ease-out-swift cursor-pointer\" mat-row></tr>\r\n        </table>\r\n  \r\n        <mat-paginator\r\n          [pageSizeOptions]=\"pageSizeOptions\"\r\n          [pageSize]=\"pageSize\"\r\n          class=\"sticky left-0\"></mat-paginator>\r\n      </div>\r\n    </vex-page-layout-content>\r\n  </vex-page-layout>\r\n  \r\n  <mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n    <button\r\n      (click)=\"toggleColumnVisibility(column, $event)\"\r\n      *ngFor=\"let column of columns\"\r\n      class=\"mat-menu-item block\">\r\n      <mat-checkbox (click)=\"$event.stopPropagation()\" [(ngModel)]=\"column.visible\" color=\"primary\">\r\n        {{ column.label }}\r\n      </mat-checkbox>\r\n    </button>\r\n  </mat-menu>\r\n  \r\n  \r\n  ","import { LocalStorageService } from \"../services/local-storage/local-storage.service\";\r\nimport { User } from \"./user\";\r\n\r\nexport class StockTransfer {\r\n  id: number;\r\n  user_id: number;\r\n  user: string;\r\n  source_site_id: number;\r\n  destination_site_id: number;\r\n  source: string;\r\n  destination: string;\r\n  product_id: number;\r\n  product: string;\r\n  quantity_transferred: number;\r\n  quantityToTransfer: number;\r\n  transfer_date: string;\r\n  displayed_Date: string;\r\n\r\n\r\n  constructor(stockTransfer?: any) {\r\n    const today = new Date(Date.now());\r\n    const localStorageService = LocalStorageService.getInstance();\r\n    const userData = localStorageService.getData('dataUser');\r\n    const userInfo = userData ? new User(JSON.parse(userData)) : new User({ id: null, first_name: 'Unknown', last_name: 'User' });\r\n    this.user_id = stockTransfer.user_id ? stockTransfer.user_id : userInfo.id;\r\n    this.user = (stockTransfer.user  && stockTransfer.user.first_name)? stockTransfer.user.first_name+' '+stockTransfer.user.last_name :(stockTransfer.user)? stockTransfer.user: `${userInfo.first_name} ${userInfo.last_name}`;\r\n    if (stockTransfer) {\r\n      this.id = stockTransfer.id;\r\n      this.\tsource_site_id = stockTransfer.\tsource_site_id;\r\n      this.\tdestination_site_id = stockTransfer.destination_site_id;\r\n      this.source = (stockTransfer.source_site && stockTransfer.source_site.name) ? stockTransfer.source_site.name : stockTransfer.source_site;\r\n      this.destination = (stockTransfer.destination_site && stockTransfer.destination_site.name) ? stockTransfer.destination_site.name : stockTransfer.destination_site;\r\n      this.product_id = stockTransfer.product_id;\r\n      this.product = (stockTransfer.product && stockTransfer.product.name) ? stockTransfer.product.name : stockTransfer.product;\r\n      this.quantity_transferred = (stockTransfer.quantity) ? stockTransfer.quantity : stockTransfer.quantity_transferred;\r\n      this.transfer_date = (stockTransfer.transfer_date) ? stockTransfer.transfer_date : today.toISOString().substring(0, 10);\r\n      this.displayed_Date = this.formatDate(new Date(this.transfer_date));\r\n    } else {\r\n      this.id = 0;\r\n      this.destination_site_id = 0;\r\n      this.source_site_id = 0;\r\n      this.source = '';\r\n      this.destination = '';\r\n      this.product_id = 0;\r\n      this.product = '';\r\n      this.quantity_transferred = 0;\r\n      this.transfer_date = today.toISOString().substring(0, 10);\r\n      this.displayed_Date = this.formatDate(today);\r\n    }\r\n    this.quantityToTransfer=this.quantity_transferred;\r\n  }\r\n  private formatDate(date: Date): string {\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const monthNames = [\r\n      'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\r\n      'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const year = date.getFullYear().toString();\r\n    return `${day} ${month} ${year}`;\r\n  }\r\n}\r\n","export class Product {\r\n  id: number;\r\n  name: string;\r\n  quality: string;\r\n  conversion_rate: number;\r\n\r\n  constructor(product: any) {\r\n    this.id = product.id;\r\n    this.name = product.name;\r\n    this.quality = product.quality;\r\n    this.conversion_rate = product.conversion_rate;\r\n  }\r\n\r\n}\r\n","export class Site {\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n\r\n  constructor(site?: any) {\r\n    if (site) {\r\n      this.id = site.id;\r\n      this.name = site.name;\r\n      this.address = site.address;\r\n    } else {\r\n      this.id = 0;\r\n      this.name = '';\r\n      this.address = '';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Product } from 'src/app/models/products';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  \r\n\r\n  getProducts():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/products`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  getProductNotInStock(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/productsWithoutStock`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  addProduct(product:Product):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/products`, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateProduct(product:Product):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/products/`+product.id, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  checkProductExistsInStock(product:number,site:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+product+`/product/`+site+`/checkProductExistsInSiteStock`,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n\r\n  \r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SitesService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  getSites():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  addSite(site:Site):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/sites`, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateSite(site:Site):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/sites/`+site.id, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSite(id:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+id, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSiteStocks(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/stocks`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { StockReplenishment } from 'src/app/models/StockReplenishment';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { Site } from 'src/app/models/sites';\r\nimport { StockTransfer } from 'src/app/models/StockTransfer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StokcTransfersService {\r\n  BASE_URL = environment.BASE_URL\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ) { }\r\n\r\n  \r\n  getStockTransfersReceived(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/stockTransfersReceived`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  \r\n  getStockTransfersInitiated(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/stockTransfersInitiated`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  transferStock(stockTransfer:StockTransfer):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/stocks/transfer`, stockTransfer,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateStockReplenishment(stockReplenishment:StockReplenishment):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/stock-replenishment/`+stockReplenishment.id, stockReplenishment,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n}\r\n"],"names":["ReactiveFormsModule","UntypedFormControl","Validators","MAT_DIALOG_DATA","MatDialogModule","MatInputModule","MatFormFieldModule","MatDividerModule","MatIconModule","MatMenuModule","MatButtonModule","MatOptionModule","NgFor","NgIf","MatAutocompleteModule","map","Site","Product","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","source","name","ɵɵproperty","product_r15","id","ɵɵlistener","StockTransferCreateUpdateComponent_mat_dialog_content_6_button_8_Template_button_click_0_listener","ɵɵrestoreView","_r17","ctx_r16","ɵɵnextContext","ɵɵresetView","productCtrl","reset","ɵɵelement","site_r18","StockTransferCreateUpdateComponent_mat_dialog_content_6_button_18_Template_button_click_0_listener","_r20","ctx_r19","siteCtrl","ɵɵtemplate","StockTransferCreateUpdateComponent_mat_dialog_content_6_mat_option_7_Template","StockTransferCreateUpdateComponent_mat_dialog_content_6_button_8_Template","StockTransferCreateUpdateComponent_mat_dialog_content_6_button_9_Template","StockTransferCreateUpdateComponent_mat_dialog_content_6_mat_error_10_Template","StockTransferCreateUpdateComponent_mat_dialog_content_6_mat_option_17_Template","StockTransferCreateUpdateComponent_mat_dialog_content_6_button_18_Template","StockTransferCreateUpdateComponent_mat_dialog_content_6_button_19_Template","StockTransferCreateUpdateComponent_mat_dialog_content_6_mat_error_20_Template","StockTransferCreateUpdateComponent_mat_dialog_content_6_mat_error_26_Template","StockTransferCreateUpdateComponent_mat_dialog_content_6_mat_error_27_Template","ctx_r1","_r3","getProductNameById","value","products","invalid","_r8","getSiteNameById","sites","tmp_14_0","form","get","hasError","tmp_15_0","StockTransferCreateUpdateComponent","_","constructor","defaults","dialogRef","fb","productService","siteService","newQuantity","productId","siteId","productName","siteName","group","destination_site_id","destination_site","source_site_id","source_site","product_id","product","quantity_transferred","required","min","mode","getProducts","site","pipe","result","total","data","getSites","ngOnInit","subscribe","save","createStockTransfer","setValue","stockTransfer","close","updateStock","Error","isCreateMode","isUpdateMode","find","p","s","_2","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","i3","ProductsService","i4","SitesService","_3","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","StockTransferCreateUpdateComponent_Template","rf","ctx","StockTransferCreateUpdateComponent_Template_form_ngSubmit_0_listener","StockTransferCreateUpdateComponent_h2_2_Template","StockTransferCreateUpdateComponent_mat_dialog_content_6_Template","StockTransferCreateUpdateComponent_button_10_Template","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinValidator","FormControlDirective","FormGroupDirective","FormControlName","i5","MatAutocomplete","i6","MatOption","MatAutocompleteTrigger","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i7","MatButton","MatIconButton","i8","MatIcon","i9","MatDivider","i10","MatFormField","MatLabel","MatError","MatPrefix","MatSuffix","i11","MatInput","styles","DestroyRef","inject","forkJoin","ReplaySubject","filter","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","SelectionModel","fadeInUp400ms","stagger40ms","FormsModule","MatCheckboxModule","MatTooltipModule","NgClass","VexPageLayoutContentDirective","MatButtonToggleModule","VexPageLayoutHeaderDirective","VexPageLayoutComponent","takeUntilDestroyed","StockTransfer","MatSnackBarModule","StockTransferComponent_th_17_Template_mat_checkbox_change_1_listener","$event","_r15","ctx_r14","masterToggle","selection","hasValue","isAllSelected","StockTransferComponent_td_18_Template_mat_checkbox_change_1_listener","restoredCtx","_r18","row_r16","$implicit","ctx_r17","toggle","StockTransferComponent_td_18_Template_mat_checkbox_click_1_listener","stopPropagation","ctx_r2","isSelected","row_r20","ɵɵsanitizeUrl","column_r21","label","cssClasses","row_r26","property","ɵɵelementContainerStart","StockTransferComponent_ng_container_22_ng_container_1_th_1_Template","StockTransferComponent_ng_container_22_ng_container_1_td_2_Template","ɵɵelementContainerEnd","StockTransferComponent_ng_container_22_ng_container_1_Template","type","StockTransferComponent_td_25_Template_a_click_2_listener","StockTransferComponent_td_25_Template_a_click_4_listener","StockTransferComponent_td_25_Template_a_click_6_listener","StockTransferComponent_td_28_Template_div_click_1_listener","undefined","StockTransferComponent_button_34_Template_button_click_0_listener","_r38","column_r36","ctx_r37","toggleColumnVisibility","StockTransferComponent_button_34_Template_mat_checkbox_click_1_listener","StockTransferComponent_button_34_Template_mat_checkbox_ngModelChange_1_listener","visible","StockTransferComponent","dialog","route","stockTransferService","snackbar","layoutCtrl","subject$","data$","asObservable","stockTransfers","columns","pageSize","pageSizeOptions","searchCtrl","destroyRef","visibleColumns","column","getData","received$","getStockTransfersReceived","status","stockTransfersReceived","initiated$","getStockTransfersInitiated","stockTransfersInitiated","receivedTransfers","initiatedTransfers","history","state","getSite","next","dataSource","Boolean","valueChanges","onFilterChange","ngAfterViewInit","paginator","sort","open","afterClosed","transferStock","unshift","console","log","message","duration","error","trim","toLowerCase","event","stopImmediatePropagation","numSelected","selected","length","numRows","clear","forEach","row","select","trackByProperty","index","onLabelChange","change","findIndex","MatDialog","ActivatedRoute","StokcTransfersService","MatSnackBar","viewQuery","StockTransferComponent_Query","StockTransferComponent_span_6_Template","StockTransferComponent_Template_button_click_13_listener","StockTransferComponent_th_17_Template","StockTransferComponent_td_18_Template","StockTransferComponent_th_20_Template","StockTransferComponent_td_21_Template","StockTransferComponent_ng_container_22_Template","StockTransferComponent_th_24_Template","StockTransferComponent_td_25_Template","StockTransferComponent_th_27_Template","StockTransferComponent_td_28_Template","StockTransferComponent_tr_29_Template","StockTransferComponent_tr_30_Template","StockTransferComponent_button_34_Template","ɵɵclassProp","isEmpty","_r12","MatIconAnchor","MatMiniFabButton","MatTooltip","MatMenu","MatMenuTrigger","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i12","MatSortHeader","i13","MatCheckbox","i14","NgModel","i15","i16","animation","LocalStorageService","User","today","Date","now","localStorageService","getInstance","userData","userInfo","JSON","parse","first_name","last_name","user_id","user","destination","quantity","transfer_date","toISOString","substring","displayed_Date","formatDate","quantityToTransfer","date","day","getDate","toString","padStart","monthNames","month","getMonth","year","getFullYear","quality","conversion_rate","address","environment","httpClient","router","localStorage","BASE_URL","getAuthorization","getProductNotInStock","addProduct","post","updateProduct","put","checkProductExistsInStock","ɵɵinject","HttpClient","Router","factory","ɵfac","providedIn","addSite","updateSite","getSiteStocks","updateStockReplenishment","stockReplenishment"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}