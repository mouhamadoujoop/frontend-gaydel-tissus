{"version":3,"file":"default-src_vex_animations_fade-in-up_animation_ts-node_modules_angular_material_fesm2022_che-aabdd8.js","mappings":"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","sources":["./src/@vex/animations/fade-in-up.animation.ts","./node_modules/@angular/cdk/fesm2022/text-field.mjs","./node_modules/@angular/material/fesm2022/checkbox.mjs","./node_modules/@angular/material/fesm2022/input.mjs","./node_modules/@angular/material/fesm2022/tooltip.mjs"],"sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(\r\n        `${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`,\r\n        style({\r\n          transform: 'translateY(0)',\r\n          opacity: 1\r\n        })\r\n      )\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            },\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: AutofillMonitor, deps: [{ token: i1.Platform }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: AutofillMonitor, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: AutofillMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }]; } });\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAutofill, deps: [{ token: i0.ElementRef }, { token: AutofillMonitor }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkAutofill, selector: \"[cdkAutofill]\", outputs: { cdkAutofill: \"cdkAutofill\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAutofill, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAutofill]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: AutofillMonitor }]; }, propDecorators: { cdkAutofill: [{\n                type: Output\n            }] } });\n\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n        return this._minRows;\n    }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n        return this._maxRows;\n    }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() {\n        return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        if (value) {\n            this._textareaElement.setAttribute('placeholder', value);\n        }\n        else {\n            this._textareaElement.removeAttribute('placeholder');\n        }\n        this._cacheTextareaPlaceholderHeight();\n    }\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        /** Handles `focus` and `blur` events. */\n        this._handleFocusEvent = (event) => {\n            this._hasFocus = event.type === 'focus';\n        };\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n                this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n                this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n        this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        textareaClone.remove();\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        const element = this._textareaElement;\n        const previousMargin = element.style.marginBottom || '';\n        const isFirefox = this._platform.FIREFOX;\n        const needsMarginFiller = isFirefox && this._hasFocus;\n        const measuringClass = isFirefox\n            ? 'cdk-textarea-autosize-measuring-firefox'\n            : 'cdk-textarea-autosize-measuring';\n        // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n        // work around it by assigning a temporary margin with the same height as the `textarea` so that\n        // it occupies the same amount of space. See #23233.\n        if (needsMarginFiller) {\n            element.style.marginBottom = `${element.clientHeight}px`;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        element.classList.add(measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = element.scrollHeight - 4;\n        element.classList.remove(measuringClass);\n        if (needsMarginFiller) {\n            element.style.marginBottom = previousMargin;\n        }\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && this._hasFocus) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTextareaAutosize, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkTextareaAutosize, selector: \"textarea[cdkTextareaAutosize]\", inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"_noopInputHandler()\" }, classAttribute: \"cdk-textarea-autosize\" }, exportAs: [\"cdkTextareaAutosize\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTextareaAutosize, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { minRows: [{\n                type: Input,\n                args: ['cdkAutosizeMinRows']\n            }], maxRows: [{\n                type: Input,\n                args: ['cdkAutosizeMaxRows']\n            }], enabled: [{\n                type: Input,\n                args: ['cdkTextareaAutosize']\n            }], placeholder: [{\n                type: Input\n            }] } });\n\nclass TextFieldModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TextFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: TextFieldModule, declarations: [CdkAutofill, CdkTextareaAutosize], exports: [CdkAutofill, CdkTextareaAutosize] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TextFieldModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TextFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkAutofill, CdkTextareaAutosize],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Input, Output, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i1 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true,\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n}\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\nclass _MatCheckboxBase extends _MatCheckboxMixinBase {\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    /** Whether the checkbox is required. */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    constructor(idPrefix, elementRef, _changeDetectorRef, _ngZone, tabIndex, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* TransitionCheckState.Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this.defaultColor = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.id = this._uniqueId = `${idPrefix}${++nextUniqueId}`;\n    }\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /** Whether the checkbox is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        const checked = coerceBooleanProperty(value);\n        if (checked != this.checked) {\n            this._checked = checked;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* TransitionCheckState.Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* TransitionCheckState.Checked */ : 2 /* TransitionCheckState.Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._getAnimationTargetElement();\n        if (oldState === newState || !element) {\n            return;\n        }\n        if (this._currentAnimationClass) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n    }\n    _handleInputClick() {\n        const clickAction = this._options?.clickAction;\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this._checked = !this._checked;\n            this._transitionCheckState(this._checked ? 1 /* TransitionCheckState.Checked */ : 2 /* TransitionCheckState.Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _onBlur() {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        switch (oldState) {\n            case 0 /* TransitionCheckState.Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* TransitionCheckState.Checked */) {\n                    return this._animationClasses.uncheckedToChecked;\n                }\n                else if (newState == 3 /* TransitionCheckState.Indeterminate */) {\n                    return this._checked\n                        ? this._animationClasses.checkedToIndeterminate\n                        : this._animationClasses.uncheckedToIndeterminate;\n                }\n                break;\n            case 2 /* TransitionCheckState.Unchecked */:\n                return newState === 1 /* TransitionCheckState.Checked */\n                    ? this._animationClasses.uncheckedToChecked\n                    : this._animationClasses.uncheckedToIndeterminate;\n            case 1 /* TransitionCheckState.Checked */:\n                return newState === 2 /* TransitionCheckState.Unchecked */\n                    ? this._animationClasses.checkedToUnchecked\n                    : this._animationClasses.checkedToIndeterminate;\n            case 3 /* TransitionCheckState.Indeterminate */:\n                return newState === 1 /* TransitionCheckState.Checked */\n                    ? this._animationClasses.indeterminateToChecked\n                    : this._animationClasses.indeterminateToUnchecked;\n        }\n        return '';\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatCheckboxBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _MatCheckboxBase, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], id: \"id\", required: \"required\", labelPosition: \"labelPosition\", name: \"name\", value: \"value\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"_labelElement\", first: true, predicate: [\"label\"], descendants: true }, { propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatCheckboxBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined }, { type: undefined }, { type: undefined }]; }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], id: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], indeterminateChange: [{\n                type: Output\n            }], value: [{\n                type: Input\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], _labelElement: [{\n                type: ViewChild,\n                args: ['label']\n            }], ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], checked: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], indeterminate: [{\n                type: Input\n            }] } });\nclass MatCheckbox extends _MatCheckboxBase {\n    constructor(elementRef, changeDetectorRef, ngZone, tabIndex, animationMode, options) {\n        super('mat-mdc-checkbox-', elementRef, changeDetectorRef, ngZone, tabIndex, animationMode, options);\n        this._animationClasses = {\n            uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n            uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n            checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n            checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n            indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n            indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked',\n        };\n    }\n    /** Focuses the checkbox. */\n    focus() {\n        this._inputElement.nativeElement.focus();\n    }\n    _createChangeEvent(isChecked) {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = isChecked;\n        return event;\n    }\n    _getAnimationTargetElement() {\n        return this._inputElement?.nativeElement;\n    }\n    _onInputClick() {\n        super._handleInputClick();\n    }\n    _onTouchTargetClick() {\n        super._handleInputClick();\n        if (!this.disabled) {\n            // Normally the input should be focused already, but if the click\n            // comes from the touch target, then we might have to focus it ourselves.\n            this._inputElement.nativeElement.focus();\n        }\n    }\n    /**\n     *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n     *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n     *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n     *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n     *  bubbles when the label is clicked.\n     */\n    _preventBubblingFromLabel(event) {\n        if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n            event.stopPropagation();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCheckbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: 'tabindex', attribute: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_CHECKBOX_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCheckbox, selector: \"mat-checkbox\", inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, host: { properties: { \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\", \"class.mdc-checkbox--disabled\": \"disabled\", \"id\": \"id\", \"class.mat-mdc-checkbox-disabled\": \"disabled\", \"class.mat-mdc-checkbox-checked\": \"checked\" }, classAttribute: \"mat-mdc-checkbox\" }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], exportAs: [\"matCheckbox\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\"\\n     (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\"\\n         #label\\n         [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}}.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}@keyframes mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}}@keyframes mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}}.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2)}.mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:focus:not(:checked):not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}html{--mdc-checkbox-disabled-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-state-layer-opacity:0.16;--mdc-checkbox-selected-hover-state-layer-opacity:0.04;--mdc-checkbox-selected-pressed-state-layer-opacity:0.16;--mdc-checkbox-unselected-focus-state-layer-opacity:0.16;--mdc-checkbox-unselected-hover-state-layer-opacity:0.04;--mdc-checkbox-unselected-pressed-state-layer-opacity:0.16}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default}.mat-mdc-checkbox label:empty{display:none}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', host: {\n                        'class': 'mat-mdc-checkbox',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                        '[class.mdc-checkbox--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Add classes that users can use to more easily target disabled or checked checkboxes.\n                        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n                        '[class.mat-mdc-checkbox-checked]': 'checked',\n                    }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], inputs: ['disableRipple', 'color', 'tabIndex'], exportAs: 'matCheckbox', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\"\\n     (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\"\\n         #label\\n         [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}}.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}@keyframes mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}}@keyframes mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}}.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2)}.mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:focus:not(:checked):not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}html{--mdc-checkbox-disabled-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-state-layer-opacity:0.16;--mdc-checkbox-selected-hover-state-layer-opacity:0.04;--mdc-checkbox-selected-pressed-state-layer-opacity:0.16;--mdc-checkbox-unselected-focus-state-layer-opacity:0.16;--mdc-checkbox-unselected-hover-state-layer-opacity:0.04;--mdc-checkbox-unselected-pressed-state-layer-opacity:0.16}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default}.mat-mdc-checkbox label:empty{display:none}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n                }] }]; } });\n\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCheckboxRequiredValidator, selector: \"mat-checkbox[required][formControlName],\\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]\", providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                    providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatCheckboxRequiredValidator],\n                    declarations: [MatCheckboxRequiredValidator],\n                }]\n        }] });\nclass MatCheckboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCheckboxModule, declarations: [MatCheckbox], imports: [MatCommonModule, MatRippleModule, _MatCheckboxRequiredValidatorModule], exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCheckboxModule, imports: [MatCommonModule, MatRippleModule, _MatCheckboxRequiredValidatorModule, MatCommonModule, _MatCheckboxRequiredValidatorModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule, _MatCheckboxRequiredValidatorModule],\n                    exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                    declarations: [MatCheckbox],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxBase, _MatCheckboxRequiredValidatorModule };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { mixinErrorState, MatCommonModule } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit',\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /**\n     * Form control bound to the component.\n     * Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n        /**\n         * Emits whenever the component state changes and should cause the parent\n         * form field to update. Implemented as part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n    }\n});\nclass MatInput extends _MatInputBase {\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Input type of the element. */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._inputValueAccessor.value;\n    }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(value) {\n        this._readonly = coerceBooleanProperty(value);\n    }\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week',\n        ].filter(t => getSupportedInputTypes().has(t));\n        this._iOSKeyupListener = (event) => {\n            const el = event.target;\n            // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n            // indicate different things. If the value is 0, it means that the caret is at the start\n            // of the input, whereas a value of `null` means that the input doesn't support\n            // manipulating the selection range. Inputs that don't support setting the selection range\n            // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n            // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n            if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                // `1, 1` fixes it for the first time that you type text and\n                // then hold delete. Toggling to `1, 1` and then back to\n                // `0, 0` seems to completely fix it.\n                el.setSelectionRange(1, 1);\n                el.setSelectionRange(0, 0);\n            }\n        };\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', this._iOSKeyupListener);\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple\n                ? 'mat-native-select-multiple'\n                : 'mat-native-select';\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n        if (this._platform.IOS) {\n            this._elementRef.nativeElement.removeEventListener('keyup', this._iOSKeyupListener);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            // Since the input isn't a `ControlValueAccessor`, we don't have a good way of knowing when\n            // the disabled state has changed. We can't use the `ngControl.statusChanges`, because it\n            // won't fire if the input is disabled with `emitEvents = false`, despite the input becoming\n            // disabled.\n            if (this.ngControl.disabled !== null && this.ngControl.disabled !== this.disabled) {\n                this.disabled = this.ngControl.disabled;\n                this.stateChanges.next();\n            }\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        const placeholder = this._getPlaceholder();\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder\n                ? element.setAttribute('placeholder', placeholder)\n                : element.removeAttribute('placeholder');\n        }\n    }\n    /** Gets the current placeholder of the form field. */\n    _getPlaceholder() {\n        return this.placeholder || null;\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._isNeverEmpty() &&\n            !this._elementRef.nativeElement.value &&\n            !this._isBadInput() &&\n            !this.autofilled);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return (this.focused ||\n                selectElement.multiple ||\n                !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label));\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n        const element = this._elementRef.nativeElement;\n        return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatInput, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i2.NgControl, optional: true, self: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: MAT_INPUT_VALUE_ACCESSOR, optional: true, self: true }, { token: i4.AutofillMonitor }, { token: i0.NgZone }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\", inputs: { disabled: \"disabled\", id: \"id\", placeholder: \"placeholder\", name: \"name\", required: \"required\", type: \"type\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], value: \"value\", readonly: \"readonly\" }, host: { listeners: { \"focus\": \"_focusChanged(true)\", \"blur\": \"_focusChanged(false)\", \"input\": \"_onInput()\" }, properties: { \"class.mat-input-server\": \"_isServer\", \"class.mat-mdc-form-field-textarea-control\": \"_isInFormField && _isTextarea\", \"class.mat-mdc-form-field-input-control\": \"_isInFormField\", \"class.mdc-text-field__input\": \"_isInFormField\", \"class.mat-mdc-native-select-inline\": \"_isInlineSelect()\", \"id\": \"id\", \"disabled\": \"disabled\", \"required\": \"required\", \"attr.name\": \"name || null\", \"attr.readonly\": \"readonly && !_isNativeSelect || null\", \"attr.aria-invalid\": \"(empty && required) ? null : errorState\", \"attr.aria-required\": \"required\", \"attr.id\": \"id\" }, classAttribute: \"mat-mdc-input-element\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatInput }], exportAs: [\"matInput\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                    exportAs: 'matInput',\n                    host: {\n                        'class': 'mat-mdc-input-element',\n                        // The BaseMatInput parent class adds `mat-input-element`, `mat-form-field-control` and\n                        // `mat-form-field-autofill-control` to the CSS class list, but this should not be added for\n                        // this MDC equivalent input.\n                        '[class.mat-input-server]': '_isServer',\n                        '[class.mat-mdc-form-field-textarea-control]': '_isInFormField && _isTextarea',\n                        '[class.mat-mdc-form-field-input-control]': '_isInFormField',\n                        '[class.mdc-text-field__input]': '_isInFormField',\n                        '[class.mat-mdc-native-select-inline]': '_isInlineSelect()',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[id]': 'id',\n                        '[disabled]': 'disabled',\n                        '[required]': 'required',\n                        '[attr.name]': 'name || null',\n                        '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                        // Only mark the input as invalid for assistive technology if it has a value since the\n                        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                        '[attr.aria-required]': 'required',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        '(focus)': '_focusChanged(true)',\n                        '(blur)': '_focusChanged(false)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i2.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: i2.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [MAT_INPUT_VALUE_ACCESSOR]\n                }] }, { type: i4.AutofillMonitor }, { type: i0.NgZone }, { type: i5.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], value: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }] } });\n\nclass MatInputModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatInputModule, declarations: [MatInput], imports: [MatCommonModule, MatFormFieldModule], exports: [MatInput, MatFormFieldModule, TextFieldModule, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatInputModule, imports: [MatCommonModule, MatFormFieldModule, MatFormFieldModule, TextFieldModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatFormFieldModule],\n                    exports: [MatInput, MatFormFieldModule, TextFieldModule, MatCommonModule],\n                    declarations: [MatInput],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","import { takeUntil, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ElementRef, Directive, Inject, Input, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\nclass _MatTooltipBase {\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._positionAtOrigin = false;\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat';\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            this._showDelay = _defaultOptions.showDelay;\n            this._hideDelay = _defaultOptions.hideDelay;\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(undefined, origin), LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatTooltipBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _MatTooltipBase, inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatTooltipBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i2.Platform }, { type: i3.AriaDescriber }, { type: i3.FocusMonitor }, { type: undefined }, { type: i4.Directionality }, { type: undefined }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip extends _MatTooltipBase {\n    constructor(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document) {\n        super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n        this._tooltipComponent = TooltipComponent;\n        this._cssClassPrefix = 'mat-mdc';\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i2.Platform }, { token: i3.AriaDescriber }, { token: i3.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i4.Directionality, optional: true }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatTooltip, selector: \"[matTooltip]\", host: { properties: { \"class.mat-mdc-tooltip-disabled\": \"disabled\" }, classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                        '[class.mat-mdc-tooltip-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i2.Platform }, { type: i3.AriaDescriber }, { type: i3.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                }] }, { type: i4.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\nclass _TooltipComponentBase {\n    constructor(_changeDetectorRef, animationMode) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Whether the tooltip is currently visible. */\n        this._isVisible = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() { }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        this._isVisible = isVisible;\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _TooltipComponentBase, deps: [{ token: i0.ChangeDetectorRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _TooltipComponentBase, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _TooltipComponentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent extends _TooltipComponentBase {\n    constructor(changeDetectorRef, _elementRef, animationMode) {\n        super(changeDetectorRef, animationMode);\n        this._elementRef = _elementRef;\n        /* Whether the tooltip text overflows to multiple lines */\n        this._isMultiline = false;\n        this._showAnimation = 'mat-mdc-tooltip-show';\n        this._hideAnimation = 'mat-mdc-tooltip-hide';\n    }\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: TooltipComponent, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" }, properties: { \"style.zoom\": \"isVisible() ? 1 : null\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip{--mdc-plain-tooltip-container-shape:4px;--mdc-plain-tooltip-supporting-text-line-height:16px}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"], dependencies: [{ kind: \"directive\", type: i5.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': 'isVisible() ? 1 : null',\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip{--mdc-plain-tooltip-container-shape:4px;--mdc-plain-tooltip-supporting-text-line-height:16px}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        // TODO(crisbeto): these values are based on MDC's CSS.\n        // We should be able to use their styles directly once we land #19432.\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0.8)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n    ]),\n};\n\nclass MatTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltipModule, declarations: [MatTooltip, TooltipComponent], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, _MatTooltipBase, _TooltipComponentBase, getMatTooltipInvalidPositionError, matTooltipAnimations };\n"],"names":["animate","style","transition","trigger","fadeInUpAnimation","duration","transform","opacity","fadeInUp400ms","i1","normalizePassiveListenerOptions","i0","Injectable","EventEmitter","Directive","Output","Optional","Inject","Input","NgModule","coerceElement","coerceNumberProperty","coerceBooleanProperty","EMPTY","Subject","fromEvent","auditTime","takeUntil","DOCUMENT","listenerOptions","passive","AutofillMonitor","constructor","_platform","_ngZone","_monitoredElements","Map","monitor","elementOrRef","isBrowser","element","info","get","subject","result","cssClass","listener","event","animationName","classList","contains","add","run","next","target","isAutofilled","remove","runOutsideAngular","addEventListener","set","unlisten","removeEventListener","stopMonitoring","complete","delete","ngOnDestroy","forEach","_info","_","ɵfac","AutofillMonitor_Factory","t","ɵɵinject","Platform","NgZone","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","ngOnInit","subscribe","emit","CdkAutofill_Factory","ɵɵdirectiveInject","ElementRef","ɵdir","ɵɵdefineDirective","selectors","outputs","selector","CdkTextareaAutosize","minRows","_minRows","value","_setMinHeight","maxRows","_maxRows","_setMaxHeight","enabled","_enabled","resizeToFitContent","reset","placeholder","_textareaElement","_cachedPlaceholderHeight","undefined","setAttribute","removeAttribute","_cacheTextareaPlaceholderHeight","document","_destroyed","_previousMinRows","_isViewInited","_handleFocusEvent","_hasFocus","_document","nativeElement","minHeight","_cachedLineHeight","maxHeight","ngAfterViewInit","_initialHeight","height","window","_getWindow","pipe","_cacheTextareaLineHeight","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","parentNode","appendChild","clientHeight","_measureScrollHeight","previousMargin","marginBottom","isFirefox","FIREFOX","needsMarginFiller","measuringClass","scrollHeight","ngDoCheck","force","textarea","_previousValue","Math","max","requestAnimationFrame","_scrollToCaretPosition","setTimeout","_noopInputHandler","_getDocument","doc","defaultView","selectionStart","selectionEnd","isStopped","setSelectionRange","CdkTextareaAutosize_Factory","hostAttrs","hostBindings","CdkTextareaAutosize_HostBindings","rf","ctx","ɵɵlistener","CdkTextareaAutosize_input_HostBindingHandler","inputs","exportAs","host","decorators","TextFieldModule","TextFieldModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","declarations","exports","InjectionToken","forwardRef","ViewChild","Component","ViewEncapsulation","ChangeDetectionStrategy","Attribute","NG_VALUE_ACCESSOR","NG_VALIDATORS","CheckboxRequiredValidator","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","MatRipple","MatCommonModule","MatRippleModule","ANIMATION_MODULE_TYPE","_c0","_c1","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatCheckbox","multi","MatCheckboxChange","nextUniqueId","defaults","_MatCheckboxMixinBase","_MatCheckboxBase","inputId","id","_uniqueId","required","_required","idPrefix","elementRef","_changeDetectorRef","tabIndex","_animationMode","_options","ariaLabel","ariaLabelledby","labelPosition","name","change","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","defaultColor","parseInt","_syncIndeterminate","checked","markForCheck","disabled","newValue","indeterminate","changed","_transitionCheckState","_isRippleDisabled","disableRipple","_onLabelTextChange","detectChanges","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","newState","oldState","_getAnimationTargetElement","_getAnimationClassForCheckStateTransition","length","animationClass","_emitChangeEvent","_createChangeEvent","_inputElement","toggle","_handleInputClick","Promise","resolve","then","_onInteractionEvent","stopPropagation","_onBlur","_animationClasses","uncheckedToChecked","checkedToIndeterminate","uncheckedToIndeterminate","checkedToUnchecked","indeterminateToChecked","indeterminateToUnchecked","nativeCheckbox","_MatCheckboxBase_Factory","ɵɵinvalidFactory","viewQuery","_MatCheckboxBase_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","_labelElement","ripple","ariaDescribedby","features","ɵɵInheritDefinitionFeature","ChangeDetectorRef","changeDetectorRef","ngZone","animationMode","options","focus","isChecked","source","_onInputClick","_onTouchTargetClick","_preventBubblingFromLabel","MatCheckbox_Factory","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","hostVars","MatCheckbox_HostBindings","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","ɵɵProvidersFeature","ngContentSelectors","decls","vars","consts","template","MatCheckbox_Template","ɵɵprojectionDef","ɵɵelementStart","MatCheckbox_Template_div_click_0_listener","$event","MatCheckbox_Template_div_click_3_listener","ɵɵelementEnd","MatCheckbox_Template_input_blur_4_listener","MatCheckbox_Template_input_click_4_listener","MatCheckbox_Template_input_change_4_listener","ɵɵelement","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ɵɵprojection","_r0","ɵɵreference","ɵɵadvance","ɵɵproperty","dependencies","styles","encapsulation","changeDetection","providers","None","OnPush","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","ɵMatCheckboxRequiredValidator_BaseFactory","MatCheckboxRequiredValidator_Factory","ɵɵgetInheritedFactory","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","MatCheckboxModule","MatCheckboxModule_Factory","imports","getSupportedInputTypes","i4","Self","i2","Validators","i3","mixinErrorState","i5","MAT_FORM_FIELD","MatFormFieldControl","MatFormFieldModule","getMatInputUnsupportedTypeError","Error","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","stateChanges","MatInput","focused","_id","_uid","control","hasValidator","_type","_validateType","_isTextarea","has","_inputValueAccessor","readonly","_readonly","inputValueAccessor","_formField","controlType","autofilled","_neverEmptyInputTypes","filter","_iOSKeyupListener","el","nodeName","toLowerCase","_previousNativeValue","IOS","_isServer","_isNativeSelect","_isInFormField","multiple","ngOnChanges","updateErrorState","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","_focusChanged","isFocused","_onInput","_getPlaceholder","_previousPlaceholder","indexOf","_isNeverEmpty","_isBadInput","validity","badInput","empty","shouldLabelFloat","selectElement","firstOption","selectedIndex","label","setDescribedByIds","ids","join","onContainerClick","_isInlineSelect","size","MatInput_Factory","NgControl","NgForm","FormGroupDirective","ErrorStateMatcher","MatInput_HostBindings","MatInput_focus_HostBindingHandler","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","errorState","errorStateMatcher","userAriaDescribedBy","ɵɵNgOnChangesFeature","MatFormField","MatInputModule","MatInputModule_Factory","take","ESCAPE","hasModifierKey","CommonModule","A11yModule","Overlay","OverlayModule","ComponentPortal","state","CdkScrollableModule","SCROLL_THROTTLE_MS","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MAT_TOOLTIP_DEFAULT_OPTIONS","TOOLTIP_PANEL_CLASS","PANEL_CLASS","passiveListenerOptions","LONGPRESS_DELAY","MIN_VIEWPORT_TOOLTIP_THRESHOLD","UNBOUNDED_ANCHOR_GAP","MIN_HEIGHT","MAX_WIDTH","_MatTooltipBase","_position","_overlayRef","_updatePosition","_tooltipInstance","show","updatePosition","positionAtOrigin","_positionAtOrigin","_detach","hide","_setupPointerEnterEventsIfNeeded","_showDelay","_hideDelay","_mouseLeaveHideDelay","message","_message","_ariaDescriber","removeDescription","String","trim","_isTooltipVisible","_updateTooltipMessage","describe","tooltipClass","_tooltipClass","_setTooltipClass","_overlay","_scrollDispatcher","_viewContainerRef","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_viewInitialized","_pointerExitEventsInitialized","_viewportMargin","_cssClassPrefix","touchGestures","_passiveListeners","_scrollStrategy","origin","clearTimeout","_touchstartTimeout","dispose","delay","_cancelPendingAnimations","overlayRef","_createOverlay","_portal","_tooltipComponent","instance","attach","_triggerElement","afterHidden","isVisible","existingStrategy","getConfig","positionStrategy","_origin","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","create","direction","panelClass","detachments","outsidePointerEvents","_handleBodyInteraction","keydownEvents","keyCode","preventDefault","disableTooltipInteractivity","addPanelClass","hasAttached","detach","_getOrigin","_getOverlayPosition","withPositions","_addOffset","main","fallback","isLtr","originPosition","originX","originY","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","newPosition","_currentPosition","classPrefix","removePanelClass","_platformSupportsMouseEvents","push","_setupPointerExitEventsIfNeeded","point","_disableNativeGesturesIfNecessary","touch","targetTouches","clientX","clientY","_addListeners","exitListeners","newTarget","relatedTarget","overlayElement","_wheelListener","touchendListener","listeners","ANDROID","elementUnderPointer","elementFromPoint","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","_MatTooltipBase_Factory","ScrollDispatcher","ViewContainerRef","AriaDescriber","FocusMonitor","Directionality","MatTooltip","scrollDispatcher","viewContainerRef","platform","ariaDescriber","focusMonitor","dir","defaultOptions","TooltipComponent","offset","offsetY","offsetX","MatTooltip_Factory","MatTooltip_HostBindings","_TooltipComponentBase","_closeOnInteraction","_isVisible","_onHide","_animationsDisabled","_hideTimeoutId","_showTimeoutId","_toggleVisibility","_handleMouseLeave","_finalizeAnimation","_onShow","_handleAnimationEnd","_showAnimation","_hideAnimation","toVisible","tooltip","_tooltip","showClass","hideClass","getComputedStyle","getPropertyValue","_TooltipComponentBase_Factory","_isMultiline","_isTooltipMultiline","rect","getBoundingClientRect","width","TooltipComponent_Factory","TooltipComponent_Query","TooltipComponent_HostBindings","TooltipComponent_mouseleave_HostBindingHandler","ɵɵstyleProp","TooltipComponent_Template","TooltipComponent_Template_div_animationend_0_listener","ɵɵtext","ɵɵtextInterpolate","NgClass","static","matTooltipAnimations","tooltipState","MatTooltipModule","MatTooltipModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3,4]}