{"version":3,"file":"src_app_components_stock-replenishment_stock-replenishment_component_ts.js","mappings":"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","sources":["./src/app/components/stock-replenishment/stock-replenishment-create-update/stock-replenishment-create-update.component.ts","./src/app/components/stock-replenishment/stock-replenishment-create-update/stock-replenishment-create-update.component.html","./src/app/components/stock-replenishment/stock-replenishment.component.ts","./src/app/components/stock-replenishment/stock-replenishment.component.html","./src/app/models/products.ts","./src/app/models/sites.ts","./src/app/services/product/products.service.ts","./src/app/services/site/sites.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, ReactiveFormsModule, UntypedFormControl, Validators} from '@angular/forms';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef\r\n} from '@angular/material/dialog';\r\nimport { Stock } from '../../../models/stocks';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { AsyncPipe, NgFor, NgIf } from '@angular/common';\r\nimport { Product } from '../../../models/products';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { Observable, map, startWith } from 'rxjs';\r\nimport { ProductsService } from 'src/app/services/product/products.service';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Component({\r\n  selector: 'vex-stock-replenishment-create-update',\r\n  templateUrl: './stock-replenishment-create-update.component.html',\r\n  styleUrls: ['./stock-replenishment-create-update.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatDialogModule,\r\n    NgFor,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    AsyncPipe\r\n  ]\r\n})\r\nexport class StockReplenishmentCreateUpdateComponent implements OnInit {\r\n  static id = 100;\r\n  newQuantity: number = 0;\r\n  productId: number = 0;\r\n  productName: string = '';\r\n  products: Product[] = [];\r\n  form = this.fb.group({\r\n    id: [StockReplenishmentCreateUpdateComponent.id++],\r\n    site_id: [this.defaults?.id || 0],\r\n    site: [this.defaults?.name || ''],\r\n    product_id: [ 0],\r\n    product: [''],\r\n    quantity: [0, [Validators.required, Validators.min(1)]],\r\n    threshold: [10 , [Validators.required, Validators.min(1)]],\r\n  });\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public defaults: Site | undefined,\r\n    private dialogRef: MatDialogRef<StockReplenishmentCreateUpdateComponent>,\r\n    private fb: FormBuilder,\r\n    private productService: ProductsService,\r\n  ) {}\r\n\r\n  \r\n  getProducts() {\r\n    return this.productService.getProducts().pipe(\r\n      map((result: any) => {\r\n        if (result.total) {\r\n          this.products = result.data;\r\n        }\r\n        return this.products.map((product) => new Product(product));\r\n      })\r\n    );\r\n  }\r\n  ngOnInit() {\r\n    this.getProducts().subscribe(products => {\r\n      this.products = products;\r\n    });\r\n    \r\n  }\r\n\r\n  save() {\r\n      this.createReplenishment();\r\n  }\r\n\r\n  createReplenishment() {\r\n    this.form.get('product_id')?.setValue(this.productId);\r\n    this.form.get('product')?.setValue(this.productName);\r\n    const stock = this.form.value;\r\n\r\n\r\n    this.dialogRef.close(stock);\r\n  }\r\n\r\n  \r\n\r\n  \r\n  getProductNameById(id: number): string {\r\n    this.productId=id;\r\n    const product = this.products.find(p => p.id === id);\r\n    this.productName = product ? product.name : '';\r\n    return product ? product.name : '';\r\n  }\r\n  \r\n  productCtrl: UntypedFormControl = new UntypedFormControl('', [Validators.required]);\r\n  \r\n}\r\n\r\n\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n    <div class=\"flex items-center\" mat-dialog-title>\r\n        <h2\r\n        class=\"headline m-0 flex-auto\">\r\n        Nouveau Entrée en Stock\r\n      </h2>\r\n  \r\n  \r\n      <button\r\n        class=\"text-secondary\"\r\n        mat-dialog-close\r\n        mat-icon-button\r\n        type=\"button\">\r\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n      </button>\r\n    </div>\r\n  \r\n    <mat-divider class=\"text-border\"></mat-divider>\r\n  \r\n    <mat-dialog-content  class=\"flex flex-col\">\r\n  \r\n      <mat-form-field class=\"w-300 max-w-full\" >\r\n        <mat-label>Selectionner Produit</mat-label>\r\n        <input [formControl]=\"productCtrl\" [matAutocomplete]=\"auto\" matInput [value]=\"getProductNameById(productCtrl.value)\"/>\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n          <mat-option\r\n            *ngFor=\"let product of products \"\r\n            [value]=\"product.id\" >\r\n            <span class=\"flex items-center\">\r\n              <span class=\"flex flex-col\">\r\n                {{ product.name }}\r\n              </span>\r\n            </span>\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <button\r\n          (click)=\"productCtrl.reset()\"\r\n          *ngIf=\"productCtrl.value\"\r\n          mat-icon-button\r\n          matIconSuffix\r\n          type=\"button\">\r\n          <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n        </button>\r\n        <button *ngIf=\"!productCtrl.value\" mat-icon-button matIconSuffix type=\"button\">\r\n          <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n        </button>\r\n        <mat-error *ngIf=\"productCtrl.invalid\">Veuillez sélectionner un produit</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field  class=\"flex-auto\">\r\n        <mat-label>Quantité</mat-label>\r\n        <input type=\"number\" formControlName=\"quantity\" matInput required min=1 />\r\n        <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n        <mat-error *ngIf=\"form.get('quantity')?.hasError('required')\">\r\n          Quantité requise\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('quantity')?.hasError('min')\">\r\n          Quantité doit être au moins 1\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Seuil</mat-label>\r\n        <input type=\"number\" formControlName=\"threshold\" matInput required min=1 />\r\n        <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n        <mat-error *ngIf=\"form.get('threshold')?.hasError('required')\">\r\n          Seuil requise\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('threshold')?.hasError('min')\">\r\n          Seuil doit être au moins 1\r\n        </mat-error>\r\n      </mat-form-field>\r\n  \r\n    </mat-dialog-content>\r\n    \r\n  \r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button mat-dialog-close type=\"button\">Annuler</button>\r\n      <button *ngIf=\" form.invalid==false && productCtrl.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\" >\r\n      Ajouter\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n  \r\n  \r\n  ","import {\r\n  AfterViewInit,\r\n  Component,\r\n  DestroyRef,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Observable, of, ReplaySubject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\r\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\r\nimport { StockReplenishmentCreateUpdateComponent } from './stock-replenishment-create-update/stock-replenishment-create-update.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\r\nimport { stagger40ms } from '@vex/animations/stagger.animation';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  UntypedFormControl\r\n} from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { VexPageLayoutContentDirective } from '@vex/components/vex-page-layout/vex-page-layout-content.directive';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { VexBreadcrumbsComponent } from '@vex/components/vex-breadcrumbs/vex-breadcrumbs.component';\r\nimport { VexPageLayoutHeaderDirective } from '@vex/components/vex-page-layout/vex-page-layout-header.directive';\r\nimport { VexPageLayoutComponent } from '@vex/components/vex-page-layout/vex-page-layout.component';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StockReplenishment } from 'src/app/models/StockReplenishment';\r\nimport { StockReplenishmentsService } from 'src/app/services/StockReplenishment/stock-replenishments.service';\r\nimport { SitesService } from 'src/app/services/site/sites.service';\r\nimport { Site } from 'src/app/models/sites';\r\nimport { ProductsService } from 'src/app/services/product/products.service';\r\nimport { StokcsService } from 'src/app/services/stock/stokcs.service';\r\nimport { Stock } from 'src/app/models/stocks';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { Product } from 'src/app/models/products';\r\n\r\n@Component({\r\n  selector: 'vex-stock-replenishment',\r\n  templateUrl: './stock-replenishment.component.html',\r\n  styleUrls: ['./stock-replenishment.component.scss'],\r\n  standalone : true,\r\n  animations: [fadeInUp400ms, stagger40ms],\r\n  imports: [\r\n    VexPageLayoutComponent,\r\n    VexPageLayoutHeaderDirective,\r\n    VexBreadcrumbsComponent,\r\n    MatButtonToggleModule,\r\n    ReactiveFormsModule,\r\n    VexPageLayoutContentDirective,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    NgFor,\r\n    NgClass,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule\r\n  ]\r\n})\r\nexport class StockReplenishmentComponent implements OnInit, AfterViewInit {\r\n  layoutCtrl = new UntypedFormControl('boxed');\r\n  id!: number;\r\n  site: Site = new Site();\r\n\r\n  /**\r\n   * Simulating a service with HTTP that returns Observables\r\n   * You probably want to remove this and do all requests in a service with HTTP\r\n   */\r\n  subject$: ReplaySubject<StockReplenishment[]> = new ReplaySubject<StockReplenishment[]>(1);\r\n  data$: Observable<StockReplenishment[]> = this.subject$.asObservable();\r\n  stockReplenishments: StockReplenishment[] = [];\r\n\r\n  @Input()\r\n  columns: TableColumn<StockReplenishment>[] = [\r\n    {\r\n      label: 'Produit',\r\n      property: 'product',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Quatité entrée',\r\n      property: 'quantity_replenished',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Date Entrée',\r\n      property: 'displayed_Date',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    }\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 20, 50];\r\n  dataSource!: MatTableDataSource<StockReplenishment>;\r\n  selection = new SelectionModel<StockReplenishment>(true, []);\r\n  searchCtrl = new UntypedFormControl();\r\n\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\r\n\r\n  private readonly destroyRef: DestroyRef = inject(DestroyRef);\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private siteService: SitesService,\r\n    private productService: ProductsService,\r\n    private stockService: StokcsService,\r\n    private stockReplenishmentSercvice: StockReplenishmentsService,\r\n    private snackbar: MatSnackBar,\r\n  ) {}\r\n\r\n  get visibleColumns() {\r\n    return this.columns\r\n      .filter((column) => column.visible)\r\n      .map((column) => column.property);\r\n  }\r\n\r\n  /**\r\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\r\n   * We are simulating this request here.\r\n   */\r\n  getData(site:Site) {\r\n    return this.stockReplenishmentSercvice.getStockReplenishments(site).pipe(\r\n      map((result: any) => {\r\n        if (result.status===200) {\r\n          this.stockReplenishments = result.stockReplenishments || [];\r\n        }\r\n        return this.stockReplenishments.map((stockReplenishments) => new StockReplenishment(stockReplenishments));\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.id = history.state.siteId;\r\n    this.siteService.getSite(this.id).subscribe((result:any) => {\r\n        this.site = new Site(result.data);\r\n        this.getData(this.site).subscribe((stockReplenishments) => {\r\n          this.subject$.next(stockReplenishments);\r\n        });\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.data$.pipe(filter<StockReplenishment[]>(Boolean)).subscribe((stockReplenishments) => {\r\n      this.stockReplenishments = stockReplenishments;\r\n        this.dataSource.data = stockReplenishments;\r\n    });\r\n\r\n    this.searchCtrl.valueChanges\r\n      .pipe(takeUntilDestroyed(this.destroyRef))\r\n      .subscribe((value) => this.onFilterChange(value));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.paginator) {\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    if (this.sort) {\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  createStockReplenishment() {\r\n    this.dialog\r\n      .open(StockReplenishmentCreateUpdateComponent, {\r\n        data: this.site\r\n      })\r\n      .afterClosed()\r\n      .subscribe((stockReplenishment: StockReplenishment) => {\r\n        if (stockReplenishment) {\r\n          stockReplenishment.site_id = this.site.id;\r\n          stockReplenishment.site = this.site.name;\r\n          try {\r\n            this.productService.checkProductExistsInStock(stockReplenishment.product_id,stockReplenishment.site_id).subscribe(\r\n              (result:any) => {\r\n                if (result[\"data\"] === true) {\r\n                  this.stockReplenishmentSercvice.addStockReplenishment(new StockReplenishment(stockReplenishment)).subscribe((result:any) => {\r\n                    if (result.status === 200) {\r\n                      \r\n                          this.snackbar.open(\r\n                            \"Entrée Stock effectué avec succés\",\r\n                            'MERCI',\r\n                            {\r\n                              duration: 2000\r\n                            }\r\n                          );\r\n                    }else{\r\n                      this.snackbar.open(\r\n                        \"Echec Entrée Stock \",\r\n                        'MERCI DE REESSAYER',\r\n                        {\r\n                          duration: 2000\r\n                        }\r\n                      );\r\n                    }\r\n                  });\r\n                } else {\r\n                  const stock = new Stock(stockReplenishment);\r\n                  stock.quantity = 0;\r\n                  this.stockService.addStock(stock).subscribe((result:any) => {\r\n                    if (result[\"status \"] === 200) {\r\n                      this.stockReplenishmentSercvice.addStockReplenishment(new StockReplenishment(stockReplenishment)).subscribe((result:any) => {\r\n                        if (result.status === 200) {\r\n                          \r\n                              this.snackbar.open(\r\n                                \"Entrée Stock effectué avec succés \",\r\n                                'MERCI',\r\n                                {\r\n                                  duration: 2000\r\n                                }\r\n                              );\r\n                        }else{\r\n                          this.snackbar.open(\r\n                            \"Echec Entrée Stock \",\r\n                            'MERCI DE REESSAYER',\r\n                            {\r\n                              duration: 2000\r\n                            }\r\n                          );\r\n                        }\r\n                      });\r\n                    }else{\r\n                      this.snackbar.open(\r\n                        \"Echec Entrée Stock effectué \",\r\n                        'MERCI DE REESSAYER',\r\n                        {\r\n                          duration: 2000\r\n                        }\r\n                      );\r\n              \r\n                    }\r\n                  });\r\n                  \r\n                }\r\n              });\r\n            this.stockReplenishments.unshift(new StockReplenishment(stockReplenishment));\r\n            this.subject$.next(this.stockReplenishments);\r\n          } catch (error) {\r\n            this.snackbar.open(\r\n              \"Echec Entrée Stock\",\r\n              'MERCI DE REESSAYER',\r\n              {\r\n                duration: 2000\r\n              }\r\n            );\r\n          }\r\n          \r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n \r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column: TableColumn<StockReplenishment>, event: Event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  onLabelChange(change: MatSelectChange, row: StockReplenishment) {\r\n    const index = this.stockReplenishments.findIndex((s) => s === row);\r\n    this.subject$.next(this.stockReplenishments);\r\n  }\r\n}\r\n\r\n","<vex-page-layout>\r\n    <vex-page-layout-header\r\n      class=\"pb-1 flex flex-col items-start justify-center\">\r\n    </vex-page-layout-header>\r\n  \r\n    <vex-page-layout-content\r\n      [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n      [class.px-6]=\"layoutCtrl.value === 'fullwidth'\"\r\n      class=\"-mt-6\">\r\n      <div class=\"card overflow-auto -mt-16\">\r\n        <div\r\n          class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\r\n          <h2\r\n            class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\r\n            <span *ngIf=\"selection.isEmpty()\">Historique approvisonnement: {{site.name}}</span>\r\n            <span *ngIf=\"selection.hasValue()\"\r\n            >{{ selection.selected.length }} Historique<span\r\n              *ngIf=\"selection.selected.length > 1\"\r\n            >s</span\r\n            >\r\n              selected</span\r\n            >\r\n          </h2>\r\n  \r\n          \r\n  \r\n          <mat-form-field subscriptSizing=\"dynamic\">\r\n            <mat-icon matIconPrefix svgIcon=\"mat:search\"></mat-icon>\r\n            <input\r\n              matInput\r\n              [formControl]=\"searchCtrl\"\r\n              placeholder=\"Search&hellip;\"\r\n              type=\"text\" />\r\n          </mat-form-field>\r\n  \r\n          <span class=\"flex-1\"></span>\r\n  \r\n          <button\r\n            [matMenuTriggerFor]=\"columnFilterMenu\"\r\n            class=\"ml-4 flex-none\"\r\n            mat-icon-button\r\n            matTooltip=\"Filter Columns\"\r\n            type=\"button\">\r\n            <mat-icon svgIcon=\"mat:filter_list\"></mat-icon>\r\n          </button>\r\n  \r\n          <button\r\n            (click)=\"createStockReplenishment()\"\r\n            class=\"ml-4 flex-none\"\r\n            color=\"primary\"\r\n            mat-mini-fab\r\n            matTooltip=\"Add Stock\"\r\n            type=\"button\">\r\n            <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n          </button>\r\n        </div>\r\n  \r\n        <table\r\n          @stagger\r\n          [dataSource]=\"dataSource\"\r\n          class=\"w-full\"\r\n          mat-table\r\n          matSort>\r\n          <!--- Note that these columns can be defined in any order.\r\n                The actual rendered columns are set as a property on the row definition\" -->\r\n  \r\n          <!-- Checkbox Column -->\r\n          <ng-container matColumnDef=\"checkbox\">\r\n            <th *matHeaderCellDef mat-header-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? masterToggle() : null\"\r\n                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                color=\"primary\">\r\n              </mat-checkbox>\r\n            </th>\r\n            <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? selection.toggle(row) : null\"\r\n                (click)=\"$event.stopPropagation()\"\r\n                [checked]=\"selection.isSelected(row)\"\r\n                color=\"primary\">\r\n              </mat-checkbox>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Image Column -->\r\n          <ng-container matColumnDef=\"image\">\r\n            <th *matHeaderCellDef mat-header-cell></th>\r\n            <td *matCellDef=\"let row\" class=\"w-8 min-w-8 p-0\" mat-cell>\r\n              <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\" />\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Text Columns -->\r\n          <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n            <ng-container\r\n              *ngIf=\"column.type === 'text'\"\r\n              [matColumnDef]=\"column.property\">\r\n              <th\r\n                *matHeaderCellDef\r\n                class=\"uppercase\"\r\n                mat-header-cell\r\n                mat-sort-header>\r\n                {{ column.label }}\r\n              </th>\r\n              <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n                {{ row[column.property] }}\r\n              </td>\r\n            </ng-container>\r\n          </ng-container>\r\n  \r\n          <!-- Conversion (kg-m)-->\r\n          <ng-container matColumnDef=\"contact\">\r\n            <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n            <td *matCellDef=\"let row\" mat-cell>\r\n              <div class=\"flex\">\r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center hover:bg-hover text-primary-600 bg-primary-600/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\r\n                </a>\r\n  \r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal-600 bg-teal/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\r\n                </a>\r\n  \r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green-600 bg-green-600/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\r\n                </a>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Label Column -->\r\n          <ng-container matColumnDef=\"labels\">\r\n            <th\r\n              *matHeaderCellDef\r\n              class=\"uppercase\"\r\n              mat-header-cell\r\n              mat-sort-header>\r\n              Qualité\r\n            </th>\r\n            <td *matCellDef=\"let row\" mat-cell>\r\n              <div\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"flex items-center gap-1\">\r\n                <div\r\n                  class=\"bg-base text-hint cursor-pointer hover:bg-hover flex-none flex items-center justify-center\">\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:add\"></mat-icon>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Action Column -->\r\n          \r\n  \r\n          <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n          <tr *matRowDef=\"let row; columns: visibleColumns\" @fadeInUp class=\"hover:bg-hover transition duration-400 ease-out-swift cursor-pointer\" mat-row></tr>\r\n        </table>\r\n  \r\n        <mat-paginator\r\n          [pageSizeOptions]=\"pageSizeOptions\"\r\n          [pageSize]=\"pageSize\"\r\n          class=\"sticky left-0\"></mat-paginator>\r\n      </div>\r\n    </vex-page-layout-content>\r\n  </vex-page-layout>\r\n  \r\n  <mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n    <button\r\n      (click)=\"toggleColumnVisibility(column, $event)\"\r\n      *ngFor=\"let column of columns\"\r\n      class=\"mat-menu-item block\">\r\n      <mat-checkbox (click)=\"$event.stopPropagation()\" [(ngModel)]=\"column.visible\" color=\"primary\">\r\n        {{ column.label }}\r\n      </mat-checkbox>\r\n    </button>\r\n  </mat-menu>\r\n  \r\n  \r\n  ","export class Product {\r\n  id: number;\r\n  name: string;\r\n  quality: string;\r\n  conversion_rate: number;\r\n\r\n  constructor(product: any) {\r\n    this.id = product.id;\r\n    this.name = product.name;\r\n    this.quality = product.quality;\r\n    this.conversion_rate = product.conversion_rate;\r\n  }\r\n\r\n}\r\n","export class Site {\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n\r\n  constructor(site?: any) {\r\n    if (site) {\r\n      this.id = site.id;\r\n      this.name = site.name;\r\n      this.address = site.address;\r\n    } else {\r\n      this.id = 0;\r\n      this.name = '';\r\n      this.address = '';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Product } from 'src/app/models/products';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  \r\n\r\n  getProducts():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/products`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  getProductNotInStock(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/productsWithoutStock`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  addProduct(product:Product):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/products`, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateProduct(product:Product):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/products/`+product.id, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  checkProductExistsInStock(product:number,site:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+product+`/product/`+site+`/checkProductExistsInSiteStock`,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n\r\n  \r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SitesService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  getSites():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  addSite(site:Site):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/sites`, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateSite(site:Site):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/sites/`+site.id, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSite(id:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+id, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSiteStocks(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/stocks`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n}\r\n"],"names":["ReactiveFormsModule","UntypedFormControl","Validators","MAT_DIALOG_DATA","MatDialogModule","MatInputModule","MatFormFieldModule","MatDividerModule","MatIconModule","MatMenuModule","MatButtonModule","MatOptionModule","NgFor","NgIf","Product","MatAutocompleteModule","map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","product_r10","id","ɵɵadvance","ɵɵtextInterpolate1","name","ɵɵlistener","StockReplenishmentCreateUpdateComponent_button_15_Template_button_click_0_listener","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","ɵɵresetView","productCtrl","reset","ɵɵelement","StockReplenishmentCreateUpdateComponent","_","constructor","defaults","dialogRef","fb","productService","newQuantity","productId","productName","products","form","group","site_id","site","product_id","product","quantity","required","min","threshold","getProducts","pipe","result","total","data","ngOnInit","subscribe","save","createReplenishment","get","setValue","stock","value","close","getProductNameById","find","p","_2","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","i3","ProductsService","_3","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","StockReplenishmentCreateUpdateComponent_Template","rf","ctx","StockReplenishmentCreateUpdateComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","StockReplenishmentCreateUpdateComponent_mat_option_14_Template","StockReplenishmentCreateUpdateComponent_button_15_Template","StockReplenishmentCreateUpdateComponent_button_16_Template","StockReplenishmentCreateUpdateComponent_mat_error_17_Template","StockReplenishmentCreateUpdateComponent_mat_error_23_Template","StockReplenishmentCreateUpdateComponent_mat_error_24_Template","StockReplenishmentCreateUpdateComponent_mat_error_30_Template","StockReplenishmentCreateUpdateComponent_mat_error_31_Template","StockReplenishmentCreateUpdateComponent_button_35_Template","_r0","invalid","tmp_8_0","hasError","tmp_9_0","tmp_10_0","tmp_11_0","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinValidator","FormControlDirective","FormGroupDirective","FormControlName","i4","MatAutocomplete","i5","MatOption","MatAutocompleteTrigger","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i6","MatButton","MatIconButton","i7","MatIcon","i8","MatDivider","i9","MatFormField","MatLabel","MatError","MatPrefix","MatSuffix","i10","MatInput","styles","DestroyRef","inject","ReplaySubject","filter","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","SelectionModel","fadeInUp400ms","stagger40ms","FormsModule","MatCheckboxModule","MatTooltipModule","NgClass","VexPageLayoutContentDirective","MatButtonToggleModule","VexPageLayoutHeaderDirective","VexPageLayoutComponent","takeUntilDestroyed","StockReplenishment","Site","Stock","MatSnackBarModule","ctx_r0","StockReplenishmentComponent_span_7_span_2_Template","ctx_r1","selection","selected","length","StockReplenishmentComponent_th_18_Template_mat_checkbox_change_1_listener","$event","_r17","ctx_r16","masterToggle","ctx_r2","hasValue","isAllSelected","StockReplenishmentComponent_td_19_Template_mat_checkbox_change_1_listener","restoredCtx","_r20","row_r18","$implicit","ctx_r19","toggle","StockReplenishmentComponent_td_19_Template_mat_checkbox_click_1_listener","stopPropagation","ctx_r3","isSelected","row_r22","ɵɵsanitizeUrl","column_r23","label","cssClasses","row_r28","property","ɵɵelementContainerStart","StockReplenishmentComponent_ng_container_23_ng_container_1_th_1_Template","StockReplenishmentComponent_ng_container_23_ng_container_1_td_2_Template","ɵɵelementContainerEnd","StockReplenishmentComponent_ng_container_23_ng_container_1_Template","type","StockReplenishmentComponent_td_26_Template_a_click_2_listener","StockReplenishmentComponent_td_26_Template_a_click_4_listener","StockReplenishmentComponent_td_26_Template_a_click_6_listener","StockReplenishmentComponent_td_29_Template_div_click_1_listener","undefined","StockReplenishmentComponent_button_35_Template_button_click_0_listener","_r40","column_r38","ctx_r39","toggleColumnVisibility","StockReplenishmentComponent_button_35_Template_mat_checkbox_click_1_listener","StockReplenishmentComponent_button_35_Template_mat_checkbox_ngModelChange_1_listener","visible","StockReplenishmentComponent","dialog","route","siteService","stockService","stockReplenishmentSercvice","snackbar","layoutCtrl","subject$","data$","asObservable","stockReplenishments","columns","pageSize","pageSizeOptions","searchCtrl","destroyRef","visibleColumns","column","getData","getStockReplenishments","status","history","state","siteId","getSite","next","dataSource","Boolean","valueChanges","onFilterChange","ngAfterViewInit","paginator","sort","createStockReplenishment","open","afterClosed","stockReplenishment","checkProductExistsInStock","addStockReplenishment","duration","addStock","unshift","error","trim","toLowerCase","event","stopImmediatePropagation","numSelected","numRows","clear","forEach","row","select","trackByProperty","index","onLabelChange","change","findIndex","s","MatDialog","ActivatedRoute","SitesService","StokcsService","StockReplenishmentsService","MatSnackBar","viewQuery","StockReplenishmentComponent_Query","StockReplenishmentComponent_span_6_Template","StockReplenishmentComponent_span_7_Template","StockReplenishmentComponent_Template_button_click_14_listener","StockReplenishmentComponent_th_18_Template","StockReplenishmentComponent_td_19_Template","StockReplenishmentComponent_th_21_Template","StockReplenishmentComponent_td_22_Template","StockReplenishmentComponent_ng_container_23_Template","StockReplenishmentComponent_th_25_Template","StockReplenishmentComponent_td_26_Template","StockReplenishmentComponent_th_28_Template","StockReplenishmentComponent_td_29_Template","StockReplenishmentComponent_tr_30_Template","StockReplenishmentComponent_tr_31_Template","StockReplenishmentComponent_button_35_Template","ɵɵclassProp","isEmpty","_r13","MatIconAnchor","MatMiniFabButton","MatTooltip","i11","i12","MatMenu","MatMenuTrigger","i13","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i14","MatSortHeader","i15","MatCheckbox","i16","NgModel","i17","i18","animation","quality","conversion_rate","address","environment","httpClient","router","localStorage","BASE_URL","getAuthorization","getProductNotInStock","addProduct","post","updateProduct","put","ɵɵinject","HttpClient","Router","LocalStorageService","factory","ɵfac","providedIn","getSites","addSite","updateSite","getSiteStocks"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}