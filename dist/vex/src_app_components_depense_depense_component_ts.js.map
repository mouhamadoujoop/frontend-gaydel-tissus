{"version":3,"file":"src_app_components_depense_depense_component_ts.js","mappings":"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","sources":["./src/app/components/depense/depense-create-update/depense-create-update.component.ts","./src/app/components/depense/depense-create-update/depense-create-update.component.html","./src/app/components/depense/depense.component.ts","./src/app/components/depense/depense.component.html","./src/app/models/depenses.ts","./src/app/models/sites.ts","./src/app/services/depenses/depense.service.ts","./src/app/services/site/sites.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef\r\n} from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgIf } from '@angular/common';\r\nimport { Depenses } from 'src/app/models/depenses';\r\n\r\n@Component({\r\n  selector: 'vex-depense-create-update',\r\n  templateUrl: './depense-create-update.component.html',\r\n  styleUrls: ['./depense-create-update.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule\r\n  ]\r\n})\r\nexport class DepenseCreateUpdateComponent implements OnInit {\r\n  static id = 100;\r\n\r\n  form = this.fb.group({\r\n    id: [DepenseCreateUpdateComponent.id++],\r\n    details: [this.defaults?.details, [Validators.required]],\r\n    amount: [this.defaults?.amount, [Validators.required, Validators.min(1)]],\r\n  });\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public defaults: Depenses | undefined,\r\n    private dialogRef: MatDialogRef<DepenseCreateUpdateComponent>,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.defaults) {\r\n      this.mode = 'update';\r\n    } else {\r\n      this.defaults = {} as Depenses;\r\n    }\r\n\r\n    this.form.patchValue(this.defaults);\r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createDepense();\r\n    } else if (this.mode === 'update') {\r\n      this.updateDepense();\r\n    }\r\n  }\r\n\r\n  createDepense() {\r\n    const depense = this.form.value;\r\n\r\n\r\n    this.dialogRef.close(depense);\r\n  }\r\n\r\n  updateDepense() {\r\n    const depense = this.form.value;\r\n\r\n    if (!this.defaults) {\r\n      throw new Error(\r\n        'Dépense ID does not exist, this Site cannot be updated'\r\n      );\r\n    }\r\n\r\n    depense.id = this.defaults.id;\r\n\r\n    this.dialogRef.close(depense);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n}\r\n\r\n\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n    <div class=\"flex items-center\" mat-dialog-title>\r\n  \r\n      <h2\r\n        *ngIf=\"form.controls.details.value || form.controls.details.value\"\r\n        class=\"headline m-0 flex-auto\">\r\n        Modification Dépense\r\n      </h2>\r\n      <h2\r\n        *ngIf=\"!form.controls.details.value && !form.controls.details.value\"\r\n        class=\"headline m-0 flex-auto\">\r\n        Nouveau Dépense\r\n      </h2>\r\n  \r\n  \r\n      <button\r\n        class=\"text-secondary\"\r\n        mat-dialog-close\r\n        mat-icon-button\r\n        type=\"button\">\r\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n      </button>\r\n    </div>\r\n  \r\n    <mat-divider class=\"text-border\"></mat-divider>\r\n  \r\n    <mat-dialog-content class=\"flex flex-col\">\r\n  \r\n  \r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Détails</mat-label>\r\n        <input formControlName=\"details\" matInput required/>\r\n        <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n        <mat-error *ngIf=\"form.get('details')?.hasError('required')\">\r\n          Détails requise\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Montant</mat-label>\r\n        <input type=\"number\" formControlName=\"amount\" matInput required min=1/>\r\n        <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n        <mat-error *ngIf=\"form.get('amount')?.hasError('required')\">\r\n          Montant requise\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('amount')?.hasError('min')\">\r\n          Montannt doit être au moins 1\r\n        </mat-error>\r\n      </mat-form-field>\r\n  \r\n    </mat-dialog-content>\r\n  \r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button mat-dialog-close type=\"button\">Annuler</button>\r\n      <button\r\n        *ngIf=\"isCreateMode() && form.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\">\r\n        Ajouter Dépense\r\n      </button>\r\n      <button\r\n        *ngIf=\"isUpdateMode() && form.invalid==false\" color=\"primary\" mat-flat-button type=\"submit\">\r\n        Modifier Dépense\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n  \r\n  \r\n  ","import {\r\n  AfterViewInit,\r\n  Component,\r\n  DestroyRef,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Observable, of, ReplaySubject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Depenses } from '../../models/depenses';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\r\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\r\nimport { DepenseCreateUpdateComponent } from './depense-create-update/depense-create-update.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\r\nimport { stagger40ms } from '@vex/animations/stagger.animation';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  UntypedFormControl\r\n} from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { VexPageLayoutContentDirective } from '@vex/components/vex-page-layout/vex-page-layout-content.directive';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { VexBreadcrumbsComponent } from '@vex/components/vex-breadcrumbs/vex-breadcrumbs.component';\r\nimport { VexPageLayoutHeaderDirective } from '@vex/components/vex-page-layout/vex-page-layout-header.directive';\r\nimport { VexPageLayoutComponent } from '@vex/components/vex-page-layout/vex-page-layout.component';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { DepenseService } from 'src/app/services/depenses/depense.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { LocalStorageService } from 'src/app/services/local-storage/local-storage.service';\r\nimport { Site } from 'src/app/models/sites';\r\nimport { SitesService } from 'src/app/services/site/sites.service';\r\n\r\n@Component({\r\n  selector: 'vex-depense',\r\n  templateUrl: './depense.component.html',\r\n  styleUrls: ['./depense.component.scss'],\r\n  standalone : true,\r\n  animations: [fadeInUp400ms, stagger40ms],\r\n  imports: [\r\n    VexPageLayoutComponent,\r\n    VexPageLayoutHeaderDirective,\r\n    VexBreadcrumbsComponent,\r\n    MatButtonToggleModule,\r\n    ReactiveFormsModule,\r\n    VexPageLayoutContentDirective,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    NgFor,\r\n    NgClass,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule\r\n  ]\r\n})\r\nexport class DepenseComponent implements OnInit, AfterViewInit {\r\n  layoutCtrl = new UntypedFormControl('boxed');\r\n\r\n  /**\r\n   * Simulating a service with HTTP that returns Observables\r\n   * You probably want to remove this and do all requests in a service with HTTP\r\n   */\r\n  subject$: ReplaySubject<Depenses[]> = new ReplaySubject<Depenses[]>(1);\r\n  data$: Observable<Depenses[]> = this.subject$.asObservable();\r\n  depenses: Depenses[] = [];\r\n  user!: User;\r\n  site!: Site;\r\n  totalDepense: number = 0;\r\n  siteId: number = 0;\r\n\r\n  @Input()\r\n  columns: TableColumn<Depenses>[] = [\r\n    {\r\n      label: 'Détails',\r\n      property: 'details',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Montant(FCFA)',\r\n      property: 'amount',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n\r\n    // {\r\n    //   label: 'Fait Par',\r\n    //   property: ,\r\n    //   type: 'text',\r\n    //   visible: true,\r\n    //   cssClasses: ['text-secondary', 'font-medium']\r\n    // },\r\n\r\n    {\r\n      label: 'Date',\r\n      property: 'displayed_Date',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n\r\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 20, 50];\r\n  dataSource!: MatTableDataSource<Depenses>;\r\n  selection = new SelectionModel<Depenses>(true, []);\r\n  searchCtrl = new UntypedFormControl();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\r\n\r\n  private readonly destroyRef: DestroyRef = inject(DestroyRef);\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private depenseService: DepenseService,\r\n    private snackbar: MatSnackBar,\r\n    private siteService: SitesService,\r\n    private localStorage: LocalStorageService\r\n  ) {}\r\n\r\n  get visibleColumns() {\r\n    return this.columns\r\n      .filter((column) => column.visible)\r\n      .map((column) => column.property);\r\n  }\r\n\r\n  /**\r\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\r\n   * We are simulating this request here.\r\n   */\r\n  getData(site:number) {\r\n    return this.depenseService.getDepensesSites(site).pipe(\r\n      map((result: any) => {\r\n          this.depenses = result.dailyExpenses || [];\r\n          return this.depenses.map((depense) => new Depenses(depense));\r\n         \r\n      })\r\n    );\r\n  }\r\n  getSite(site:number) {\r\n    return this.siteService.getSite(site).pipe(\r\n      map((result: any) => {\r\n          this.site = new Site(result.data);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user = new User(JSON.parse(this.localStorage.getData('dataUser') ?? 'null'));\r\n    if (history.state.siteId) {\r\n      this.siteId=history.state.siteId;\r\n      \r\n    }else{\r\n      this.siteId=this.user.site_id;\r\n    }\r\n    if (this.user) {\r\n      this.getData(this.siteId).subscribe((depenses) => {\r\n        this.subject$.next(depenses);\r\n      });\r\n      this.getSite(this.siteId).subscribe((site) => {\r\n      });\r\n      \r\n    }\r\n    \r\n\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.data$.pipe(filter<Depenses[]>(Boolean)).subscribe((depenses) => {\r\n      this.depenses = depenses;\r\n      this.totalDepense = this.depenses.reduce((total, depense) => total + depense.amount, 0);\r\n        this.dataSource.data = depenses;\r\n    });\r\n\r\n    this.searchCtrl.valueChanges\r\n      .pipe(takeUntilDestroyed(this.destroyRef))\r\n      .subscribe((value) => this.onFilterChange(value));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    \r\n    if (this.paginator) {\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    if (this.sort) {\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  createDepense() {\r\n    this.dialog\r\n      .open(DepenseCreateUpdateComponent)\r\n      .afterClosed()\r\n      .subscribe((depense: Depenses) => {\r\n        if (depense) {\r\n          depense.site_id = this.user.site_id;\r\n          const newDepense = new Depenses(depense);\r\n          this.depenseService.addDepense(newDepense).subscribe((result:any) => {\r\n            if (result.status === 200) {\r\n              this.depenses.unshift( newDepense);\r\n              this.subject$.next(this.depenses);\r\n              this.snackbar.open(\r\n                \"Dépense Ajouter avec succés\",\r\n                'MERCI',\r\n                {\r\n                  duration: 2000\r\n                }\r\n              );\r\n            }else{\r\n              this.snackbar.open(\r\n                \"Echec Ajout Dépenses\",\r\n                'MERCI DE REESSAYER',\r\n                {\r\n                  duration: 2000\r\n                }\r\n              );\r\n      \r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  updateDepense(depense: Depenses) {\r\n    this.dialog\r\n      .open(DepenseCreateUpdateComponent, {\r\n        data: depense\r\n      })\r\n      .afterClosed()\r\n      .subscribe((updatedDepense) => {\r\n\r\n        if (updatedDepense) {\r\n          this.depenseService.updateDepense(updatedDepense).subscribe((result:any) => {\r\n            if (result.status === 200) {\r\n              const index = this.depenses.findIndex(\r\n                (existingSite) =>  existingSite.id === updatedDepense.id\r\n              );\r\n              this.depenses[index] = new Depenses(updatedDepense);\r\n              this.subject$.next(this.depenses);\r\n              this.snackbar.open(\r\n                \"Dépense modifier avec succés\",\r\n                'MERCI',\r\n                {\r\n                  duration: 2000\r\n                }\r\n              );\r\n            }else{\r\n              this.snackbar.open(\r\n                \"Echec Modification Dépenses\",\r\n                'MERCI DE REESSAYER',\r\n                {\r\n                  duration: 2000\r\n                }\r\n              );\r\n      \r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  \r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column: TableColumn<Depenses>, event: Event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  onLabelChange(change: MatSelectChange, row: Depenses) {\r\n    const index = this.depenses.findIndex((s) => s === row);\r\n    this.subject$.next(this.depenses);\r\n  }\r\n}\r\n\r\n","<vex-page-layout>\r\n    <vex-page-layout-header\r\n      class=\"pb-1 flex flex-col items-start justify-center\">\r\n    </vex-page-layout-header>\r\n  \r\n    <vex-page-layout-content\r\n      [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n      [class.px-6]=\"layoutCtrl.value === 'fullwidth'\"\r\n      class=\"-mt-6\">\r\n      <div class=\"card overflow-auto -mt-16\">\r\n        <div\r\n          class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\r\n          <h2\r\n            class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\r\n            <span *ngIf=\"selection.isEmpty()\">{{site.name}} : {{totalDepense}} F</span>\r\n            <span *ngIf=\"selection.hasValue()\"\r\n            >{{ selection.selected.length }} Site<span\r\n              *ngIf=\"selection.selected.length > 1\"\r\n            >s</span\r\n            >\r\n              selected</span\r\n            >\r\n          </h2>\r\n  \r\n  \r\n          <mat-form-field subscriptSizing=\"dynamic\">\r\n            <mat-icon matIconPrefix svgIcon=\"mat:search\"></mat-icon>\r\n            <input\r\n              matInput\r\n              [formControl]=\"searchCtrl\"\r\n              placeholder=\"Search&hellip;\"\r\n              type=\"text\" />\r\n          </mat-form-field>\r\n  \r\n          <span class=\"flex-1\"></span>\r\n  \r\n          <button\r\n            [matMenuTriggerFor]=\"columnFilterMenu\"\r\n            class=\"ml-4 flex-none\"\r\n            mat-icon-button\r\n            matTooltip=\"Filter Columns\"\r\n            type=\"button\">\r\n            <mat-icon svgIcon=\"mat:filter_list\"></mat-icon>\r\n          </button>\r\n  \r\n          <button\r\n          *ngIf=\"siteId === user.site_id\"\r\n            (click)=\"createDepense()\"\r\n            class=\"ml-4 flex-none\"\r\n            color=\"primary\"\r\n            mat-mini-fab\r\n            matTooltip=\"Ajout Depense\"\r\n            type=\"button\">\r\n            <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n          </button>\r\n        </div>\r\n  \r\n        <table\r\n          @stagger\r\n          [dataSource]=\"dataSource\"\r\n          class=\"w-full\"\r\n          mat-table\r\n          matSort>\r\n          <!--- Note that these columns can be defined in any order.\r\n                The actual rendered columns are set as a property on the row definition\" -->\r\n  \r\n          <!-- Checkbox Column -->\r\n          <ng-container matColumnDef=\"checkbox\">\r\n            <th *matHeaderCellDef mat-header-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? masterToggle() : null\"\r\n                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                color=\"primary\">\r\n              </mat-checkbox>\r\n            </th>\r\n            <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? selection.toggle(row) : null\"\r\n                (click)=\"$event.stopPropagation()\"\r\n                [checked]=\"selection.isSelected(row)\"\r\n                color=\"primary\">\r\n              </mat-checkbox>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Image Column -->\r\n          <ng-container matColumnDef=\"image\">\r\n            <th *matHeaderCellDef mat-header-cell></th>\r\n            <td *matCellDef=\"let row\" class=\"w-8 min-w-8 p-0\" mat-cell>\r\n              <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\" />\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Text Columns -->\r\n          <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n            <ng-container\r\n              *ngIf=\"column.type === 'text'\"\r\n              [matColumnDef]=\"column.property\">\r\n              <th\r\n                *matHeaderCellDef\r\n                class=\"uppercase\"\r\n                mat-header-cell\r\n                mat-sort-header>\r\n                {{ column.label }}\r\n              </th>\r\n              <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n                {{ row[column.property] }}\r\n              </td>\r\n            </ng-container>\r\n          </ng-container>\r\n  \r\n          <!-- Conversion (kg-m)-->\r\n          <ng-container matColumnDef=\"contact\">\r\n            <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n            <td *matCellDef=\"let row\" mat-cell>\r\n              <div class=\"flex\">\r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center hover:bg-hover text-primary-600 bg-primary-600/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\r\n                </a>\r\n  \r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal-600 bg-teal/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\r\n                </a>\r\n  \r\n                <a\r\n                  (click)=\"$event.stopPropagation()\"\r\n                  class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green-600 bg-green-600/10\"\r\n                  mat-icon-button>\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\r\n                </a>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Label Column -->\r\n          <ng-container matColumnDef=\"labels\">\r\n            <th\r\n              *matHeaderCellDef\r\n              class=\"uppercase\"\r\n              mat-header-cell\r\n              mat-sort-header>\r\n              Qualité\r\n            </th>\r\n            <td *matCellDef=\"let row\" mat-cell>\r\n              <div\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"flex items-center gap-1\">\r\n                <div\r\n                  class=\"bg-base text-hint cursor-pointer hover:bg-hover flex-none flex items-center justify-center\">\r\n                  <mat-icon class=\"icon-sm\" svgIcon=\"mat:add\"></mat-icon>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <!-- Action Column -->\r\n          <ng-container matColumnDef=\"actions\">\r\n            <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n            <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n              <button\r\n                (click)=\"$event.stopPropagation()\"\r\n                [matMenuTriggerData]=\"{ site: row }\"\r\n                [matMenuTriggerFor]=\"actionsMenu\"\r\n                mat-icon-button\r\n                type=\"button\">\r\n                <mat-icon svgIcon=\"mat:more_horiz\"></mat-icon>\r\n              </button>\r\n            </td>\r\n          </ng-container>\r\n  \r\n          <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n          <tr\r\n            (click)=\"updateDepense(row)\"\r\n            *matRowDef=\"let row; columns: visibleColumns\"\r\n            @fadeInUp\r\n            class=\"hover:bg-hover transition duration-400 ease-out-swift cursor-pointer\"\r\n            mat-row></tr>\r\n        </table>\r\n  \r\n        <mat-paginator\r\n          [pageSizeOptions]=\"pageSizeOptions\"\r\n          [pageSize]=\"pageSize\"\r\n          class=\"sticky left-0\"></mat-paginator>\r\n      </div>\r\n    </vex-page-layout-content>\r\n  </vex-page-layout>\r\n  \r\n  <mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n    <button\r\n      (click)=\"toggleColumnVisibility(column, $event)\"\r\n      *ngFor=\"let column of columns\"\r\n      class=\"mat-menu-item block\">\r\n      <mat-checkbox\r\n        (click)=\"$event.stopPropagation()\"\r\n        [(ngModel)]=\"column.visible\"\r\n        color=\"primary\">\r\n        {{ column.label }}\r\n      </mat-checkbox>\r\n    </button>\r\n  </mat-menu>\r\n  \r\n  <mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n    <ng-template \r\n    *ngIf=\"siteId === user.site_id\" let-site=\"site\" matMenuContent>\r\n      <button (click)=\"updateDepense(site)\" mat-menu-item>\r\n        <mat-icon svgIcon=\"mat:edit\"></mat-icon>\r\n        <span>Modifier</span>\r\n      </button>\r\n    </ng-template>\r\n  </mat-menu>\r\n  ","import { LocalStorageService } from \"../services/local-storage/local-storage.service\";\r\nimport { User } from \"./user\";\r\n\r\nexport class Depenses {\r\n  id: number;\r\n  site_id: number;\r\n  site: string;\r\n  user_id: number;\r\n  user: string;\r\n  details: string;\r\n  amount: number;\r\n  expense_date: string;\r\n  displayed_Date: string;\r\n\r\n\r\n  constructor(depense?: any) {\r\n    const today = new Date(Date.now());\r\n    const localStorageService = LocalStorageService.getInstance();\r\n    const userData = localStorageService.getData('dataUser');\r\n    const userInfo = userData ? new User(JSON.parse(userData)) : new User({ id: null, first_name: 'Unknown', last_name: 'User' });\r\n    this.user_id = depense.user_id ? depense.user_id : userInfo.id;\r\n    this.user = (depense.user  && depense.user.first_name)? depense.user.first_name+' '+depense.user.last_name :(depense.user)? depense.user: `${userInfo.first_name} ${userInfo.last_name}`;\r\n    if (depense) {\r\n      this.id = depense.id;\r\n      this.site_id = depense.site_id;\r\n      this.site = (depense.site && depense.site.name) ? depense.site.name : depense.site;\r\n      this.details = depense.details;\r\n      this.amount = depense.amount;\r\n      this.expense_date = (depense.expense_date) ? depense.expense_date : today.toISOString().substring(0, 10);\r\n      this.displayed_Date = this.formatDate(new Date(this.expense_date));\r\n      \r\n    } else {\r\n      this.id = 0;\r\n      this.site_id = 0;\r\n      this.site = '';\r\n      this.details = '';\r\n      this.amount = 0;\r\n      this.expense_date = today.toISOString().substring(0, 10);\r\n      this.displayed_Date = this.formatDate(new Date(this.expense_date));\r\n      \r\n    }\r\n  }\r\n\r\n  private formatDate(date: Date): string {\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const monthNames = [\r\n      'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\r\n      'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const year = date.getFullYear().toString();\r\n    return `${day} ${month} ${year}`;\r\n  }\r\n}\r\n","export class Site {\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n\r\n  constructor(site?: any) {\r\n    if (site) {\r\n      this.id = site.id;\r\n      this.name = site.name;\r\n      this.address = site.address;\r\n    } else {\r\n      this.id = 0;\r\n      this.name = '';\r\n      this.address = '';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Depenses } from 'src/app/models/depenses';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DepenseService {\r\n  BASE_URL = environment.BASE_URL\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ) { }\r\n\r\n  addDepense(depense:Depenses):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/dailyexpense`, depense,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getDepenses():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/dailyexpense`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateDepense(depense:Depenses):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/dailyexpense`, depense,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  \r\n  getDepensesSites(site_id:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site_id+`/stockDailyExpenses`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  \r\n  getDaylyDepensesSites(site_id:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site_id+`/stockDailyExpenses`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SitesService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  getSites():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites`, {... this.localStorage.getAuthorization()});\r\n  }\r\n\r\n  addSite(site:Site):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/sites`, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateSite(site:Site):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/sites/`+site.id, site,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSite(id:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+id, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  getSiteStocks(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/stocks`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n}\r\n"],"names":["ReactiveFormsModule","Validators","MAT_DIALOG_DATA","MatDialogModule","MatInputModule","MatFormFieldModule","MatDividerModule","MatIconModule","MatMenuModule","MatButtonModule","NgIf","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","DepenseCreateUpdateComponent","_","id","constructor","defaults","dialogRef","fb","form","group","details","required","amount","min","mode","ngOnInit","patchValue","save","createDepense","updateDepense","depense","value","close","Error","isCreateMode","isUpdateMode","_2","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","_3","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DepenseCreateUpdateComponent_Template","rf","ctx","ɵɵlistener","DepenseCreateUpdateComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","DepenseCreateUpdateComponent_h2_2_Template","DepenseCreateUpdateComponent_h2_3_Template","ɵɵelement","DepenseCreateUpdateComponent_mat_error_13_Template","DepenseCreateUpdateComponent_mat_error_19_Template","DepenseCreateUpdateComponent_mat_error_20_Template","DepenseCreateUpdateComponent_button_24_Template","DepenseCreateUpdateComponent_button_25_Template","ɵɵproperty","ɵɵadvance","controls","tmp_3_0","get","hasError","tmp_4_0","tmp_5_0","invalid","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinValidator","FormGroupDirective","FormControlName","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i3","MatButton","MatIconButton","i4","MatIcon","i5","MatDivider","i6","MatFormField","MatLabel","MatError","MatPrefix","i7","MatInput","styles","DestroyRef","inject","ReplaySubject","filter","map","Depenses","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","SelectionModel","fadeInUp400ms","stagger40ms","FormsModule","UntypedFormControl","MatCheckboxModule","MatTooltipModule","NgClass","NgFor","VexPageLayoutContentDirective","MatButtonToggleModule","VexPageLayoutHeaderDirective","VexPageLayoutComponent","takeUntilDestroyed","MatSnackBarModule","User","Site","ɵɵtextInterpolate2","ctx_r0","site","name","totalDepense","DepenseComponent_span_7_span_2_Template","ɵɵtextInterpolate1","ctx_r1","selection","selected","length","DepenseComponent_button_14_Template_button_click_0_listener","ɵɵrestoreView","_r22","ctx_r21","ɵɵnextContext","ɵɵresetView","DepenseComponent_th_17_Template_mat_checkbox_change_1_listener","$event","_r24","ctx_r23","masterToggle","ctx_r3","hasValue","isAllSelected","DepenseComponent_td_18_Template_mat_checkbox_change_1_listener","restoredCtx","_r27","row_r25","$implicit","ctx_r26","toggle","DepenseComponent_td_18_Template_mat_checkbox_click_1_listener","stopPropagation","ctx_r4","isSelected","row_r29","ɵɵsanitizeUrl","column_r30","label","cssClasses","row_r35","property","ɵɵelementContainerStart","DepenseComponent_ng_container_22_ng_container_1_th_1_Template","DepenseComponent_ng_container_22_ng_container_1_td_2_Template","ɵɵelementContainerEnd","DepenseComponent_ng_container_22_ng_container_1_Template","type","DepenseComponent_td_25_Template_a_click_2_listener","DepenseComponent_td_25_Template_a_click_4_listener","DepenseComponent_td_25_Template_a_click_6_listener","DepenseComponent_td_28_Template_div_click_1_listener","DepenseComponent_td_31_Template_button_click_1_listener","ɵɵpureFunction1","_c0","row_r44","_r18","DepenseComponent_tr_33_Template_tr_click_0_listener","_r48","row_r46","ctx_r47","undefined","DepenseComponent_button_37_Template_button_click_0_listener","_r51","column_r49","ctx_r50","toggleColumnVisibility","DepenseComponent_button_37_Template_mat_checkbox_click_1_listener","DepenseComponent_button_37_Template_mat_checkbox_ngModelChange_1_listener","visible","DepenseComponent_40_ng_template_0_Template_button_click_0_listener","_r57","site_r55","ctx_r56","DepenseComponent_40_ng_template_0_Template","DepenseComponent","router","dialog","depenseService","snackbar","siteService","localStorage","layoutCtrl","subject$","data$","asObservable","depenses","siteId","columns","pageSize","pageSizeOptions","searchCtrl","destroyRef","visibleColumns","column","getData","getDepensesSites","pipe","result","dailyExpenses","getSite","data","user","JSON","parse","history","state","site_id","subscribe","next","dataSource","Boolean","reduce","total","valueChanges","onFilterChange","ngAfterViewInit","paginator","sort","open","afterClosed","newDepense","addDepense","status","unshift","duration","updatedDepense","index","findIndex","existingSite","trim","toLowerCase","event","stopImmediatePropagation","numSelected","numRows","clear","forEach","row","select","trackByProperty","onLabelChange","change","s","Router","MatDialog","DepenseService","MatSnackBar","SitesService","LocalStorageService","viewQuery","DepenseComponent_Query","DepenseComponent_span_6_Template","DepenseComponent_span_7_Template","DepenseComponent_button_14_Template","DepenseComponent_th_17_Template","DepenseComponent_td_18_Template","DepenseComponent_th_20_Template","DepenseComponent_td_21_Template","DepenseComponent_ng_container_22_Template","DepenseComponent_th_24_Template","DepenseComponent_td_25_Template","DepenseComponent_th_27_Template","DepenseComponent_td_28_Template","DepenseComponent_th_30_Template","DepenseComponent_td_31_Template","DepenseComponent_tr_32_Template","DepenseComponent_tr_33_Template","DepenseComponent_button_37_Template","DepenseComponent_40_Template","ɵɵclassProp","isEmpty","_r16","FormControlDirective","i8","MatIconAnchor","MatMiniFabButton","i9","MatTooltip","i10","i11","MatMenu","MatMenuItem","MatMenuContent","MatMenuTrigger","i12","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i13","MatSortHeader","i14","MatCheckbox","i15","NgModel","i16","i17","animation","today","Date","now","localStorageService","getInstance","userData","userInfo","first_name","last_name","user_id","expense_date","toISOString","substring","displayed_Date","formatDate","date","day","getDate","toString","padStart","monthNames","month","getMonth","year","getFullYear","address","environment","httpClient","BASE_URL","post","getAuthorization","getDepenses","put","getDaylyDepensesSites","ɵɵinject","HttpClient","factory","ɵfac","providedIn","getSites","addSite","updateSite","getSiteStocks"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}