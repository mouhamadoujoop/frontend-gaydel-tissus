{"version":3,"file":"src_app_components_products_products_component_ts.js","mappings":"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","sources":["./src/app/components/products/products-create-update/products-create-update.component.ts","./src/app/components/products/products-create-update/products-create-update.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/models/products.ts","./src/app/services/product/products.service.ts"],"sourcesContent":["\r\n\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogModule,\r\n  MatDialogRef\r\n} from '@angular/material/dialog';\r\nimport { Product } from '../../../models/products';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgIf } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'vex-products-create-update',\r\n  templateUrl: './products-create-update.component.html',\r\n  styleUrls: ['./products-create-update.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule\r\n  ]\r\n})\r\nexport class ProductsCreateUpdateComponent implements OnInit {\r\n  static id = 100;\r\n\r\n  form = this.fb.group({\r\n    id: [ProductsCreateUpdateComponent.id++],\r\n    name: [this.defaults?.name , [Validators.required]],\r\n    quality: [this.defaults?.quality , [Validators.required]],\r\n    conversion_rate: [this.defaults?.conversion_rate , [Validators.required, Validators.min(0)]]\r\n  });\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public defaults: Product | undefined,\r\n    private dialogRef: MatDialogRef<ProductsCreateUpdateComponent>,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.defaults) {\r\n      this.mode = 'update';\r\n    } else {\r\n      this.defaults = {} as Product;\r\n    }\r\n\r\n    this.form.patchValue(this.defaults);\r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createProduct();\r\n    } else if (this.mode === 'update') {\r\n      this.updateProduct();\r\n    }\r\n  }\r\n\r\n  createProduct() {\r\n    const products = this.form.value;\r\n\r\n\r\n    this.dialogRef.close(products);\r\n  }\r\n\r\n  updateProduct() {\r\n    const products = this.form.value;\r\n\r\n    if (!this.defaults) {\r\n      throw new Error(\r\n        'Product ID does not exist, this roles cannot be updated'\r\n      );\r\n    }\r\n\r\n    products.id = this.defaults.id;\r\n\r\n    this.dialogRef.close(products);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n}\r\n\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div class=\"flex items-center\" mat-dialog-title>\r\n\r\n    <h2\r\n      *ngIf=\"form.controls.name.value || form.controls.name.value\"\r\n      class=\"headline m-0 flex-auto\">\r\n      {{ form.controls.name.value + \" \"}}\r\n    </h2>\r\n    <h2\r\n      *ngIf=\"!form.controls.name.value && !form.controls.name.value\"\r\n      class=\"headline m-0 flex-auto\">\r\n      Nouveau Articles\r\n    </h2>\r\n\r\n\r\n    <button\r\n      class=\"text-secondary\"\r\n      mat-dialog-close\r\n      mat-icon-button\r\n      type=\"button\">\r\n      <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-divider class=\"text-border\"></mat-divider>\r\n\r\n  <mat-dialog-content class=\"flex flex-col\">\r\n\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Article</mat-label>\r\n      <input formControlName=\"name\" matInput />\r\n      <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n      <mat-error *ngIf=\"form.get('name')?.hasError('required')\">\r\n        Nom Article requise\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Qualité</mat-label>\r\n      <input formControlName=\"quality\" matInput />\r\n      <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n      <mat-error *ngIf=\"form.get('quality')?.hasError('required')\">\r\n        Qualité requise\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Conversion(Kg-m)</mat-label>\r\n      <input formControlName=\"conversion_rate\" type=\"number\" matInput />\r\n      <mat-icon matIconPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n      <mat-error *ngIf=\"form.get('conversion_rate')?.hasError('required')\">\r\n        Conversion requise\r\n      </mat-error>\r\n      <mat-error *ngIf=\"form.get('conversion_rate')?.hasError('min')\">\r\n        La conversion doit être positive\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">Annuler</button>\r\n    <button\r\n      *ngIf=\"isCreateMode() && form.invalid==false\"\r\n      color=\"primary\"\r\n      mat-flat-button\r\n      type=\"submit\">\r\n      Ajouter Article\r\n    </button>\r\n    <button\r\n      *ngIf=\"isUpdateMode() && form.invalid==false\"\r\n      color=\"primary\"\r\n      mat-flat-button\r\n      type=\"submit\">\r\n      Modifier Article\r\n    </button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n\r\n","\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  DestroyRef,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Observable, of, ReplaySubject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Product } from '../../models/products';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\r\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\r\nimport { ProductsCreateUpdateComponent } from './products-create-update/products-create-update.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\r\nimport { stagger40ms } from '@vex/animations/stagger.animation';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  UntypedFormControl\r\n} from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { VexPageLayoutContentDirective } from '@vex/components/vex-page-layout/vex-page-layout-content.directive';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { VexBreadcrumbsComponent } from '@vex/components/vex-breadcrumbs/vex-breadcrumbs.component';\r\nimport { VexPageLayoutHeaderDirective } from '@vex/components/vex-page-layout/vex-page-layout-header.directive';\r\nimport { VexPageLayoutComponent } from '@vex/components/vex-page-layout/vex-page-layout.component';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ProductsService } from 'src/app/services/product/products.service';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'vex-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.scss'],\r\n  standalone : true,\r\n  animations: [fadeInUp400ms, stagger40ms],\r\n  imports: [\r\n    VexPageLayoutComponent,\r\n    VexPageLayoutHeaderDirective,\r\n    VexBreadcrumbsComponent,\r\n    MatButtonToggleModule,\r\n    ReactiveFormsModule,\r\n    VexPageLayoutContentDirective,\r\n    NgIf,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    NgFor,\r\n    NgClass,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule\r\n  ]\r\n})\r\nexport class ProductsComponent implements OnInit, AfterViewInit {\r\n  layoutCtrl = new UntypedFormControl('boxed');\r\n\r\n  /**\r\n   * Simulating a service with HTTP that returns Observables\r\n   * You probably want to remove this and do all requests in a service with HTTP\r\n   */\r\n  subject$: ReplaySubject<Product[]> = new ReplaySubject<Product[]>(1);\r\n  data$: Observable<Product[]> = this.subject$.asObservable();\r\n  products: Product[] = [];\r\n\r\n  @Input()\r\n  columns: TableColumn<Product>[] = [\r\n    {\r\n      label: 'Articles',\r\n      property: 'name',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Qualité',\r\n      property: 'quality',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n\r\n    {\r\n      label: 'Conversion(Kg-m)',\r\n      property: 'conversion_rate',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['text-secondary', 'font-medium']\r\n    },\r\n\r\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 20, 50];\r\n  dataSource!: MatTableDataSource<Product>;\r\n  selection = new SelectionModel<Product>(true, []);\r\n  searchCtrl = new UntypedFormControl();\r\n\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\r\n\r\n  private readonly destroyRef: DestroyRef = inject(DestroyRef);\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private productService: ProductsService,\r\n    private snackbar: MatSnackBar,\r\n  ) {}\r\n\r\n  get visibleColumns() {\r\n    return this.columns\r\n      .filter((column) => column.visible)\r\n      .map((column) => column.property);\r\n  }\r\n\r\n  /**\r\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\r\n   * We are simulating this request here.\r\n   */\r\n    getData() {\r\n      return this.productService.getProducts().pipe(\r\n        map((result: any) => {\r\n          if (result.total) {\r\n            this.products = result.data || [];\r\n          }\r\n          return this.products.map((product) => new Product(product));\r\n        })\r\n      );\r\n    }\r\n  \r\n  ngOnInit() {\r\n    this.getData().subscribe((products) => {\r\n      this.subject$.next(products);\r\n    });\r\n    \r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.data$.pipe(filter<Product[]>(Boolean)).subscribe((products) => {\r\n      this.products = products;\r\n        this.dataSource.data = products;\r\n    });\r\n\r\n    this.searchCtrl.valueChanges\r\n      .pipe(takeUntilDestroyed(this.destroyRef))\r\n      .subscribe((value) => this.onFilterChange(value));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.paginator) {\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    if (this.sort) {\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  createProduct() {\r\n    this.dialog\r\n      .open(ProductsCreateUpdateComponent)\r\n      .afterClosed()\r\n      .subscribe((product: Product) => {\r\n        if (product) {\r\n          this.productService.addProduct(product).subscribe((result:any) => {\r\n            if (result.status === 200) {\r\n              this.products.unshift(new Product(product));\r\n              this.subject$.next(this.products);\r\n              this.snackbar.open(\r\n                \"Produit ajouter avec succés\",\r\n                'MERCI',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n            }else{\r\n              this.snackbar.open(\r\n                \"Echec Ajout Produit\",\r\n                'MERCI DE REESSAYER',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n      \r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  updateProduct(product: Product) {\r\n    this.dialog\r\n      .open(ProductsCreateUpdateComponent, {\r\n        data: product\r\n      })\r\n      .afterClosed()\r\n      .subscribe((updatedProduct) => {\r\n\r\n        if (updatedProduct) {\r\n          this.productService.updateProduct(updatedProduct).subscribe((result:any) => {\r\n            if (result.status === 200) {\r\n              const index = this.products.findIndex(\r\n                (existingProduct) => existingProduct.id === updatedProduct.id\r\n              );\r\n              this.products[index] = new Product(updatedProduct);\r\n              this.subject$.next(this.products);\r\n              this.snackbar.open(\r\n                \"Produit modifier avec succés\",\r\n                'MERCI',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n            }else{\r\n              this.snackbar.open(\r\n                \"Echec Modification Produit\",\r\n                'MERCI DE REESSAYER',\r\n                {\r\n                  duration: 1000\r\n                }\r\n              );\r\n      \r\n            }\r\n          });\r\n          \r\n        }\r\n      });\r\n  }\r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column: TableColumn<Product>, event: Event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  onLabelChange(change: MatSelectChange, row: Product) {\r\n    const index = this.products.findIndex((p) => p === row);\r\n    //this.products[index].labels = change.value;\r\n    this.subject$.next(this.products);\r\n  }\r\n}\r\n\r\n","<vex-page-layout>\r\n  <vex-page-layout-header\r\n    class=\"pb-1 flex flex-col items-start justify-center\">\r\n<!--    <div-->\r\n<!--      [class.container]=\"layoutCtrl.value === 'boxed'\"-->\r\n<!--      [class.px-6]=\"layoutCtrl.value === 'fullwidth'\"-->\r\n<!--      class=\"w-full flex flex-col sm:flex-row justify-between\">-->\r\n<!--      <div>-->\r\n<!--        <h1 class=\"title mt-0 mb-1\">All-In-One Table</h1>-->\r\n<!--        <vex-breadcrumbs-->\r\n<!--          [crumbs]=\"['Apps', 'All-In-One Table']\"></vex-breadcrumbs>-->\r\n<!--      </div>-->\r\n\r\n<!--      <div class=\"hidden sm:block\">-->\r\n<!--        <mat-button-toggle-group-->\r\n<!--          [formControl]=\"layoutCtrl\"-->\r\n<!--          class=\"mt-4 sm:mt-0\">-->\r\n<!--          <mat-button-toggle value=\"boxed\">Boxed</mat-button-toggle>-->\r\n<!--          <mat-button-toggle value=\"fullwidth\">Full-Width</mat-button-toggle>-->\r\n<!--        </mat-button-toggle-group>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n  </vex-page-layout-header>\r\n\r\n  <vex-page-layout-content\r\n    [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n    [class.px-6]=\"layoutCtrl.value === 'fullwidth'\"\r\n    class=\"-mt-6\">\r\n    <div class=\"card overflow-auto -mt-16\">\r\n      <div\r\n        class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\r\n        <h2\r\n          class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\r\n          <span *ngIf=\"selection.isEmpty()\">products</span>\r\n        </h2>\r\n\r\n       \r\n\r\n        <mat-form-field subscriptSizing=\"dynamic\">\r\n          <mat-icon matIconPrefix svgIcon=\"mat:search\"></mat-icon>\r\n          <input\r\n            matInput\r\n            [formControl]=\"searchCtrl\"\r\n            placeholder=\"Search&hellip;\"\r\n            type=\"text\" />\r\n        </mat-form-field>\r\n\r\n        <span class=\"flex-1\"></span>\r\n\r\n        <button\r\n          [matMenuTriggerFor]=\"columnFilterMenu\"\r\n          class=\"ml-4 flex-none\"\r\n          mat-icon-button\r\n          matTooltip=\"Filter Columns\"\r\n          type=\"button\">\r\n          <mat-icon svgIcon=\"mat:filter_list\"></mat-icon>\r\n        </button>\r\n\r\n        <button\r\n          (click)=\"createProduct()\"\r\n          class=\"ml-4 flex-none\"\r\n          color=\"primary\"\r\n          mat-mini-fab\r\n          matTooltip=\"Add product\"\r\n          type=\"button\">\r\n          <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n        </button>\r\n      </div>\r\n\r\n      <table\r\n        @stagger\r\n        [dataSource]=\"dataSource\"\r\n        class=\"w-full\"\r\n        mat-table\r\n        matSort>\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Checkbox Column -->\r\n        <ng-container matColumnDef=\"checkbox\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            <mat-checkbox\r\n              (change)=\"$event ? masterToggle() : null\"\r\n              [checked]=\"selection.hasValue() && isAllSelected()\"\r\n              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n              color=\"primary\">\r\n            </mat-checkbox>\r\n          </th>\r\n          <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n            <mat-checkbox\r\n              (change)=\"$event ? selection.toggle(row) : null\"\r\n              (click)=\"$event.stopPropagation()\"\r\n              [checked]=\"selection.isSelected(row)\"\r\n              color=\"primary\">\r\n            </mat-checkbox>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Image Column -->\r\n        <ng-container matColumnDef=\"image\">\r\n          <th *matHeaderCellDef mat-header-cell></th>\r\n          <td *matCellDef=\"let row\" class=\"w-8 min-w-8 p-0\" mat-cell>\r\n            <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\" />\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Text Columns -->\r\n        <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n          <ng-container\r\n            *ngIf=\"column.type === 'text'\"\r\n            [matColumnDef]=\"column.property\">\r\n            <th\r\n              *matHeaderCellDef\r\n              class=\"uppercase\"\r\n              mat-header-cell\r\n              mat-sort-header>\r\n              {{ column.label }}\r\n            </th>\r\n            <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n              {{ row[column.property] }}\r\n            </td>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Conversion (kg-m)-->\r\n        <ng-container matColumnDef=\"contact\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div class=\"flex\">\r\n              <a\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"w-8 h-8 p-0 leading-none flex items-center justify-center hover:bg-hover text-primary-600 bg-primary-600/10\"\r\n                mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\r\n              </a>\r\n\r\n              <a\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal-600 bg-teal/10\"\r\n                mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\r\n              </a>\r\n\r\n              <a\r\n                (click)=\"$event.stopPropagation()\"\r\n                class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green-600 bg-green-600/10\"\r\n                mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Label Column -->\r\n        <ng-container matColumnDef=\"labels\">\r\n          <th\r\n            *matHeaderCellDef\r\n            class=\"uppercase\"\r\n            mat-header-cell\r\n            mat-sort-header>\r\n            Qualité\r\n          </th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div\r\n              (click)=\"$event.stopPropagation()\"\r\n              class=\"flex items-center gap-1\">\r\n              <div\r\n                class=\"bg-base text-hint cursor-pointer hover:bg-hover flex-none flex items-center justify-center\">\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:add\"></mat-icon>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Action Column -->\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n            <button\r\n              (click)=\"$event.stopPropagation()\"\r\n              [matMenuTriggerData]=\"{ product: row }\"\r\n              [matMenuTriggerFor]=\"actionsMenu\"\r\n              mat-icon-button\r\n              type=\"button\">\r\n              <mat-icon svgIcon=\"mat:more_horiz\"></mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n        <tr\r\n          (click)=\"updateProduct(row)\"\r\n          *matRowDef=\"let row; columns: visibleColumns\"\r\n          @fadeInUp\r\n          class=\"hover:bg-hover transition duration-400 ease-out-swift cursor-pointer\"\r\n          mat-row></tr>\r\n      </table>\r\n\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"pageSizeOptions\"\r\n        [pageSize]=\"pageSize\"\r\n        class=\"sticky left-0\"></mat-paginator>\r\n    </div>\r\n  </vex-page-layout-content>\r\n</vex-page-layout>\r\n\r\n<mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button\r\n    (click)=\"toggleColumnVisibility(column, $event)\"\r\n    *ngFor=\"let column of columns\"\r\n    class=\"mat-menu-item block\">\r\n    <mat-checkbox\r\n      (click)=\"$event.stopPropagation()\"\r\n      [(ngModel)]=\"column.visible\"\r\n      color=\"primary\">\r\n      {{ column.label }}\r\n    </mat-checkbox>\r\n  </button>\r\n</mat-menu>\r\n\r\n<mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <ng-template let-product=\"product\" matMenuContent>\r\n    <button (click)=\"updateProduct(product)\" mat-menu-item>\r\n      <mat-icon svgIcon=\"mat:edit\"></mat-icon>\r\n      <span>Modify</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","export class Product {\r\n  id: number;\r\n  name: string;\r\n  quality: string;\r\n  conversion_rate: number;\r\n\r\n  constructor(product: any) {\r\n    this.id = product.id;\r\n    this.name = product.name;\r\n    this.quality = product.quality;\r\n    this.conversion_rate = product.conversion_rate;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Product } from 'src/app/models/products';\r\nimport { Site } from 'src/app/models/sites';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n  BASE_URL = environment.BASE_URL\r\n  //private API_URL= environment.API_URL;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private localStorage: LocalStorageService\r\n  ){}\r\n  \r\n  \r\n\r\n  getProducts():Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/products`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n  getProductNotInStock(site:Site):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+site.id+`/productsWithoutStock`, {... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  addProduct(product:Product):Observable<any>{\r\n    return this.httpClient.post(`${this.BASE_URL}/products`, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  updateProduct(product:Product):Observable<any>{\r\n    return this.httpClient.put(`${this.BASE_URL}/products/`+product.id, product,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n  checkProductExistsInStock(product:number,site:number):Observable<any>{\r\n    return this.httpClient.get(`${this.BASE_URL}/sites/`+product+`/product/`+site+`/checkProductExistsInSiteStock`,{... this.localStorage.getAuthorization()});\r\n\r\n  }\r\n\r\n\r\n  \r\n}\r\n"],"names":["ReactiveFormsModule","Validators","MAT_DIALOG_DATA","MatDialogModule","MatInputModule","MatFormFieldModule","MatDividerModule","MatIconModule","MatMenuModule","MatButtonModule","NgIf","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","form","controls","name","value","ProductsCreateUpdateComponent","_","id","constructor","defaults","dialogRef","fb","group","required","quality","conversion_rate","min","mode","ngOnInit","patchValue","save","createProduct","updateProduct","products","close","Error","isCreateMode","isUpdateMode","_2","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","_3","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ProductsCreateUpdateComponent_Template","rf","ctx","ɵɵlistener","ProductsCreateUpdateComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","ProductsCreateUpdateComponent_h2_2_Template","ProductsCreateUpdateComponent_h2_3_Template","ɵɵelement","ProductsCreateUpdateComponent_mat_error_13_Template","ProductsCreateUpdateComponent_mat_error_19_Template","ProductsCreateUpdateComponent_mat_error_25_Template","ProductsCreateUpdateComponent_mat_error_26_Template","ProductsCreateUpdateComponent_button_30_Template","ProductsCreateUpdateComponent_button_31_Template","ɵɵproperty","tmp_3_0","get","hasError","tmp_4_0","tmp_5_0","tmp_6_0","invalid","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","MatDialogClose","MatDialogTitle","MatDialogContent","MatDialogActions","i3","MatButton","MatIconButton","i4","MatIcon","i5","MatDivider","i6","MatFormField","MatLabel","MatError","MatPrefix","i7","MatInput","styles","DestroyRef","inject","ReplaySubject","filter","map","Product","MatTableDataSource","MatTableModule","MatPaginator","MatPaginatorModule","MatSort","MatSortModule","SelectionModel","fadeInUp400ms","stagger40ms","FormsModule","UntypedFormControl","MatCheckboxModule","MatTooltipModule","NgClass","NgFor","VexPageLayoutContentDirective","MatButtonToggleModule","VexPageLayoutHeaderDirective","VexPageLayoutComponent","takeUntilDestroyed","MatSnackBarModule","ProductsComponent_th_17_Template_mat_checkbox_change_1_listener","$event","ɵɵrestoreView","_r19","ctx_r18","ɵɵnextContext","ɵɵresetView","masterToggle","ctx_r1","selection","hasValue","isAllSelected","ProductsComponent_td_18_Template_mat_checkbox_change_1_listener","restoredCtx","_r22","row_r20","$implicit","ctx_r21","toggle","ProductsComponent_td_18_Template_mat_checkbox_click_1_listener","stopPropagation","ctx_r2","isSelected","row_r24","ɵɵsanitizeUrl","column_r25","label","cssClasses","row_r30","property","ɵɵelementContainerStart","ProductsComponent_ng_container_22_ng_container_1_th_1_Template","ProductsComponent_ng_container_22_ng_container_1_td_2_Template","ɵɵelementContainerEnd","ProductsComponent_ng_container_22_ng_container_1_Template","type","ProductsComponent_td_25_Template_a_click_2_listener","ProductsComponent_td_25_Template_a_click_4_listener","ProductsComponent_td_25_Template_a_click_6_listener","ProductsComponent_td_28_Template_div_click_1_listener","ProductsComponent_td_31_Template_button_click_1_listener","ɵɵpureFunction1","_c0","row_r39","_r16","ProductsComponent_tr_33_Template_tr_click_0_listener","_r43","row_r41","ctx_r42","undefined","ProductsComponent_button_37_Template_button_click_0_listener","_r46","column_r44","ctx_r45","toggleColumnVisibility","ProductsComponent_button_37_Template_mat_checkbox_click_1_listener","ProductsComponent_button_37_Template_mat_checkbox_ngModelChange_1_listener","visible","ProductsComponent_ng_template_40_Template_button_click_0_listener","_r51","product_r49","product","ctx_r50","ProductsComponent","dialog","productService","snackbar","layoutCtrl","subject$","data$","asObservable","columns","pageSize","pageSizeOptions","searchCtrl","destroyRef","visibleColumns","column","getData","getProducts","pipe","result","total","data","subscribe","next","dataSource","Boolean","valueChanges","onFilterChange","ngAfterViewInit","paginator","sort","open","afterClosed","addProduct","status","unshift","duration","updatedProduct","index","findIndex","existingProduct","trim","toLowerCase","event","stopImmediatePropagation","numSelected","selected","length","numRows","clear","forEach","row","select","trackByProperty","onLabelChange","change","p","MatDialog","ProductsService","MatSnackBar","viewQuery","ProductsComponent_Query","ProductsComponent_span_6_Template","ProductsComponent_Template_button_click_13_listener","ProductsComponent_th_17_Template","ProductsComponent_td_18_Template","ProductsComponent_th_20_Template","ProductsComponent_td_21_Template","ProductsComponent_ng_container_22_Template","ProductsComponent_th_24_Template","ProductsComponent_td_25_Template","ProductsComponent_th_27_Template","ProductsComponent_td_28_Template","ProductsComponent_th_30_Template","ProductsComponent_td_31_Template","ProductsComponent_tr_32_Template","ProductsComponent_tr_33_Template","ProductsComponent_button_37_Template","ProductsComponent_ng_template_40_Template","ɵɵclassProp","isEmpty","_r14","FormControlDirective","MatIconAnchor","MatMiniFabButton","MatTooltip","i8","MatMenu","MatMenuItem","MatMenuContent","MatMenuTrigger","i9","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i10","MatSortHeader","i11","MatCheckbox","i12","NgModel","i13","i14","animation","environment","httpClient","router","localStorage","BASE_URL","getAuthorization","getProductNotInStock","site","post","put","checkProductExistsInStock","ɵɵinject","HttpClient","Router","LocalStorageService","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}